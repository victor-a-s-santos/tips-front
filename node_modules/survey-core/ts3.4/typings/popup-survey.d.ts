import { Base } from "./base";
import { SurveyModel } from "./survey";
import { LocalizableString } from "./localizablestring";
/**
 * A Model for a survey running in the Popup Window.
 *
 * [View Demo](https://surveyjs.io/form-library/examples/popup-survey/ (linkStyle))
 */
export declare class PopupSurveyModel extends Base {
    surveyValue: SurveyModel;
    windowElement: HTMLDivElement;
    templateValue: string;
    expandedChangedCallback: () => void;
    showingChangedCallback: () => void;
    constructor(jsonObj: any, initialModel?: SurveyModel);
    protected onCreating(): void;
    getType(): string;
    /*
    * A survey object.
    * @see SurveyModel
    */
    readonly survey: SurveyModel;
    /**
     * Set this value to negative value, for example -1, to avoid closing the popup window on completing the survey. Leave it equals to 0 (default value) to close the popup window immediately, or set it to 3, 5, 10, ... to close the popup window in 3, 5, 10 seconds.
     */
    closeOnCompleteTimeout: number;
    /*
    * Returns true if the popup window is currently showing. Set it to true to show the popup window and false to hide it.
    * @see show
    * @see hide
    */
    isShowing: boolean;
    /**
     * Show the popup window
     * @see hide
     * @see isShowing
     */
    show(): void;
    /**
     * Hide the popup window
     * @see show
     * @see isShowing
     */
    hide(): void;
    /*
    * Returns true if the popup window is expanded. Set it to true to expand the popup window or false to collapse it.
    * @see expand
    * @see collapse
    */
    isExpanded: boolean;
    protected onExpandedChanged(): void;
    /*
    * The popup window and survey title.
    */
    title: string;
    readonly locTitle: LocalizableString;
    /**
     * Expand the popup window to show the survey.
     */
    expand(): void;
    /**
     * Collapse the popup window and show survey title only.
     */
    collapse(): void;
    changeExpandCollapse(): void;
    readonly css: any;
    readonly cssButton: string;
    readonly cssRoot: string;
    readonly cssBody: string;
    readonly cssHeaderRoot: string;
    readonly cssHeaderTitle: string;
    readonly renderedWidth: string;
    width: string;
    private updateCss;
    private updateCssButton;
    private setCssButton;
    protected createSurvey(jsonObj: any): SurveyModel;
    protected onSurveyComplete(): void;
}
/**
 * Obsolete. Please use PopupSurvey
 */
export declare class SurveyWindowModel extends PopupSurveyModel {
}
