import { ComponentFactoryResolver, OnChanges, SimpleChanges, TemplateRef, ViewContainerRef } from "@angular/core";
import * as i0 from "@angular/core";
interface IDynamicComponent {
    name: string;
    data?: any;
    default?: string;
}
export declare class DynamicComponentDirective implements OnChanges {
    private containerRef;
    private templateRef;
    private resolver;
    constructor(containerRef: ViewContainerRef, templateRef: TemplateRef<unknown>, resolver: ComponentFactoryResolver);
    component: IDynamicComponent;
    private componentInstance;
    ngOnChanges(changes: SimpleChanges): void;
    createComponent(): void;
    updateComponentData(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicComponentDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<DynamicComponentDirective, "[component]", never, { "component": "component"; }, {}, never>;
}
export {};
