import { Component, Input } from "@angular/core";
import { BaseAngular } from "../../base-angular";
import * as i0 from "@angular/core";
import * as i1 from "../svg-icon/svg-icon.component";
import * as i2 from "@angular/common";
export class TimerPanelComponent extends BaseAngular {
    constructor() {
        super(...arguments);
        this.circleLengthValue = 440;
    }
    getStateElement() {
        return this.model;
    }
    getModel() {
        return this.model;
    }
    get circleLength() {
        return this.circleLengthValue;
    }
    get progress() {
        return -this.model.progress * this.circleLength;
    }
}
TimerPanelComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: TimerPanelComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
TimerPanelComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.0.3", type: TimerPanelComponent, selector: "sv-timer-panel", inputs: { model: "model" }, usesInheritance: true, ngImport: i0, template: "<div *ngIf=\"model.showTimerAsClock\" [class]=\"model.rootCss\">\n    <svg *ngIf=\"model.showProgress\" [class]=\"model.getProgressCss()\" [style.stroke-dasharray]=\"circleLength\" [style.stroke-dashoffset]=\"progress\" [size]=\"'auto'\" [iconName]=\"'icon-timercircle'\" sv-ng-svg-icon></svg>\n    <div [class]=\"model.textContainerCss\">\n        <span [class]=\"model.majorTextCss\">{{ model.clockMajorText }}</span>\n        <span *ngIf=\"model.clockMinorText\" [class]=\"model.minorTextCss\">{{ model.clockMinorText }}</span>\n    </div>\n</div>\n<div *ngIf=\"!model.showTimerAsClock\" [class]='model.survey.getCss().timerRoot'>{{model.text}}</div>", components: [{ type: i1.SvgIconComponent, selector: "'[sv-ng-svg-icon]'", inputs: ["size", "width", "height", "iconName", "partCss", "css", "title"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: TimerPanelComponent, decorators: [{
            type: Component,
            args: [{ selector: "sv-timer-panel", template: "<div *ngIf=\"model.showTimerAsClock\" [class]=\"model.rootCss\">\n    <svg *ngIf=\"model.showProgress\" [class]=\"model.getProgressCss()\" [style.stroke-dasharray]=\"circleLength\" [style.stroke-dashoffset]=\"progress\" [size]=\"'auto'\" [iconName]=\"'icon-timercircle'\" sv-ng-svg-icon></svg>\n    <div [class]=\"model.textContainerCss\">\n        <span [class]=\"model.majorTextCss\">{{ model.clockMajorText }}</span>\n        <span *ngIf=\"model.clockMinorText\" [class]=\"model.minorTextCss\">{{ model.clockMinorText }}</span>\n    </div>\n</div>\n<div *ngIf=\"!model.showTimerAsClock\" [class]='model.survey.getCss().timerRoot'>{{model.text}}</div>" }]
        }], propDecorators: { model: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZXItcGFuZWwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvdGltZXItcGFuZWwvdGltZXItcGFuZWwuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvdGltZXItcGFuZWwvdGltZXItcGFuZWwuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFakQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLG9CQUFvQixDQUFDOzs7O0FBU2pELE1BQU0sT0FBTyxtQkFBb0IsU0FBUSxXQUE2QjtJQVB0RTs7UUFTbUIsc0JBQWlCLEdBQUcsR0FBRyxDQUFDO0tBYzFDO0lBWlcsZUFBZTtRQUN2QixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDcEIsQ0FBQztJQUNTLFFBQVE7UUFDaEIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3BCLENBQUM7SUFDRCxJQUFXLFlBQVk7UUFDckIsT0FBTyxJQUFJLENBQUMsaUJBQWlCLENBQUM7SUFDaEMsQ0FBQztJQUNELElBQVcsUUFBUTtRQUNqQixPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQztJQUNsRCxDQUFDOztnSEFmVSxtQkFBbUI7b0dBQW5CLG1CQUFtQix5R0NYaEMsK29CQU9tRzsyRkRJdEYsbUJBQW1CO2tCQVAvQixTQUFTOytCQUVJLGdCQUFnQjs4QkFNbkIsS0FBSztzQkFBYixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBCYXNlLCBTdXJ2ZXlUaW1lck1vZGVsIH0gZnJvbSBcInN1cnZleS1jb3JlXCI7XG5pbXBvcnQgeyBCYXNlQW5ndWxhciB9IGZyb20gXCIuLi8uLi9iYXNlLWFuZ3VsYXJcIjtcblxuQENvbXBvbmVudChcbiAge1xuICAgIHNlbGVjdG9yOiBcInN2LXRpbWVyLXBhbmVsXCIsXG4gICAgdGVtcGxhdGVVcmw6IFwiLi90aW1lci1wYW5lbC5jb21wb25lbnQuaHRtbFwiLFxuICB9XG4pXG5cbmV4cG9ydCBjbGFzcyBUaW1lclBhbmVsQ29tcG9uZW50IGV4dGVuZHMgQmFzZUFuZ3VsYXI8U3VydmV5VGltZXJNb2RlbD4ge1xuICBASW5wdXQoKSBtb2RlbCE6IFN1cnZleVRpbWVyTW9kZWw7XG4gIHByaXZhdGUgcmVhZG9ubHkgY2lyY2xlTGVuZ3RoVmFsdWUgPSA0NDA7XG5cbiAgcHJvdGVjdGVkIGdldFN0YXRlRWxlbWVudCgpOiBCYXNlIHtcbiAgICByZXR1cm4gdGhpcy5tb2RlbDtcbiAgfVxuICBwcm90ZWN0ZWQgZ2V0TW9kZWwoKTogU3VydmV5VGltZXJNb2RlbCB7XG4gICAgcmV0dXJuIHRoaXMubW9kZWw7XG4gIH1cbiAgcHVibGljIGdldCBjaXJjbGVMZW5ndGgoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5jaXJjbGVMZW5ndGhWYWx1ZTtcbiAgfVxuICBwdWJsaWMgZ2V0IHByb2dyZXNzKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIC10aGlzLm1vZGVsLnByb2dyZXNzICogdGhpcy5jaXJjbGVMZW5ndGg7XG4gIH1cbn1cbiIsIjxkaXYgKm5nSWY9XCJtb2RlbC5zaG93VGltZXJBc0Nsb2NrXCIgW2NsYXNzXT1cIm1vZGVsLnJvb3RDc3NcIj5cbiAgICA8c3ZnICpuZ0lmPVwibW9kZWwuc2hvd1Byb2dyZXNzXCIgW2NsYXNzXT1cIm1vZGVsLmdldFByb2dyZXNzQ3NzKClcIiBbc3R5bGUuc3Ryb2tlLWRhc2hhcnJheV09XCJjaXJjbGVMZW5ndGhcIiBbc3R5bGUuc3Ryb2tlLWRhc2hvZmZzZXRdPVwicHJvZ3Jlc3NcIiBbc2l6ZV09XCInYXV0bydcIiBbaWNvbk5hbWVdPVwiJ2ljb24tdGltZXJjaXJjbGUnXCIgc3Ytbmctc3ZnLWljb24+PC9zdmc+XG4gICAgPGRpdiBbY2xhc3NdPVwibW9kZWwudGV4dENvbnRhaW5lckNzc1wiPlxuICAgICAgICA8c3BhbiBbY2xhc3NdPVwibW9kZWwubWFqb3JUZXh0Q3NzXCI+e3sgbW9kZWwuY2xvY2tNYWpvclRleHQgfX08L3NwYW4+XG4gICAgICAgIDxzcGFuICpuZ0lmPVwibW9kZWwuY2xvY2tNaW5vclRleHRcIiBbY2xhc3NdPVwibW9kZWwubWlub3JUZXh0Q3NzXCI+e3sgbW9kZWwuY2xvY2tNaW5vclRleHQgfX08L3NwYW4+XG4gICAgPC9kaXY+XG48L2Rpdj5cbjxkaXYgKm5nSWY9XCIhbW9kZWwuc2hvd1RpbWVyQXNDbG9ja1wiIFtjbGFzc109J21vZGVsLnN1cnZleS5nZXRDc3MoKS50aW1lclJvb3QnPnt7bW9kZWwudGV4dH19PC9kaXY+Il19