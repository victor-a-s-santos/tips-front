import { Component } from "@angular/core";
import { createDialogOptions, createPopupModalViewModel, settings } from "survey-core";
import * as i0 from "@angular/core";
import * as i1 from "./popup.service";
export class ModalComponent {
    constructor(popupService) {
        this.popupService = popupService;
        this.functionDefined = false;
    }
    showDialog(dialogOptions) {
        this.model = createPopupModalViewModel(dialogOptions);
        this.model.initializePopupContainer();
        this.model.model.onHide = () => {
            this.portalHost.detach();
            this.model.unmountPopupContainer();
        };
        this.portalHost = this.popupService.createComponent(this.model);
        this.model.model.isVisible = true;
        return this.model;
    }
    ngOnInit() {
        if (!!settings.showModal)
            return;
        this.functionDefined = true;
        settings.showModal = (componentName, data, onApply, onCancel, cssClass, title, displayMode = "popup") => {
            const options = createDialogOptions(componentName, data, onApply, onCancel, undefined, undefined, cssClass, title, displayMode);
            return this.showDialog(options);
        };
    }
    ngOnDestroy() {
        if (this.functionDefined) {
            settings.showModal = undefined;
        }
    }
}
ModalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: ModalComponent, deps: [{ token: i1.PopupService }], target: i0.ɵɵFactoryTarget.Component });
ModalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.0.3", type: ModalComponent, selector: "sv-ng-modal-container", ngImport: i0, template: "", isInline: true, styles: [":host{display:none}\n"] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: ModalComponent, decorators: [{
            type: Component,
            args: [{ selector: "sv-ng-modal-container", template: "", styles: [":host{display:none}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.PopupService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwtY29udGFpbmVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3BvcHVwL21vZGFsLWNvbnRhaW5lci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxQyxPQUFPLEVBQUUsbUJBQW1CLEVBQXNDLHlCQUF5QixFQUFFLFFBQVEsRUFBRSxNQUFNLGFBQWEsQ0FBQzs7O0FBUzNILE1BQU0sT0FBTyxjQUFjO0lBTXpCLFlBQW9CLFlBQTBCO1FBQTFCLGlCQUFZLEdBQVosWUFBWSxDQUFjO1FBRnRDLG9CQUFlLEdBQVksS0FBSyxDQUFDO0lBR3pDLENBQUM7SUFDRCxVQUFVLENBQUMsYUFBNkI7UUFDdEMsSUFBSSxDQUFDLEtBQUssR0FBRyx5QkFBeUIsQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUN0RCxJQUFJLENBQUMsS0FBSyxDQUFDLHdCQUF3QixFQUFFLENBQUM7UUFDdEMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLEdBQUcsRUFBRTtZQUM3QixJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRSxDQUFDO1lBQ3pCLElBQUksQ0FBQyxLQUFLLENBQUMscUJBQXFCLEVBQUUsQ0FBQztRQUNyQyxDQUFDLENBQUM7UUFDRixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNoRSxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO1FBQ2xDLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztJQUNwQixDQUFDO0lBQ0QsUUFBUTtRQUNOLElBQUcsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxTQUFTO1lBQUUsT0FBTztRQUNoQyxJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQztRQUM1QixRQUFRLENBQUMsU0FBUyxHQUFHLENBQ25CLGFBQXFCLEVBQ3JCLElBQVMsRUFDVCxPQUFzQixFQUN0QixRQUFxQixFQUNyQixRQUFpQixFQUNqQixLQUFjLEVBQ2QsY0FBbUMsT0FBTyxFQUN0QixFQUFFO1lBQ3RCLE1BQU0sT0FBTyxHQUFHLG1CQUFtQixDQUNqQyxhQUFhLEVBQ2IsSUFBSSxFQUNKLE9BQU8sRUFDUCxRQUFRLEVBQ1IsU0FBUyxFQUNULFNBQVMsRUFDVCxRQUFRLEVBQ1IsS0FBSyxFQUNMLFdBQVcsQ0FDWixDQUFDO1lBQ0YsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ2xDLENBQUMsQ0FBQztJQUNKLENBQUM7SUFDRCxXQUFXO1FBQ1QsSUFBRyxJQUFJLENBQUMsZUFBZSxFQUFFO1lBQ3ZCLFFBQVEsQ0FBQyxTQUFTLEdBQVEsU0FBUyxDQUFDO1NBQ3JDO0lBQ0gsQ0FBQzs7MkdBakRVLGNBQWM7K0ZBQWQsY0FBYyw2REFKZixFQUFFOzJGQUlELGNBQWM7a0JBTjFCLFNBQVM7K0JBQ0UsdUJBQXVCLFlBQ3ZCLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEb21Qb3J0YWxPdXRsZXQgfSBmcm9tIFwiQGFuZ3VsYXIvY2RrL3BvcnRhbFwiO1xuaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IGNyZWF0ZURpYWxvZ09wdGlvbnMsIElEaWFsb2dPcHRpb25zLCBQb3B1cEJhc2VWaWV3TW9kZWwsIGNyZWF0ZVBvcHVwTW9kYWxWaWV3TW9kZWwsIHNldHRpbmdzIH0gZnJvbSBcInN1cnZleS1jb3JlXCI7XG5pbXBvcnQgeyBQb3B1cFNlcnZpY2UgfSBmcm9tIFwiLi9wb3B1cC5zZXJ2aWNlXCI7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogXCJzdi1uZy1tb2RhbC1jb250YWluZXJcIixcbiAgdGVtcGxhdGU6IFwiXCIsXG4gIHN0eWxlVXJsczogW1wiLi4vLi4vaGlkZS1ob3N0LnNjc3NcIl1cbn0pXG5cbmV4cG9ydCBjbGFzcyBNb2RhbENvbXBvbmVudCB7XG5cbiAgcHVibGljIG1vZGVsITogUG9wdXBCYXNlVmlld01vZGVsO1xuICBwcml2YXRlIHBvcnRhbEhvc3QhOiBEb21Qb3J0YWxPdXRsZXQ7XG4gIHByaXZhdGUgZnVuY3Rpb25EZWZpbmVkOiBib29sZWFuID0gZmFsc2U7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBwb3B1cFNlcnZpY2U6IFBvcHVwU2VydmljZSkge1xuICB9XG4gIHNob3dEaWFsb2coZGlhbG9nT3B0aW9uczogSURpYWxvZ09wdGlvbnMpOiBQb3B1cEJhc2VWaWV3TW9kZWwge1xuICAgIHRoaXMubW9kZWwgPSBjcmVhdGVQb3B1cE1vZGFsVmlld01vZGVsKGRpYWxvZ09wdGlvbnMpO1xuICAgIHRoaXMubW9kZWwuaW5pdGlhbGl6ZVBvcHVwQ29udGFpbmVyKCk7XG4gICAgdGhpcy5tb2RlbC5tb2RlbC5vbkhpZGUgPSAoKSA9PiB7XG4gICAgICB0aGlzLnBvcnRhbEhvc3QuZGV0YWNoKCk7XG4gICAgICB0aGlzLm1vZGVsLnVubW91bnRQb3B1cENvbnRhaW5lcigpO1xuICAgIH07XG4gICAgdGhpcy5wb3J0YWxIb3N0ID0gdGhpcy5wb3B1cFNlcnZpY2UuY3JlYXRlQ29tcG9uZW50KHRoaXMubW9kZWwpO1xuICAgIHRoaXMubW9kZWwubW9kZWwuaXNWaXNpYmxlID0gdHJ1ZTtcbiAgICByZXR1cm4gdGhpcy5tb2RlbDtcbiAgfVxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICBpZighIXNldHRpbmdzLnNob3dNb2RhbCkgcmV0dXJuO1xuICAgIHRoaXMuZnVuY3Rpb25EZWZpbmVkID0gdHJ1ZTtcbiAgICBzZXR0aW5ncy5zaG93TW9kYWwgPSAoXG4gICAgICBjb21wb25lbnROYW1lOiBzdHJpbmcsXG4gICAgICBkYXRhOiBhbnksXG4gICAgICBvbkFwcGx5OiAoKSA9PiBib29sZWFuLFxuICAgICAgb25DYW5jZWw/OiAoKSA9PiB2b2lkLFxuICAgICAgY3NzQ2xhc3M/OiBzdHJpbmcsXG4gICAgICB0aXRsZT86IHN0cmluZyxcbiAgICAgIGRpc3BsYXlNb2RlOiBcInBvcHVwXCIgfCBcIm92ZXJsYXlcIiA9IFwicG9wdXBcIlxuICAgICk6IFBvcHVwQmFzZVZpZXdNb2RlbCA9PiB7XG4gICAgICBjb25zdCBvcHRpb25zID0gY3JlYXRlRGlhbG9nT3B0aW9ucyhcbiAgICAgICAgY29tcG9uZW50TmFtZSxcbiAgICAgICAgZGF0YSxcbiAgICAgICAgb25BcHBseSxcbiAgICAgICAgb25DYW5jZWwsXG4gICAgICAgIHVuZGVmaW5lZCxcbiAgICAgICAgdW5kZWZpbmVkLFxuICAgICAgICBjc3NDbGFzcyxcbiAgICAgICAgdGl0bGUsXG4gICAgICAgIGRpc3BsYXlNb2RlXG4gICAgICApO1xuICAgICAgcmV0dXJuIHRoaXMuc2hvd0RpYWxvZyhvcHRpb25zKTtcbiAgICB9O1xuICB9XG4gIG5nT25EZXN0cm95KCkge1xuICAgIGlmKHRoaXMuZnVuY3Rpb25EZWZpbmVkKSB7XG4gICAgICBzZXR0aW5ncy5zaG93TW9kYWwgPSA8YW55PnVuZGVmaW5lZDtcbiAgICB9XG4gIH1cbn1cblxuIl19