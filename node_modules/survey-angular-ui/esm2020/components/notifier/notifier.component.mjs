import { Component, Input } from "@angular/core";
import { BaseAngular } from "../../base-angular";
import * as i0 from "@angular/core";
import * as i1 from "../action-bar/action-bar.component";
import * as i2 from "../../utils/ng-show.directive";
export class NotifierComponent extends BaseAngular {
    getStateElement() {
        return this.notifier;
    }
    getModel() {
        return this.notifier;
    }
}
NotifierComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: NotifierComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
NotifierComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.0.3", type: NotifierComponent, selector: "sv-notifier", inputs: { notifier: "notifier" }, usesInheritance: true, ngImport: i0, template: "<ng-template #template>\n  <div [visible]=\"notifier.active\" [class]=\"notifier.css\">\n    <span>{{notifier.message}}</span>\n    <sv-action-bar [model]=\"notifier.actionBar\"></sv-action-bar> \n  </div>\n</ng-template>", styles: [":host{display:none}\n"], components: [{ type: i1.ActionBarComponent, selector: "sv-action-bar, sv-ng-action-bar", inputs: ["model", "handleClick"] }], directives: [{ type: i2.VisibleDirective, selector: "[visible]", inputs: ["visible"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: NotifierComponent, decorators: [{
            type: Component,
            args: [{ selector: "sv-notifier", styles: [":host { display: none; }"], template: "<ng-template #template>\n  <div [visible]=\"notifier.active\" [class]=\"notifier.css\">\n    <span>{{notifier.message}}</span>\n    <sv-action-bar [model]=\"notifier.actionBar\"></sv-action-bar> \n  </div>\n</ng-template>" }]
        }], propDecorators: { notifier: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZpZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvbm90aWZpZXIvbm90aWZpZXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvbm90aWZpZXIvbm90aWZpZXIuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLG9CQUFvQixDQUFDOzs7O0FBUWpELE1BQU0sT0FBTyxpQkFBa0IsU0FBUSxXQUFxQjtJQUVoRCxlQUFlO1FBQ3ZCLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN2QixDQUFDO0lBQ1MsUUFBUTtRQUNoQixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDdkIsQ0FBQzs7OEdBUFUsaUJBQWlCO2tHQUFqQixpQkFBaUIsNEdDVDlCLCtOQUtjOzJGRElELGlCQUFpQjtrQkFMN0IsU0FBUzsrQkFDRSxhQUFhLFVBRWYsQ0FBQywwQkFBMEIsQ0FBQzs4QkFHM0IsUUFBUTtzQkFBaEIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgQmFzZUFuZ3VsYXIgfSBmcm9tIFwiLi4vLi4vYmFzZS1hbmd1bGFyXCI7XG5pbXBvcnQgeyBCYXNlLCBOb3RpZmllciB9IGZyb20gXCJzdXJ2ZXktY29yZVwiO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6IFwic3Ytbm90aWZpZXJcIixcbiAgdGVtcGxhdGVVcmw6IFwiLi9ub3RpZmllci5jb21wb25lbnQuaHRtbFwiLFxuICBzdHlsZXM6IFtcIjpob3N0IHsgZGlzcGxheTogbm9uZTsgfVwiXVxuICB9KVxuZXhwb3J0IGNsYXNzIE5vdGlmaWVyQ29tcG9uZW50IGV4dGVuZHMgQmFzZUFuZ3VsYXI8Tm90aWZpZXI+IHtcbiAgQElucHV0KCkgbm90aWZpZXIhOiBOb3RpZmllcjtcbiAgcHJvdGVjdGVkIGdldFN0YXRlRWxlbWVudCgpOiBCYXNlIHtcbiAgICByZXR1cm4gdGhpcy5ub3RpZmllcjtcbiAgfVxuICBwcm90ZWN0ZWQgZ2V0TW9kZWwoKTogTm90aWZpZXIge1xuICAgIHJldHVybiB0aGlzLm5vdGlmaWVyO1xuICB9XG59IiwiPG5nLXRlbXBsYXRlICN0ZW1wbGF0ZT5cbiAgPGRpdiBbdmlzaWJsZV09XCJub3RpZmllci5hY3RpdmVcIiBbY2xhc3NdPVwibm90aWZpZXIuY3NzXCI+XG4gICAgPHNwYW4+e3tub3RpZmllci5tZXNzYWdlfX08L3NwYW4+XG4gICAgPHN2LWFjdGlvbi1iYXIgW21vZGVsXT1cIm5vdGlmaWVyLmFjdGlvbkJhclwiPjwvc3YtYWN0aW9uLWJhcj4gXG4gIDwvZGl2PlxuPC9uZy10ZW1wbGF0ZT4iXX0=