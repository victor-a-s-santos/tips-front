import { AngularComponentFactory } from "../../component-factory";
import { Component, Input } from "@angular/core";
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class PaneldynamicAction {
    get question() {
        return (this.model && this.model.data.question) || this.data.question;
    }
}
PaneldynamicAction.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: PaneldynamicAction, deps: [], target: i0.ɵɵFactoryTarget.Component });
PaneldynamicAction.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.0.3", type: PaneldynamicAction, selector: "ng-component", inputs: { data: "data", model: "model" }, ngImport: i0, template: "", isInline: true });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: PaneldynamicAction, decorators: [{
            type: Component,
            args: [{
                    selector: "",
                    template: ""
                }]
        }], propDecorators: { data: [{
                type: Input
            }], model: [{
                type: Input
            }] } });
export class PanelDynamicAddBtn extends PaneldynamicAction {
    addPanelClick() {
        this.question.addPanelUI();
    }
}
PanelDynamicAddBtn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: PanelDynamicAddBtn, deps: null, target: i0.ɵɵFactoryTarget.Component });
PanelDynamicAddBtn.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.0.3", type: PanelDynamicAddBtn, selector: "sv-ng-paneldynamic-add-btn", usesInheritance: true, ngImport: i0, template: "<button type=\"button\" *ngIf=\"question.canAddPanel\" [class]=\"question.getAddButtonCss()\" (click)=\"addPanelClick()\">\n<span [class]=\"question.cssClasses.buttonAddText\">{{question.panelAddText}}</span>\n</button>", directives: [{ type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: PanelDynamicAddBtn, decorators: [{
            type: Component,
            args: [{ selector: "sv-ng-paneldynamic-add-btn", template: "<button type=\"button\" *ngIf=\"question.canAddPanel\" [class]=\"question.getAddButtonCss()\" (click)=\"addPanelClick()\">\n<span [class]=\"question.cssClasses.buttonAddText\">{{question.panelAddText}}</span>\n</button>" }]
        }] });
AngularComponentFactory.Instance.registerComponent("sv-paneldynamic-add-btn", PanelDynamicAddBtn);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFuZWxkeW5hbWljLWFkZC1idG4uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvcGFuZWxkeW5hbWljLWFjdGlvbnMvcGFuZWxkeW5hbWljLWFkZC1idG4uY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvcGFuZWxkeW5hbWljLWFjdGlvbnMvcGFuZWxkeW5hbWljLWFkZC1idG4uY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDbEUsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7OztBQU1qRCxNQUFNLE9BQU8sa0JBQWtCO0lBRzdCLElBQVcsUUFBUTtRQUNqQixPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN4RSxDQUFDOzsrR0FMVSxrQkFBa0I7bUdBQWxCLGtCQUFrQiw4RkFGbkIsRUFBRTsyRkFFRCxrQkFBa0I7a0JBSjlCLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLEVBQUU7b0JBQ1osUUFBUSxFQUFFLEVBQUU7aUJBQ2I7OEJBRVUsSUFBSTtzQkFBWixLQUFLO2dCQUNHLEtBQUs7c0JBQWIsS0FBSzs7QUFVUixNQUFNLE9BQU8sa0JBQW1CLFNBQVEsa0JBQWtCO0lBQ3hELGFBQWE7UUFDWCxJQUFJLENBQUMsUUFBUSxDQUFDLFVBQVUsRUFBRSxDQUFDO0lBQzdCLENBQUM7OytHQUhVLGtCQUFrQjttR0FBbEIsa0JBQWtCLHlGQ3BCL0IsNk5BRVM7MkZEa0JJLGtCQUFrQjtrQkFKOUIsU0FBUzsrQkFDRSw0QkFBNEI7O0FBUXhDLHVCQUF1QixDQUFDLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQyx5QkFBeUIsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWN0aW9uLCBRdWVzdGlvblBhbmVsRHluYW1pY01vZGVsIH0gZnJvbSBcInN1cnZleS1jb3JlXCI7XG5pbXBvcnQgeyBBbmd1bGFyQ29tcG9uZW50RmFjdG9yeSB9IGZyb20gXCIuLi8uLi9jb21wb25lbnQtZmFjdG9yeVwiO1xuaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogXCJcIixcbiAgdGVtcGxhdGU6IFwiXCJcbn0pXG5leHBvcnQgY2xhc3MgUGFuZWxkeW5hbWljQWN0aW9uIHtcbiAgQElucHV0KCkgZGF0YTogYW55O1xuICBASW5wdXQoKSBtb2RlbCE6IEFjdGlvbjtcbiAgcHVibGljIGdldCBxdWVzdGlvbigpOiBRdWVzdGlvblBhbmVsRHluYW1pY01vZGVsIHtcbiAgICByZXR1cm4gKHRoaXMubW9kZWwgJiYgdGhpcy5tb2RlbC5kYXRhLnF1ZXN0aW9uKSB8fCB0aGlzLmRhdGEucXVlc3Rpb247XG4gIH1cbn1cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiBcInN2LW5nLXBhbmVsZHluYW1pYy1hZGQtYnRuXCIsXG4gIHRlbXBsYXRlVXJsOiBcIi4vcGFuZWxkeW5hbWljLWFkZC1idG4uY29tcG9uZW50Lmh0bWxcIlxufSlcbmV4cG9ydCBjbGFzcyBQYW5lbER5bmFtaWNBZGRCdG4gZXh0ZW5kcyBQYW5lbGR5bmFtaWNBY3Rpb24ge1xuICBhZGRQYW5lbENsaWNrKCkge1xuICAgIHRoaXMucXVlc3Rpb24uYWRkUGFuZWxVSSgpO1xuICB9XG59XG5Bbmd1bGFyQ29tcG9uZW50RmFjdG9yeS5JbnN0YW5jZS5yZWdpc3RlckNvbXBvbmVudChcInN2LXBhbmVsZHluYW1pYy1hZGQtYnRuXCIsIFBhbmVsRHluYW1pY0FkZEJ0bik7IiwiPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgKm5nSWY9XCJxdWVzdGlvbi5jYW5BZGRQYW5lbFwiIFtjbGFzc109XCJxdWVzdGlvbi5nZXRBZGRCdXR0b25Dc3MoKVwiIChjbGljayk9XCJhZGRQYW5lbENsaWNrKClcIj5cbjxzcGFuIFtjbGFzc109XCJxdWVzdGlvbi5jc3NDbGFzc2VzLmJ1dHRvbkFkZFRleHRcIj57e3F1ZXN0aW9uLnBhbmVsQWRkVGV4dH19PC9zcGFuPlxuPC9idXR0b24+Il19