import { Component, Input } from "@angular/core";
import { PopupSurveyModel } from "survey-core";
import { BaseAngular } from "./base-angular";
import * as i0 from "@angular/core";
import * as i1 from "./survey.component";
import * as i2 from "@angular/common";
export class PopupSurveyComponent extends BaseAngular {
    constructor(changeDetectorRef) {
        super(changeDetectorRef);
        changeDetectorRef.detach();
    }
    getModel() {
        return this.popup;
    }
    getShouldReattachChangeDetector() {
        return false;
    }
    ngOnChanges(changes) {
        if (changes["model"]?.currentValue !== changes["model"]?.previousValue) {
            this.popup = new PopupSurveyModel(null, this.model);
        }
        if (this.isExpanded !== undefined) {
            this.popup.isExpanded = this.isExpanded;
        }
        if (this.closeOnCompleteTimeout !== undefined) {
            this.popup.closeOnCompleteTimeout = this.closeOnCompleteTimeout;
        }
        this.popup.isShowing = true;
        this.changeDetectorRef.detectChanges();
    }
}
PopupSurveyComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: PopupSurveyComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
PopupSurveyComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.0.3", type: PopupSurveyComponent, selector: "popup-survey", inputs: { model: "model", isExpanded: "isExpanded", closeOnCompleteTimeout: "closeOnCompleteTimeout" }, usesInheritance: true, usesOnChanges: true, ngImport: i0, template: "<div *ngIf=\"!!popup && popup.isShowing\" [class]=\"popup.cssRoot\" style=\"position: fixed; bottom: 3px; right: 10px;\" [style.width]=\"popup.renderedWidth\" [style.maxWidth]=\"popup.renderedWidth\">\n  <div [class]=\"popup.cssHeaderRoot\">\n      <span (click)=\"popup.changeExpandCollapse()\" style=\"width: 100%; cursor: pointer;\">\n          <span style=\"padding-right:10px\" [class]=\"popup.cssHeaderTitle\">{{popup.locTitle.renderedHtml}}</span>\n          <span aria-hidden=\"true\" [class]=\"popup.cssButton\"></span>\n      </span>\n      <span *ngIf=\"popup.isExpanded\" (click)=\"popup.changeExpandCollapse()\" style=\"float: right; cursor: pointer;\">\n          <span style=\"padding-right:10px\" [class]=\"popup.cssHeaderTitle\">X</span>\n      </span>\n  </div>\n  <div *ngIf=\"popup.isExpanded\" [class]=\"popup.cssBody\">\n    <survey [model]=\"popup.survey\"></survey>\n  </div>\n</div>", styles: [""], components: [{ type: i1.SurveyComponent, selector: "survey", inputs: ["model"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: PopupSurveyComponent, decorators: [{
            type: Component,
            args: [{ selector: "popup-survey", template: "<div *ngIf=\"!!popup && popup.isShowing\" [class]=\"popup.cssRoot\" style=\"position: fixed; bottom: 3px; right: 10px;\" [style.width]=\"popup.renderedWidth\" [style.maxWidth]=\"popup.renderedWidth\">\n  <div [class]=\"popup.cssHeaderRoot\">\n      <span (click)=\"popup.changeExpandCollapse()\" style=\"width: 100%; cursor: pointer;\">\n          <span style=\"padding-right:10px\" [class]=\"popup.cssHeaderTitle\">{{popup.locTitle.renderedHtml}}</span>\n          <span aria-hidden=\"true\" [class]=\"popup.cssButton\"></span>\n      </span>\n      <span *ngIf=\"popup.isExpanded\" (click)=\"popup.changeExpandCollapse()\" style=\"float: right; cursor: pointer;\">\n          <span style=\"padding-right:10px\" [class]=\"popup.cssHeaderTitle\">X</span>\n      </span>\n  </div>\n  <div *ngIf=\"popup.isExpanded\" [class]=\"popup.cssBody\">\n    <survey [model]=\"popup.survey\"></survey>\n  </div>\n</div>", styles: [""] }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { model: [{
                type: Input
            }], isExpanded: [{
                type: Input
            }], closeOnCompleteTimeout: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wdXAuc3VydmV5LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9wb3B1cC5zdXJ2ZXkuY29tcG9uZW50LnRzIiwiLi4vLi4vc3JjL3BvcHVwLnN1cnZleS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQXFCLFNBQVMsRUFBRSxLQUFLLEVBQTRCLE1BQU0sZUFBZSxDQUFDO0FBQzlGLE9BQU8sRUFBRSxnQkFBZ0IsRUFBZSxNQUFNLGFBQWEsQ0FBQztBQUM1RCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7Ozs7QUFNN0MsTUFBTSxPQUFPLG9CQUFxQixTQUFRLFdBQTZCO0lBTXJFLFlBQVksaUJBQW9DO1FBQzlDLEtBQUssQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1FBQ3pCLGlCQUFpQixDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQzdCLENBQUM7SUFDUyxRQUFRO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztJQUNwQixDQUFDO0lBQ2tCLCtCQUErQjtRQUNoRCxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7SUFDRCxXQUFXLENBQUMsT0FBc0I7UUFDaEMsSUFBRyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsWUFBWSxLQUFLLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRSxhQUFhLEVBQUU7WUFDckUsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLGdCQUFnQixDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDckQ7UUFDRCxJQUFJLElBQUksQ0FBQyxVQUFVLEtBQUssU0FBUyxFQUFFO1lBQ2pDLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUM7U0FDekM7UUFDRCxJQUFJLElBQUksQ0FBQyxzQkFBc0IsS0FBSyxTQUFTLEVBQUU7WUFDN0MsSUFBSSxDQUFDLEtBQUssQ0FBQyxzQkFBc0IsR0FBRyxJQUFJLENBQUMsc0JBQXNCLENBQUM7U0FDakU7UUFDRCxJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUM7UUFDNUIsSUFBSSxDQUFDLGlCQUFpQixDQUFDLGFBQWEsRUFBRSxDQUFDO0lBQ3pDLENBQUM7O2lIQTVCVSxvQkFBb0I7cUdBQXBCLG9CQUFvQix3TUNSakMsNjRCQWFNOzJGRExPLG9CQUFvQjtrQkFMaEMsU0FBUzsrQkFDRSxjQUFjO3dHQUtmLEtBQUs7c0JBQWIsS0FBSztnQkFDRyxVQUFVO3NCQUFsQixLQUFLO2dCQUNHLHNCQUFzQjtzQkFBOUIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnQsIElucHV0LCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXMgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgUG9wdXBTdXJ2ZXlNb2RlbCwgU3VydmV5TW9kZWwgfSBmcm9tIFwic3VydmV5LWNvcmVcIjtcbmltcG9ydCB7IEJhc2VBbmd1bGFyIH0gZnJvbSBcIi4vYmFzZS1hbmd1bGFyXCI7XG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6IFwicG9wdXAtc3VydmV5XCIsXG4gIHRlbXBsYXRlVXJsOiBcIi4vcG9wdXAuc3VydmV5LmNvbXBvbmVudC5odG1sXCIsXG4gIHN0eWxlVXJsczogW1wiLi9wb3B1cC5zdXJ2ZXkuY29tcG9uZW50LnNjc3NcIl1cbiAgfSlcbmV4cG9ydCBjbGFzcyBQb3B1cFN1cnZleUNvbXBvbmVudCBleHRlbmRzIEJhc2VBbmd1bGFyPFBvcHVwU3VydmV5TW9kZWw+IGltcGxlbWVudHMgT25DaGFuZ2VzIHtcbiAgQElucHV0KCkgbW9kZWwhOiBTdXJ2ZXlNb2RlbDtcbiAgQElucHV0KCkgaXNFeHBhbmRlZD86IGJvb2xlYW47XG4gIEBJbnB1dCgpIGNsb3NlT25Db21wbGV0ZVRpbWVvdXQ/OiBudW1iZXI7XG4gIHB1YmxpYyBwb3B1cCE6IFBvcHVwU3VydmV5TW9kZWw7XG5cbiAgY29uc3RydWN0b3IoY2hhbmdlRGV0ZWN0b3JSZWY6IENoYW5nZURldGVjdG9yUmVmKSB7XG4gICAgc3VwZXIoY2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIGNoYW5nZURldGVjdG9yUmVmLmRldGFjaCgpO1xuICB9XG4gIHByb3RlY3RlZCBnZXRNb2RlbCgpOiBQb3B1cFN1cnZleU1vZGVsIHtcbiAgICByZXR1cm4gdGhpcy5wb3B1cDtcbiAgfVxuICBwcm90ZWN0ZWQgb3ZlcnJpZGUgZ2V0U2hvdWxkUmVhdHRhY2hDaGFuZ2VEZXRlY3RvcigpOiBib29sZWFuIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQge1xuICAgIGlmKGNoYW5nZXNbXCJtb2RlbFwiXT8uY3VycmVudFZhbHVlICE9PSBjaGFuZ2VzW1wibW9kZWxcIl0/LnByZXZpb3VzVmFsdWUpIHtcbiAgICAgIHRoaXMucG9wdXAgPSBuZXcgUG9wdXBTdXJ2ZXlNb2RlbChudWxsLCB0aGlzLm1vZGVsKTtcbiAgICB9XG4gICAgaWYgKHRoaXMuaXNFeHBhbmRlZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aGlzLnBvcHVwLmlzRXhwYW5kZWQgPSB0aGlzLmlzRXhwYW5kZWQ7XG4gICAgfVxuICAgIGlmICh0aGlzLmNsb3NlT25Db21wbGV0ZVRpbWVvdXQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhpcy5wb3B1cC5jbG9zZU9uQ29tcGxldGVUaW1lb3V0ID0gdGhpcy5jbG9zZU9uQ29tcGxldGVUaW1lb3V0O1xuICAgIH1cbiAgICB0aGlzLnBvcHVwLmlzU2hvd2luZyA9IHRydWU7XG4gICAgdGhpcy5jaGFuZ2VEZXRlY3RvclJlZi5kZXRlY3RDaGFuZ2VzKCk7XG4gIH1cbn0iLCI8ZGl2ICpuZ0lmPVwiISFwb3B1cCAmJiBwb3B1cC5pc1Nob3dpbmdcIiBbY2xhc3NdPVwicG9wdXAuY3NzUm9vdFwiIHN0eWxlPVwicG9zaXRpb246IGZpeGVkOyBib3R0b206IDNweDsgcmlnaHQ6IDEwcHg7XCIgW3N0eWxlLndpZHRoXT1cInBvcHVwLnJlbmRlcmVkV2lkdGhcIiBbc3R5bGUubWF4V2lkdGhdPVwicG9wdXAucmVuZGVyZWRXaWR0aFwiPlxuICA8ZGl2IFtjbGFzc109XCJwb3B1cC5jc3NIZWFkZXJSb290XCI+XG4gICAgICA8c3BhbiAoY2xpY2spPVwicG9wdXAuY2hhbmdlRXhwYW5kQ29sbGFwc2UoKVwiIHN0eWxlPVwid2lkdGg6IDEwMCU7IGN1cnNvcjogcG9pbnRlcjtcIj5cbiAgICAgICAgICA8c3BhbiBzdHlsZT1cInBhZGRpbmctcmlnaHQ6MTBweFwiIFtjbGFzc109XCJwb3B1cC5jc3NIZWFkZXJUaXRsZVwiPnt7cG9wdXAubG9jVGl0bGUucmVuZGVyZWRIdG1sfX08L3NwYW4+XG4gICAgICAgICAgPHNwYW4gYXJpYS1oaWRkZW49XCJ0cnVlXCIgW2NsYXNzXT1cInBvcHVwLmNzc0J1dHRvblwiPjwvc3Bhbj5cbiAgICAgIDwvc3Bhbj5cbiAgICAgIDxzcGFuICpuZ0lmPVwicG9wdXAuaXNFeHBhbmRlZFwiIChjbGljayk9XCJwb3B1cC5jaGFuZ2VFeHBhbmRDb2xsYXBzZSgpXCIgc3R5bGU9XCJmbG9hdDogcmlnaHQ7IGN1cnNvcjogcG9pbnRlcjtcIj5cbiAgICAgICAgICA8c3BhbiBzdHlsZT1cInBhZGRpbmctcmlnaHQ6MTBweFwiIFtjbGFzc109XCJwb3B1cC5jc3NIZWFkZXJUaXRsZVwiPlg8L3NwYW4+XG4gICAgICA8L3NwYW4+XG4gIDwvZGl2PlxuICA8ZGl2ICpuZ0lmPVwicG9wdXAuaXNFeHBhbmRlZFwiIFtjbGFzc109XCJwb3B1cC5jc3NCb2R5XCI+XG4gICAgPHN1cnZleSBbbW9kZWxdPVwicG9wdXAuc3VydmV5XCI+PC9zdXJ2ZXk+XG4gIDwvZGl2PlxuPC9kaXY+Il19