import { Component, Input, ViewChild } from "@angular/core";
import { AngularComponentFactory } from "../component-factory";
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../utils/dynamic.directive";
import * as i3 from "../utils/safe-html.pipe";
export class CustomWidgetComponent {
    get hasDefaultRender() {
        return this.model.customWidget.isDefaultRender || this.hasAngularComponent;
    }
    get hasHtml() {
        return this.model.customWidget.htmlTemplate ? true : false;
    }
    get customHtml() {
        return this.model.customWidget.htmlTemplate;
    }
    get hasAngularComponent() {
        return AngularComponentFactory.Instance.isComponentRegistered(this.model.customWidget.name);
    }
    get componentName() {
        if (this.hasAngularComponent)
            return this.model.customWidget.name;
        return this.model.getTemplate() + "-question";
    }
    ngAfterViewInit() {
        this.model.customWidget.afterRender(this.model, this.container.nativeElement);
    }
    ngOnChanges(simpleChanges) {
        if (simpleChanges["model"].previousValue !== undefined && simpleChanges["model"].currentValue !== undefined) {
            this.model.customWidget.afterRender(this.model, this.container.nativeElement);
        }
    }
    ngOnDestroy() {
        this.model.customWidget.willUnmount(this.model, this.container.nativeElement);
    }
}
CustomWidgetComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CustomWidgetComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
CustomWidgetComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.0.3", type: CustomWidgetComponent, selector: "sv-ng-custom-widget", inputs: { css: "css", model: "model" }, viewQueries: [{ propertyName: "container", first: true, predicate: ["content"], descendants: true }], usesOnChanges: true, ngImport: i0, template: "<div #content>\n  <div *ngIf=\"hasHtml\" [innerHTML]=\"customHtml | safeHtml\"></div>\n  <ng-container *ngIf=\"hasDefaultRender\">\n    <ng-template [component]=\"{ name: componentName, data: { model: model, css: css } }\"></ng-template>  \n  </ng-container>\n</div>", directives: [{ type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.DynamicComponentDirective, selector: "[component]", inputs: ["component"] }], pipes: { "safeHtml": i3.SafeHtmlPipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: CustomWidgetComponent, decorators: [{
            type: Component,
            args: [{ selector: "sv-ng-custom-widget", template: "<div #content>\n  <div *ngIf=\"hasHtml\" [innerHTML]=\"customHtml | safeHtml\"></div>\n  <ng-container *ngIf=\"hasDefaultRender\">\n    <ng-template [component]=\"{ name: componentName, data: { model: model, css: css } }\"></ng-template>  \n  </ng-container>\n</div>" }]
        }], propDecorators: { css: [{
                type: Input
            }], model: [{
                type: Input
            }], container: [{
                type: ViewChild,
                args: ["content"]
            }] } });
AngularComponentFactory.Instance.registerComponent("survey-customwidget", CustomWidgetComponent);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3VzdG9td2lkZ2V0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9xdWVzdGlvbnMvY3VzdG9td2lkZ2V0LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uL3NyYy9xdWVzdGlvbnMvY3VzdG9td2lkZ2V0LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBaUIsU0FBUyxFQUFjLEtBQUssRUFBdUMsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzVILE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDOzs7OztBQVMvRCxNQUFNLE9BQU8scUJBQXFCO0lBTWhDLElBQUksZ0JBQWdCO1FBQ2xCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsZUFBZSxJQUFJLElBQUksQ0FBQyxtQkFBbUIsQ0FBQztJQUM3RSxDQUFDO0lBQ0QsSUFBSSxPQUFPO1FBQ1QsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO0lBQzdELENBQUM7SUFDRCxJQUFJLFVBQVU7UUFDWixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLFlBQVksQ0FBQztJQUM5QyxDQUFDO0lBQ0QsSUFBSSxtQkFBbUI7UUFDckIsT0FBTyx1QkFBdUIsQ0FBQyxRQUFRLENBQUMscUJBQXFCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDOUYsQ0FBQztJQUNELElBQUksYUFBYTtRQUNmLElBQUksSUFBSSxDQUFDLG1CQUFtQjtZQUFFLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDO1FBQ2xFLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLEVBQUUsR0FBRyxXQUFXLENBQUM7SUFDaEQsQ0FBQztJQUNELGVBQWU7UUFDYixJQUFJLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQ2hGLENBQUM7SUFDRCxXQUFXLENBQUMsYUFBNEI7UUFDdEMsSUFBRyxhQUFhLENBQUMsT0FBTyxDQUFDLENBQUMsYUFBYSxLQUFLLFNBQVMsSUFBSSxhQUFhLENBQUMsT0FBTyxDQUFDLENBQUMsWUFBWSxLQUFLLFNBQVMsRUFBRTtZQUMxRyxJQUFJLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1NBQy9FO0lBQ0gsQ0FBQztJQUNELFdBQVc7UUFDVCxJQUFJLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQ2hGLENBQUM7O2tIQWhDVSxxQkFBcUI7c0dBQXJCLHFCQUFxQiw4TkNWbEMsNFFBS007MkZES08scUJBQXFCO2tCQU5qQyxTQUFTOytCQUdJLHFCQUFxQjs4QkFJeEIsR0FBRztzQkFBWCxLQUFLO2dCQUNHLEtBQUs7c0JBQWIsS0FBSztnQkFFZ0IsU0FBUztzQkFBOUIsU0FBUzt1QkFBQyxTQUFTOztBQWdDdEIsdUJBQXVCLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLHFCQUFxQixFQUFFLHFCQUFxQixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBZnRlclZpZXdJbml0LCBDb21wb25lbnQsIEVsZW1lbnRSZWYsIElucHV0LCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgU2ltcGxlQ2hhbmdlcywgVmlld0NoaWxkIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IEFuZ3VsYXJDb21wb25lbnRGYWN0b3J5IH0gZnJvbSBcIi4uL2NvbXBvbmVudC1mYWN0b3J5XCI7XG5pbXBvcnQgeyBRdWVzdGlvbiB9IGZyb20gXCJzdXJ2ZXktY29yZVwiO1xuXG5AQ29tcG9uZW50KFxuICB7XG4gICAgdGVtcGxhdGVVcmw6IFwiLi9jdXN0b213aWRnZXQuY29tcG9uZW50Lmh0bWxcIixcbiAgICBzZWxlY3RvcjogXCJzdi1uZy1jdXN0b20td2lkZ2V0XCJcbiAgfVxuKVxuZXhwb3J0IGNsYXNzIEN1c3RvbVdpZGdldENvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQsIE9uRGVzdHJveSwgT25DaGFuZ2VzIHtcbiAgQElucHV0KCkgY3NzOiBhbnk7XG4gIEBJbnB1dCgpIG1vZGVsITogUXVlc3Rpb247XG5cbiAgQFZpZXdDaGlsZChcImNvbnRlbnRcIikgY29udGFpbmVyITogRWxlbWVudFJlZjxIVE1MRGl2RWxlbWVudD47XG5cbiAgZ2V0IGhhc0RlZmF1bHRSZW5kZXIoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMubW9kZWwuY3VzdG9tV2lkZ2V0LmlzRGVmYXVsdFJlbmRlciB8fCB0aGlzLmhhc0FuZ3VsYXJDb21wb25lbnQ7XG4gIH1cbiAgZ2V0IGhhc0h0bWwoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMubW9kZWwuY3VzdG9tV2lkZ2V0Lmh0bWxUZW1wbGF0ZSA/IHRydWUgOiBmYWxzZTtcbiAgfVxuICBnZXQgY3VzdG9tSHRtbCgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLm1vZGVsLmN1c3RvbVdpZGdldC5odG1sVGVtcGxhdGU7XG4gIH1cbiAgZ2V0IGhhc0FuZ3VsYXJDb21wb25lbnQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIEFuZ3VsYXJDb21wb25lbnRGYWN0b3J5Lkluc3RhbmNlLmlzQ29tcG9uZW50UmVnaXN0ZXJlZCh0aGlzLm1vZGVsLmN1c3RvbVdpZGdldC5uYW1lKTtcbiAgfVxuICBnZXQgY29tcG9uZW50TmFtZSgpOiBzdHJpbmcge1xuICAgIGlmICh0aGlzLmhhc0FuZ3VsYXJDb21wb25lbnQpIHJldHVybiB0aGlzLm1vZGVsLmN1c3RvbVdpZGdldC5uYW1lO1xuICAgIHJldHVybiB0aGlzLm1vZGVsLmdldFRlbXBsYXRlKCkgKyBcIi1xdWVzdGlvblwiO1xuICB9XG4gIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkIHtcbiAgICB0aGlzLm1vZGVsLmN1c3RvbVdpZGdldC5hZnRlclJlbmRlcih0aGlzLm1vZGVsLCB0aGlzLmNvbnRhaW5lci5uYXRpdmVFbGVtZW50KTtcbiAgfVxuICBuZ09uQ2hhbmdlcyhzaW1wbGVDaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XG4gICAgaWYoc2ltcGxlQ2hhbmdlc1tcIm1vZGVsXCJdLnByZXZpb3VzVmFsdWUgIT09IHVuZGVmaW5lZCAmJiBzaW1wbGVDaGFuZ2VzW1wibW9kZWxcIl0uY3VycmVudFZhbHVlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHRoaXMubW9kZWwuY3VzdG9tV2lkZ2V0LmFmdGVyUmVuZGVyKHRoaXMubW9kZWwsIHRoaXMuY29udGFpbmVyLm5hdGl2ZUVsZW1lbnQpO1xuICAgIH1cbiAgfVxuICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcbiAgICB0aGlzLm1vZGVsLmN1c3RvbVdpZGdldC53aWxsVW5tb3VudCh0aGlzLm1vZGVsLCB0aGlzLmNvbnRhaW5lci5uYXRpdmVFbGVtZW50KTtcbiAgfVxuXG59XG5cbkFuZ3VsYXJDb21wb25lbnRGYWN0b3J5Lkluc3RhbmNlLnJlZ2lzdGVyQ29tcG9uZW50KFwic3VydmV5LWN1c3RvbXdpZGdldFwiLCBDdXN0b21XaWRnZXRDb21wb25lbnQpO1xuIiwiPGRpdiAjY29udGVudD5cbiAgPGRpdiAqbmdJZj1cImhhc0h0bWxcIiBbaW5uZXJIVE1MXT1cImN1c3RvbUh0bWwgfCBzYWZlSHRtbFwiPjwvZGl2PlxuICA8bmctY29udGFpbmVyICpuZ0lmPVwiaGFzRGVmYXVsdFJlbmRlclwiPlxuICAgIDxuZy10ZW1wbGF0ZSBbY29tcG9uZW50XT1cInsgbmFtZTogY29tcG9uZW50TmFtZSwgZGF0YTogeyBtb2RlbDogbW9kZWwsIGNzczogY3NzIH0gfVwiPjwvbmctdGVtcGxhdGU+ICBcbiAgPC9uZy1jb250YWluZXI+XG48L2Rpdj4iXX0=