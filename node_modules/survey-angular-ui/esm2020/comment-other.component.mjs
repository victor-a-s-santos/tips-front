import { Component, Input } from "@angular/core";
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class SurveyCommentOtherComponent {
    constructor() {
    }
    get otherValue() {
        const val = this.question.otherValue;
        return !!val ? val : "";
    }
    onOtherValueChange(event) {
        this.question.onOtherValueChange(event);
    }
    onOtherValueInput(event) {
        this.question.onOtherValueInput(event);
    }
    get otherId() {
        return this.question.otherId;
    }
    get otherPlaceholder() {
        return this.question.otherPlaceholder;
    }
}
SurveyCommentOtherComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: SurveyCommentOtherComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
SurveyCommentOtherComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.0.3", type: SurveyCommentOtherComponent, selector: "sv-ng-comment-other, '[sv-ng-comment-other]'", inputs: { question: "question" }, ngImport: i0, template: "<textarea *ngIf=\"!question.isReadOnlyRenderDiv()\" [id]=\"otherId\" [attr.max-length]=\"question.getOthersMaxLength()\"  [attr.aria-required]=\"question.ariaRequired\" [attr.aria-label]=\"question.ariaLabel\" [attr.placeholder]=\"otherPlaceholder\" \n  [value]=\"otherValue\"\n  [style.resize]=\"question.resizeStyle\"\n  [disabled]=\"question.isInputReadOnly\"\n  (change)=\"onOtherValueChange($event)\"\n  (input)=\"onOtherValueInput($event)\"\n  [class]=\"question.cssClasses.other\">\n</textarea>\n<div *ngIf=\"question.isReadOnlyRenderDiv()\">{{ otherValue }}</div>\n", directives: [{ type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: SurveyCommentOtherComponent, decorators: [{
            type: Component,
            args: [{ selector: "sv-ng-comment-other, '[sv-ng-comment-other]'", template: "<textarea *ngIf=\"!question.isReadOnlyRenderDiv()\" [id]=\"otherId\" [attr.max-length]=\"question.getOthersMaxLength()\"  [attr.aria-required]=\"question.ariaRequired\" [attr.aria-label]=\"question.ariaLabel\" [attr.placeholder]=\"otherPlaceholder\" \n  [value]=\"otherValue\"\n  [style.resize]=\"question.resizeStyle\"\n  [disabled]=\"question.isInputReadOnly\"\n  (change)=\"onOtherValueChange($event)\"\n  (input)=\"onOtherValueInput($event)\"\n  [class]=\"question.cssClasses.other\">\n</textarea>\n<div *ngIf=\"question.isReadOnlyRenderDiv()\">{{ otherValue }}</div>\n" }]
        }], ctorParameters: function () { return []; }, propDecorators: { question: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbWVudC1vdGhlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY29tbWVudC1vdGhlci5jb21wb25lbnQudHMiLCIuLi8uLi9zcmMvY29tbWVudC1vdGhlci5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7O0FBT2pELE1BQU0sT0FBTywyQkFBMkI7SUFFdEM7SUFDQSxDQUFDO0lBQ0QsSUFBVyxVQUFVO1FBQ25CLE1BQU0sR0FBRyxHQUF3QixJQUFJLENBQUMsUUFBUyxDQUFDLFVBQVUsQ0FBQztRQUMzRCxPQUFPLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0lBQzFCLENBQUM7SUFDTSxrQkFBa0IsQ0FBQyxLQUFVO1FBQ2IsSUFBSSxDQUFDLFFBQVMsQ0FBQyxrQkFBa0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNoRSxDQUFDO0lBQ00saUJBQWlCLENBQUMsS0FBVTtRQUNaLElBQUksQ0FBQyxRQUFTLENBQUMsaUJBQWlCLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDL0QsQ0FBQztJQUNELElBQVcsT0FBTztRQUNoQixPQUE0QixJQUFJLENBQUMsUUFBUyxDQUFDLE9BQU8sQ0FBQztJQUNyRCxDQUFDO0lBQ0QsSUFBVyxnQkFBZ0I7UUFDekIsT0FBNEIsSUFBSSxDQUFDLFFBQVMsQ0FBQyxnQkFBZ0IsQ0FBQztJQUM5RCxDQUFDOzt3SEFuQlUsMkJBQTJCOzRHQUEzQiwyQkFBMkIsc0hDUHhDLCtqQkFTQTsyRkRGYSwyQkFBMkI7a0JBSnZDLFNBQVM7K0JBQ0UsOENBQThDOzBFQUkvQyxRQUFRO3NCQUFoQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBRdWVzdGlvbiwgUXVlc3Rpb25TZWxlY3RCYXNlIH0gZnJvbSBcInN1cnZleS1jb3JlXCI7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogXCJzdi1uZy1jb21tZW50LW90aGVyLCAnW3N2LW5nLWNvbW1lbnQtb3RoZXJdJ1wiLFxuICB0ZW1wbGF0ZVVybDogXCIuL2NvbW1lbnQtb3RoZXIuY29tcG9uZW50Lmh0bWxcIixcbn0pXG5leHBvcnQgY2xhc3MgU3VydmV5Q29tbWVudE90aGVyQ29tcG9uZW50IHtcbiAgQElucHV0KCkgcXVlc3Rpb24hOiBRdWVzdGlvbjtcbiAgY29uc3RydWN0b3IoKSB7XG4gIH1cbiAgcHVibGljIGdldCBvdGhlclZhbHVlKCk6IHN0cmluZyB7XG4gICAgY29uc3QgdmFsID0gKDxRdWVzdGlvblNlbGVjdEJhc2U+dGhpcy5xdWVzdGlvbikub3RoZXJWYWx1ZTtcbiAgICByZXR1cm4gISF2YWwgPyB2YWwgOiBcIlwiO1xuICB9XG4gIHB1YmxpYyBvbk90aGVyVmFsdWVDaGFuZ2UoZXZlbnQ6IGFueSk6IHZvaWQge1xuICAgICg8UXVlc3Rpb25TZWxlY3RCYXNlPnRoaXMucXVlc3Rpb24pLm9uT3RoZXJWYWx1ZUNoYW5nZShldmVudCk7XG4gIH1cbiAgcHVibGljIG9uT3RoZXJWYWx1ZUlucHV0KGV2ZW50OiBhbnkpOiB2b2lkIHtcbiAgICAoPFF1ZXN0aW9uU2VsZWN0QmFzZT50aGlzLnF1ZXN0aW9uKS5vbk90aGVyVmFsdWVJbnB1dChldmVudCk7XG4gIH1cbiAgcHVibGljIGdldCBvdGhlcklkKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuICg8UXVlc3Rpb25TZWxlY3RCYXNlPnRoaXMucXVlc3Rpb24pLm90aGVySWQ7XG4gIH1cbiAgcHVibGljIGdldCBvdGhlclBsYWNlaG9sZGVyKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuICg8UXVlc3Rpb25TZWxlY3RCYXNlPnRoaXMucXVlc3Rpb24pLm90aGVyUGxhY2Vob2xkZXI7XG4gIH1cbn0iLCI8dGV4dGFyZWEgKm5nSWY9XCIhcXVlc3Rpb24uaXNSZWFkT25seVJlbmRlckRpdigpXCIgW2lkXT1cIm90aGVySWRcIiBbYXR0ci5tYXgtbGVuZ3RoXT1cInF1ZXN0aW9uLmdldE90aGVyc01heExlbmd0aCgpXCIgIFthdHRyLmFyaWEtcmVxdWlyZWRdPVwicXVlc3Rpb24uYXJpYVJlcXVpcmVkXCIgW2F0dHIuYXJpYS1sYWJlbF09XCJxdWVzdGlvbi5hcmlhTGFiZWxcIiBbYXR0ci5wbGFjZWhvbGRlcl09XCJvdGhlclBsYWNlaG9sZGVyXCIgXG4gIFt2YWx1ZV09XCJvdGhlclZhbHVlXCJcbiAgW3N0eWxlLnJlc2l6ZV09XCJxdWVzdGlvbi5yZXNpemVTdHlsZVwiXG4gIFtkaXNhYmxlZF09XCJxdWVzdGlvbi5pc0lucHV0UmVhZE9ubHlcIlxuICAoY2hhbmdlKT1cIm9uT3RoZXJWYWx1ZUNoYW5nZSgkZXZlbnQpXCJcbiAgKGlucHV0KT1cIm9uT3RoZXJWYWx1ZUlucHV0KCRldmVudClcIlxuICBbY2xhc3NdPVwicXVlc3Rpb24uY3NzQ2xhc3Nlcy5vdGhlclwiPlxuPC90ZXh0YXJlYT5cbjxkaXYgKm5nSWY9XCJxdWVzdGlvbi5pc1JlYWRPbmx5UmVuZGVyRGl2KClcIj57eyBvdGhlclZhbHVlIH19PC9kaXY+XG4iXX0=