import { Component, Input } from "@angular/core";
import { BaseAngular } from "../base-angular";
import * as i0 from "@angular/core";
import * as i1 from "../survey-string.component";
import * as i2 from "../errors.component";
import * as i3 from "./text.component";
import * as i4 from "@angular/common";
export class MultipleTextItemComponent extends BaseAngular {
    getModel() {
        return this.model.editor;
    }
}
MultipleTextItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: MultipleTextItemComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
MultipleTextItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: MultipleTextItemComponent, selector: "'[sv-ng-multipletext-item]'", inputs: { question: "question", model: "model" }, usesInheritance: true, ngImport: i0, template: "<label [class]=\"question.getItemLabelCss(model)\">\n  <span [class]=\"question.getItemTitleCss()\">\n    <span *ngIf=\" model.editor.isRequireTextBeforeTitle || model.editor.isRequireTextOnStart\"\n      [class]=\"question.cssClasses.requiredText\">{{ model.editor.requiredText }}</span>\n    <sv-ng-string [model]=\"model.locTitle\"></sv-ng-string>\n    <span\n      *ngIf=\"model.editor.isRequireTextAfterTitle\"\n      [class]=\"question.cssClasses.requiredText\"\n      >{{ model.editor.requiredText }}</span\n    >\n  </span>\n  <div [class]=\"question.getItemCss()\">\n    <div *ngIf=\"model.editor.showErrorOnTop && model.editor.hasVisibleErrors\" [element]=\"model.editor\" sv-ng-errors></div>\n    <sv-ng-text-question [model]=\"model.editor\"></sv-ng-text-question>\n    <div *ngIf=\"model.editor.showErrorOnBottom && model.editor.hasVisibleErrors\" [element]=\"model.editor\" sv-ng-errors></div>\n  </div>\n  <div *ngIf=\"model.editor.isErrorsModeTooltip && model.editor.hasVisibleErrors\" [element]=\"model.editor\" [location]=\"'tooltip'\" sv-ng-errors></div>\n</label>", components: [{ type: i1.SurveyStringComponent, selector: "sv-ng-string, '[sv-ng-string]'", inputs: ["model"] }, { type: i2.ErrorsComponent, selector: "'[sv-ng-errors]'", inputs: ["element", "location"] }, { type: i3.TextQuestionComponent, selector: "sv-ng-text-question" }], directives: [{ type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: MultipleTextItemComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "'[sv-ng-multipletext-item]'",
                    templateUrl: "./mutlipletextitem.component.html"
                }]
        }], propDecorators: { question: [{
                type: Input
            }], model: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGlwbGV0ZXh0aXRlbS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcXVlc3Rpb25zL211bHRpcGxldGV4dGl0ZW0uY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vc3JjL3F1ZXN0aW9ucy9tdXRsaXBsZXRleHRpdGVtLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQzs7Ozs7O0FBTTlDLE1BQU0sT0FBTyx5QkFBMEIsU0FBUSxXQUE4QjtJQUdqRSxRQUFRO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUM7SUFDM0IsQ0FBQzs7dUhBTFUseUJBQXlCOzJHQUF6Qix5QkFBeUIsNElDUnRDLDZqQ0FpQlE7NEZEVEsseUJBQXlCO2tCQUpyQyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSw2QkFBNkI7b0JBQ3ZDLFdBQVcsRUFBRSxtQ0FBbUM7aUJBQ2pEOzhCQUVVLFFBQVE7c0JBQWhCLEtBQUs7Z0JBQ0csS0FBSztzQkFBYixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTXVsdGlwbGVUZXh0SXRlbU1vZGVsLCBRdWVzdGlvbk11bHRpcGxlVGV4dE1vZGVsLCBRdWVzdGlvblRleHRNb2RlbCB9IGZyb20gXCJzdXJ2ZXktY29yZVwiO1xuaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBCYXNlQW5ndWxhciB9IGZyb20gXCIuLi9iYXNlLWFuZ3VsYXJcIjtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiBcIidbc3YtbmctbXVsdGlwbGV0ZXh0LWl0ZW1dJ1wiLFxuICB0ZW1wbGF0ZVVybDogXCIuL211dGxpcGxldGV4dGl0ZW0uY29tcG9uZW50Lmh0bWxcIlxufSlcbmV4cG9ydCBjbGFzcyBNdWx0aXBsZVRleHRJdGVtQ29tcG9uZW50IGV4dGVuZHMgQmFzZUFuZ3VsYXI8UXVlc3Rpb25UZXh0TW9kZWw+IHtcbiAgQElucHV0KCkgcXVlc3Rpb24hOiBRdWVzdGlvbk11bHRpcGxlVGV4dE1vZGVsO1xuICBASW5wdXQoKSBtb2RlbCE6IE11bHRpcGxlVGV4dEl0ZW1Nb2RlbDtcbiAgcHJvdGVjdGVkIGdldE1vZGVsKCk6IFF1ZXN0aW9uVGV4dE1vZGVsIHtcbiAgICByZXR1cm4gdGhpcy5tb2RlbC5lZGl0b3I7XG4gIH1cbn1cbiIsIjxsYWJlbCBbY2xhc3NdPVwicXVlc3Rpb24uZ2V0SXRlbUxhYmVsQ3NzKG1vZGVsKVwiPlxuICA8c3BhbiBbY2xhc3NdPVwicXVlc3Rpb24uZ2V0SXRlbVRpdGxlQ3NzKClcIj5cbiAgICA8c3BhbiAqbmdJZj1cIiBtb2RlbC5lZGl0b3IuaXNSZXF1aXJlVGV4dEJlZm9yZVRpdGxlIHx8IG1vZGVsLmVkaXRvci5pc1JlcXVpcmVUZXh0T25TdGFydFwiXG4gICAgICBbY2xhc3NdPVwicXVlc3Rpb24uY3NzQ2xhc3Nlcy5yZXF1aXJlZFRleHRcIj57eyBtb2RlbC5lZGl0b3IucmVxdWlyZWRUZXh0IH19PC9zcGFuPlxuICAgIDxzdi1uZy1zdHJpbmcgW21vZGVsXT1cIm1vZGVsLmxvY1RpdGxlXCI+PC9zdi1uZy1zdHJpbmc+XG4gICAgPHNwYW5cbiAgICAgICpuZ0lmPVwibW9kZWwuZWRpdG9yLmlzUmVxdWlyZVRleHRBZnRlclRpdGxlXCJcbiAgICAgIFtjbGFzc109XCJxdWVzdGlvbi5jc3NDbGFzc2VzLnJlcXVpcmVkVGV4dFwiXG4gICAgICA+e3sgbW9kZWwuZWRpdG9yLnJlcXVpcmVkVGV4dCB9fTwvc3BhblxuICAgID5cbiAgPC9zcGFuPlxuICA8ZGl2IFtjbGFzc109XCJxdWVzdGlvbi5nZXRJdGVtQ3NzKClcIj5cbiAgICA8ZGl2ICpuZ0lmPVwibW9kZWwuZWRpdG9yLnNob3dFcnJvck9uVG9wICYmIG1vZGVsLmVkaXRvci5oYXNWaXNpYmxlRXJyb3JzXCIgW2VsZW1lbnRdPVwibW9kZWwuZWRpdG9yXCIgc3YtbmctZXJyb3JzPjwvZGl2PlxuICAgIDxzdi1uZy10ZXh0LXF1ZXN0aW9uIFttb2RlbF09XCJtb2RlbC5lZGl0b3JcIj48L3N2LW5nLXRleHQtcXVlc3Rpb24+XG4gICAgPGRpdiAqbmdJZj1cIm1vZGVsLmVkaXRvci5zaG93RXJyb3JPbkJvdHRvbSAmJiBtb2RlbC5lZGl0b3IuaGFzVmlzaWJsZUVycm9yc1wiIFtlbGVtZW50XT1cIm1vZGVsLmVkaXRvclwiIHN2LW5nLWVycm9ycz48L2Rpdj5cbiAgPC9kaXY+XG4gIDxkaXYgKm5nSWY9XCJtb2RlbC5lZGl0b3IuaXNFcnJvcnNNb2RlVG9vbHRpcCAmJiBtb2RlbC5lZGl0b3IuaGFzVmlzaWJsZUVycm9yc1wiIFtlbGVtZW50XT1cIm1vZGVsLmVkaXRvclwiIFtsb2NhdGlvbl09XCIndG9vbHRpcCdcIiBzdi1uZy1lcnJvcnM+PC9kaXY+XG48L2xhYmVsPiJdfQ==