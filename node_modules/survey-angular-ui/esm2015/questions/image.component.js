import { Component } from "@angular/core";
import { QuestionAngular } from "../question";
import { AngularComponentFactory } from "../component-factory";
import * as i0 from "@angular/core";
import * as i1 from "../components/svg-icon/svg-icon.component";
import * as i2 from "@angular/common";
import * as i3 from "../utils/safe-url.pipe";
export class ImageQuestionComponent extends QuestionAngular {
    ngAfterViewInit() {
        this.model.locImageLink.onChanged = () => {
            this.detectChanges();
        };
        super.ngAfterViewInit();
    }
    ngOnDestroy() {
        this.model.locImageLink.onChanged = () => { };
        super.ngOnDestroy();
    }
}
ImageQuestionComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ImageQuestionComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
ImageQuestionComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: ImageQuestionComponent, selector: "sv-ng-image-question", usesInheritance: true, ngImport: i0, template: "<div [class]=\"model.cssClasses.root\" #contentElement>\n  <img\n    *ngIf=\"model.renderedMode === 'image'\"\n    [class]=\"model.getImageCss()\"\n    [attr.src]=\"model.locImageLink.renderedHtml\"\n    [attr.alt]=\"model.altText || model.title\"\n    [attr.width]=\"model.renderedWidth\"\n    [attr.height]=\"model.renderedHeight\"\n    [style]=\"{ objectFit: model.imageFit }\"\n    (loadedmetadata)=\"model.onLoadHandler()\"\n    (error)=\"model.onErrorHandler()\"\n  /><video\n    controls\n    *ngIf=\"model.renderedMode === 'video'\"\n    [class]=\"model.getImageCss()\"\n    [attr.src]=\"model.locImageLink.renderedHtml\"\n    [attr.width]=\"model.renderedWidth\"\n    [attr.height]=\"model.renderedHeight\"\n    [style]=\"{ objectFit: model.imageFit }\"\n    (loadedmetadata)=\"model.onLoadHandler()\"\n    (error)=\"model.onErrorHandler()\"\n  ></video>\n  <iframe\n    *ngIf=\"model.renderedMode === 'youtube'\"\n    [class]=\"model.getImageCss()\"\n    [attr.src]=\"model.locImageLink.renderedHtml | safeResourceUrl\"\n    [attr.width]=\"model.renderedWidth\"\n    [attr.height]=\"model.renderedHeight\"\n    [style]=\"{ objectFit: model.imageFit }\"\n    ></iframe>\n    <div *ngIf=\"!model.imageLink || model.contentNotLoaded\" [class]=\"model.cssClasses.noImage\">\n      <svg [iconName]=\"model.cssClasses.noImageSvgIconId\" [size]=\"48\" sv-ng-svg-icon></svg>\n    </div>\n</div>", components: [{ type: i1.SvgIconComponent, selector: "'[sv-ng-svg-icon]'", inputs: ["size", "width", "height", "iconName", "partCss", "css", "title"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "safeResourceUrl": i3.SafeResourceUrlPipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ImageQuestionComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "sv-ng-image-question",
                    templateUrl: "./image.component.html"
                }]
        }] });
AngularComponentFactory.Instance.registerComponent("image-question", ImageQuestionComponent);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1hZ2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3F1ZXN0aW9ucy9pbWFnZS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi9zcmMvcXVlc3Rpb25zL2ltYWdlLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUU5QyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQzs7Ozs7QUFNL0QsTUFBTSxPQUFPLHNCQUF1QixTQUFRLGVBQW1DO0lBQ3BFLGVBQWU7UUFDdEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsU0FBUyxHQUFHLEdBQUcsRUFBRTtZQUN2QyxJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7UUFDdkIsQ0FBQyxDQUFDO1FBQ0YsS0FBSyxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQzFCLENBQUM7SUFDUSxXQUFXO1FBQ2xCLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLFNBQVMsR0FBRyxHQUFHLEVBQUUsR0FBRSxDQUFDLENBQUM7UUFDN0MsS0FBSyxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ3RCLENBQUM7O29IQVZVLHNCQUFzQjt3R0FBdEIsc0JBQXNCLG1GQ1RuQyxzM0NBaUNNOzRGRHhCTyxzQkFBc0I7a0JBSmxDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLHNCQUFzQjtvQkFDaEMsV0FBVyxFQUFFLHdCQUF3QjtpQkFDdEM7O0FBY0QsdUJBQXVCLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLGdCQUFnQixFQUFFLHNCQUFzQixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgUXVlc3Rpb25Bbmd1bGFyIH0gZnJvbSBcIi4uL3F1ZXN0aW9uXCI7XG5pbXBvcnQgeyBRdWVzdGlvbkltYWdlTW9kZWwgfSBmcm9tIFwic3VydmV5LWNvcmVcIjtcbmltcG9ydCB7IEFuZ3VsYXJDb21wb25lbnRGYWN0b3J5IH0gZnJvbSBcIi4uL2NvbXBvbmVudC1mYWN0b3J5XCI7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogXCJzdi1uZy1pbWFnZS1xdWVzdGlvblwiLFxuICB0ZW1wbGF0ZVVybDogXCIuL2ltYWdlLmNvbXBvbmVudC5odG1sXCJcbn0pXG5leHBvcnQgY2xhc3MgSW1hZ2VRdWVzdGlvbkNvbXBvbmVudCBleHRlbmRzIFF1ZXN0aW9uQW5ndWxhcjxRdWVzdGlvbkltYWdlTW9kZWw+IHtcbiAgb3ZlcnJpZGUgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQge1xuICAgIHRoaXMubW9kZWwubG9jSW1hZ2VMaW5rLm9uQ2hhbmdlZCA9ICgpID0+IHtcbiAgICAgIHRoaXMuZGV0ZWN0Q2hhbmdlcygpO1xuICAgIH07XG4gICAgc3VwZXIubmdBZnRlclZpZXdJbml0KCk7XG4gIH1cbiAgb3ZlcnJpZGUgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgdGhpcy5tb2RlbC5sb2NJbWFnZUxpbmsub25DaGFuZ2VkID0gKCkgPT4ge307XG4gICAgc3VwZXIubmdPbkRlc3Ryb3koKTtcbiAgfVxufVxuXG5Bbmd1bGFyQ29tcG9uZW50RmFjdG9yeS5JbnN0YW5jZS5yZWdpc3RlckNvbXBvbmVudChcImltYWdlLXF1ZXN0aW9uXCIsIEltYWdlUXVlc3Rpb25Db21wb25lbnQpOyIsIjxkaXYgW2NsYXNzXT1cIm1vZGVsLmNzc0NsYXNzZXMucm9vdFwiICNjb250ZW50RWxlbWVudD5cbiAgPGltZ1xuICAgICpuZ0lmPVwibW9kZWwucmVuZGVyZWRNb2RlID09PSAnaW1hZ2UnXCJcbiAgICBbY2xhc3NdPVwibW9kZWwuZ2V0SW1hZ2VDc3MoKVwiXG4gICAgW2F0dHIuc3JjXT1cIm1vZGVsLmxvY0ltYWdlTGluay5yZW5kZXJlZEh0bWxcIlxuICAgIFthdHRyLmFsdF09XCJtb2RlbC5hbHRUZXh0IHx8IG1vZGVsLnRpdGxlXCJcbiAgICBbYXR0ci53aWR0aF09XCJtb2RlbC5yZW5kZXJlZFdpZHRoXCJcbiAgICBbYXR0ci5oZWlnaHRdPVwibW9kZWwucmVuZGVyZWRIZWlnaHRcIlxuICAgIFtzdHlsZV09XCJ7IG9iamVjdEZpdDogbW9kZWwuaW1hZ2VGaXQgfVwiXG4gICAgKGxvYWRlZG1ldGFkYXRhKT1cIm1vZGVsLm9uTG9hZEhhbmRsZXIoKVwiXG4gICAgKGVycm9yKT1cIm1vZGVsLm9uRXJyb3JIYW5kbGVyKClcIlxuICAvPjx2aWRlb1xuICAgIGNvbnRyb2xzXG4gICAgKm5nSWY9XCJtb2RlbC5yZW5kZXJlZE1vZGUgPT09ICd2aWRlbydcIlxuICAgIFtjbGFzc109XCJtb2RlbC5nZXRJbWFnZUNzcygpXCJcbiAgICBbYXR0ci5zcmNdPVwibW9kZWwubG9jSW1hZ2VMaW5rLnJlbmRlcmVkSHRtbFwiXG4gICAgW2F0dHIud2lkdGhdPVwibW9kZWwucmVuZGVyZWRXaWR0aFwiXG4gICAgW2F0dHIuaGVpZ2h0XT1cIm1vZGVsLnJlbmRlcmVkSGVpZ2h0XCJcbiAgICBbc3R5bGVdPVwieyBvYmplY3RGaXQ6IG1vZGVsLmltYWdlRml0IH1cIlxuICAgIChsb2FkZWRtZXRhZGF0YSk9XCJtb2RlbC5vbkxvYWRIYW5kbGVyKClcIlxuICAgIChlcnJvcik9XCJtb2RlbC5vbkVycm9ySGFuZGxlcigpXCJcbiAgPjwvdmlkZW8+XG4gIDxpZnJhbWVcbiAgICAqbmdJZj1cIm1vZGVsLnJlbmRlcmVkTW9kZSA9PT0gJ3lvdXR1YmUnXCJcbiAgICBbY2xhc3NdPVwibW9kZWwuZ2V0SW1hZ2VDc3MoKVwiXG4gICAgW2F0dHIuc3JjXT1cIm1vZGVsLmxvY0ltYWdlTGluay5yZW5kZXJlZEh0bWwgfCBzYWZlUmVzb3VyY2VVcmxcIlxuICAgIFthdHRyLndpZHRoXT1cIm1vZGVsLnJlbmRlcmVkV2lkdGhcIlxuICAgIFthdHRyLmhlaWdodF09XCJtb2RlbC5yZW5kZXJlZEhlaWdodFwiXG4gICAgW3N0eWxlXT1cInsgb2JqZWN0Rml0OiBtb2RlbC5pbWFnZUZpdCB9XCJcbiAgICA+PC9pZnJhbWU+XG4gICAgPGRpdiAqbmdJZj1cIiFtb2RlbC5pbWFnZUxpbmsgfHwgbW9kZWwuY29udGVudE5vdExvYWRlZFwiIFtjbGFzc109XCJtb2RlbC5jc3NDbGFzc2VzLm5vSW1hZ2VcIj5cbiAgICAgIDxzdmcgW2ljb25OYW1lXT1cIm1vZGVsLmNzc0NsYXNzZXMubm9JbWFnZVN2Z0ljb25JZFwiIFtzaXplXT1cIjQ4XCIgc3Ytbmctc3ZnLWljb24+PC9zdmc+XG4gICAgPC9kaXY+XG48L2Rpdj4iXX0=