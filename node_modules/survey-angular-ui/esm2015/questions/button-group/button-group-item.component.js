import { Component, Input } from "@angular/core";
import { BaseAngular } from "../../base-angular";
import { ButtonGroupItemModel } from "survey-core";
import * as i0 from "@angular/core";
import * as i1 from "../../components/svg-icon/svg-icon.component";
import * as i2 from "../../survey-string.component";
import * as i3 from "@angular/forms";
import * as i4 from "@angular/common";
export class ButtonGroupItemComponent extends BaseAngular {
    ngOnChanges() {
        this.model = new ButtonGroupItemModel(this.question, this.item, this.index);
    }
    getModel() {
        return this.item;
    }
}
ButtonGroupItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ButtonGroupItemComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
ButtonGroupItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: ButtonGroupItemComponent, selector: "sv-button-group-item", inputs: { item: "item", question: "question", index: "index" }, usesInheritance: true, usesOnChanges: true, ngImport: i0, template: "<ng-template #template>\n  <label role=\"radio\" [class]=\"model.css.label\" [attr.title]=\"model.caption.renderedHtml\">\n    <input type=\"radio\"\n      [attr.name]=\"model.name\" [attr.id]=\"model.id\" [attr.aria-required]=\"model.isRequired\" [attr.aria-label]=\"model.caption.renderedHtml\" role=\"radio\" [attr.aria-invalid]=\"model.hasErrors\" [attr.aria-describedby]=\"model.describedBy\" [disabled]=\"model.readOnly\" [class]=\"model.css.control\" [(ngModel)]=\"question.renderedValue\" [attr.value]=\"model.value\" [value]=\"model.value\"/>\n    <div data-bind=\"css: model.css.decorator\">\n      <svg *ngIf=\"model.iconName\" [iconName]=\"model.iconName\" [size]=\"model.iconSize\" [class]=\"model.css.icon\" sv-ng-svg-icon></svg>\n      <span [class]=\"model.css.caption\" *ngIf=\"model.showCaption\" [attr.title]=\"model.caption.renderedHtml\" sv-ng-string [model]=\"model.caption\">\n      </span>\n    </div>\n  </label>\n</ng-template>", styles: [":host{display:none}\n"], components: [{ type: i1.SvgIconComponent, selector: "'[sv-ng-svg-icon]'", inputs: ["size", "width", "height", "iconName", "partCss", "css", "title"] }, { type: i2.SurveyStringComponent, selector: "sv-ng-string, '[sv-ng-string]'", inputs: ["model"] }], directives: [{ type: i3.RadioControlValueAccessor, selector: "input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]", inputs: ["name", "formControlName", "value"] }, { type: i3.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i3.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ButtonGroupItemComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "sv-button-group-item",
                    templateUrl: "./button-group-item.component.html",
                    styleUrls: ["../../hide-host.scss"]
                }]
        }], propDecorators: { item: [{
                type: Input
            }], question: [{
                type: Input
            }], index: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnV0dG9uLWdyb3VwLWl0ZW0uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3F1ZXN0aW9ucy9idXR0b24tZ3JvdXAvYnV0dG9uLWdyb3VwLWl0ZW0uY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vc3JjL3F1ZXN0aW9ucy9idXR0b24tZ3JvdXAvYnV0dG9uLWdyb3VwLWl0ZW0uY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQWEsTUFBTSxlQUFlLENBQUM7QUFDNUQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxvQkFBb0IsRUFBdUMsTUFBTSxhQUFhLENBQUM7Ozs7OztBQU94RixNQUFNLE9BQU8sd0JBQXlCLFNBQVEsV0FBc0I7SUFLM0QsV0FBVztRQUNoQixJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksb0JBQW9CLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM5RSxDQUFDO0lBQ1MsUUFBUTtRQUNoQixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUM7SUFDbkIsQ0FBQzs7c0hBVlUsd0JBQXdCOzBHQUF4Qix3QkFBd0Isd0tDVHJDLDI3QkFVYzs0RkRERCx3QkFBd0I7a0JBTHBDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLHNCQUFzQjtvQkFDaEMsV0FBVyxFQUFFLG9DQUFvQztvQkFDakQsU0FBUyxFQUFFLENBQUMsc0JBQXNCLENBQUM7aUJBQ3BDOzhCQUVVLElBQUk7c0JBQVosS0FBSztnQkFDRyxRQUFRO3NCQUFoQixLQUFLO2dCQUNHLEtBQUs7c0JBQWIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uQ2hhbmdlcyB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBCYXNlQW5ndWxhciB9IGZyb20gXCIuLi8uLi9iYXNlLWFuZ3VsYXJcIjtcbmltcG9ydCB7IEJ1dHRvbkdyb3VwSXRlbU1vZGVsLCBJdGVtVmFsdWUsIFF1ZXN0aW9uQnV0dG9uR3JvdXBNb2RlbCB9IGZyb20gXCJzdXJ2ZXktY29yZVwiO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6IFwic3YtYnV0dG9uLWdyb3VwLWl0ZW1cIixcbiAgdGVtcGxhdGVVcmw6IFwiLi9idXR0b24tZ3JvdXAtaXRlbS5jb21wb25lbnQuaHRtbFwiLFxuICBzdHlsZVVybHM6IFtcIi4uLy4uL2hpZGUtaG9zdC5zY3NzXCJdXG59KVxuZXhwb3J0IGNsYXNzIEJ1dHRvbkdyb3VwSXRlbUNvbXBvbmVudCBleHRlbmRzIEJhc2VBbmd1bGFyPEl0ZW1WYWx1ZT4gaW1wbGVtZW50cyBPbkNoYW5nZXMge1xuICBASW5wdXQoKSBpdGVtITogSXRlbVZhbHVlO1xuICBASW5wdXQoKSBxdWVzdGlvbiE6IFF1ZXN0aW9uQnV0dG9uR3JvdXBNb2RlbDtcbiAgQElucHV0KCkgaW5kZXghOiBudW1iZXI7XG4gIHB1YmxpYyBtb2RlbCE6IEJ1dHRvbkdyb3VwSXRlbU1vZGVsO1xuICBwdWJsaWMgbmdPbkNoYW5nZXMoKTogdm9pZCB7XG4gICAgdGhpcy5tb2RlbCA9IG5ldyBCdXR0b25Hcm91cEl0ZW1Nb2RlbCh0aGlzLnF1ZXN0aW9uLCB0aGlzLml0ZW0sIHRoaXMuaW5kZXgpO1xuICB9XG4gIHByb3RlY3RlZCBnZXRNb2RlbCgpOiBJdGVtVmFsdWUge1xuICAgIHJldHVybiB0aGlzLml0ZW07XG4gIH1cbn0iLCI8bmctdGVtcGxhdGUgI3RlbXBsYXRlPlxuICA8bGFiZWwgcm9sZT1cInJhZGlvXCIgW2NsYXNzXT1cIm1vZGVsLmNzcy5sYWJlbFwiIFthdHRyLnRpdGxlXT1cIm1vZGVsLmNhcHRpb24ucmVuZGVyZWRIdG1sXCI+XG4gICAgPGlucHV0IHR5cGU9XCJyYWRpb1wiXG4gICAgICBbYXR0ci5uYW1lXT1cIm1vZGVsLm5hbWVcIiBbYXR0ci5pZF09XCJtb2RlbC5pZFwiIFthdHRyLmFyaWEtcmVxdWlyZWRdPVwibW9kZWwuaXNSZXF1aXJlZFwiIFthdHRyLmFyaWEtbGFiZWxdPVwibW9kZWwuY2FwdGlvbi5yZW5kZXJlZEh0bWxcIiByb2xlPVwicmFkaW9cIiBbYXR0ci5hcmlhLWludmFsaWRdPVwibW9kZWwuaGFzRXJyb3JzXCIgW2F0dHIuYXJpYS1kZXNjcmliZWRieV09XCJtb2RlbC5kZXNjcmliZWRCeVwiIFtkaXNhYmxlZF09XCJtb2RlbC5yZWFkT25seVwiIFtjbGFzc109XCJtb2RlbC5jc3MuY29udHJvbFwiIFsobmdNb2RlbCldPVwicXVlc3Rpb24ucmVuZGVyZWRWYWx1ZVwiIFthdHRyLnZhbHVlXT1cIm1vZGVsLnZhbHVlXCIgW3ZhbHVlXT1cIm1vZGVsLnZhbHVlXCIvPlxuICAgIDxkaXYgZGF0YS1iaW5kPVwiY3NzOiBtb2RlbC5jc3MuZGVjb3JhdG9yXCI+XG4gICAgICA8c3ZnICpuZ0lmPVwibW9kZWwuaWNvbk5hbWVcIiBbaWNvbk5hbWVdPVwibW9kZWwuaWNvbk5hbWVcIiBbc2l6ZV09XCJtb2RlbC5pY29uU2l6ZVwiIFtjbGFzc109XCJtb2RlbC5jc3MuaWNvblwiIHN2LW5nLXN2Zy1pY29uPjwvc3ZnPlxuICAgICAgPHNwYW4gW2NsYXNzXT1cIm1vZGVsLmNzcy5jYXB0aW9uXCIgKm5nSWY9XCJtb2RlbC5zaG93Q2FwdGlvblwiIFthdHRyLnRpdGxlXT1cIm1vZGVsLmNhcHRpb24ucmVuZGVyZWRIdG1sXCIgc3Ytbmctc3RyaW5nIFttb2RlbF09XCJtb2RlbC5jYXB0aW9uXCI+XG4gICAgICA8L3NwYW4+XG4gICAgPC9kaXY+XG4gIDwvbGFiZWw+XG48L25nLXRlbXBsYXRlPiJdfQ==