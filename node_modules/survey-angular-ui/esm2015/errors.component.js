import { Component, HostBinding, Input, ViewChild } from "@angular/core";
import { TooltipManager } from "survey-core";
import * as i0 from "@angular/core";
import * as i1 from "./survey-string.component";
import * as i2 from "@angular/common";
export class ErrorsComponent {
    constructor(viewContainerRef) {
        this.viewContainerRef = viewContainerRef;
    }
    ngOnInit() {
        if (this.location == "tooltip") {
            this.tooltipManager = new TooltipManager(this.viewContainerRef.element.nativeElement);
        }
    }
    ngOnDestroy() {
        if (!!this.tooltipManager) {
            this.tooltipManager.dispose();
        }
    }
    get role() {
        return "alert";
    }
    get id() {
        return this.element.id + "_errors";
    }
    get ariaLive() {
        return "polite";
    }
    get class() {
        return this.element.cssError;
    }
}
ErrorsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ErrorsComponent, deps: [{ token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Component });
ErrorsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: ErrorsComponent, selector: "'[sv-ng-errors]'", inputs: { element: "element", location: "location" }, host: { properties: { "attr.role": "this.role", "id": "this.id", "attr.aria-live": "this.ariaLive", "class": "this.class" } }, viewQueries: [{ propertyName: "errorsContainerRef", first: true, predicate: ["errorsContainer"], descendants: true, static: true }], ngImport: i0, template: "<div *ngFor=\"let error of element.errors;\">\n  <span\n    [class]=\"element.cssClasses ? element.cssClasses.error.icon : 'panel-error-icon'\"\n    aria-hidden=\"true\"\n  ></span>\n  <span [class]=\"element.cssClasses ? element.cssClasses.error.item : 'panel-error-item'\" [model]=\"error.locText\" sv-ng-string>\n  </span>\n</div>", components: [{ type: i1.SurveyStringComponent, selector: "sv-ng-string, '[sv-ng-string]'", inputs: ["model"] }], directives: [{ type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ErrorsComponent, decorators: [{
            type: Component,
            args: [{
                    templateUrl: "./errors.component.html",
                    selector: "'[sv-ng-errors]'"
                }]
        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }]; }, propDecorators: { element: [{
                type: Input
            }], location: [{
                type: Input
            }], errorsContainerRef: [{
                type: ViewChild,
                args: ["errorsContainer", { static: true }]
            }], role: [{
                type: HostBinding,
                args: ["attr.role"]
            }], id: [{
                type: HostBinding,
                args: ["id"]
            }], ariaLive: [{
                type: HostBinding,
                args: ["attr.aria-live"]
            }], class: [{
                type: HostBinding,
                args: ["class"]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3JzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9lcnJvcnMuY29tcG9uZW50LnRzIiwiLi4vLi4vc3JjL2Vycm9ycy5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUF1QixXQUFXLEVBQUUsS0FBSyxFQUFxQixTQUFTLEVBQW9CLE1BQU0sZUFBZSxDQUFDO0FBQ25JLE9BQU8sRUFBdUIsY0FBYyxFQUFFLE1BQU0sYUFBYSxDQUFDOzs7O0FBTWxFLE1BQU0sT0FBTyxlQUFlO0lBSzFCLFlBQW9CLGdCQUFrQztRQUFsQyxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO0lBQUcsQ0FBQztJQUMxRCxRQUFRO1FBQ04sSUFBSSxJQUFJLENBQUMsUUFBUSxJQUFJLFNBQVMsRUFBRTtZQUM5QixJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksY0FBYyxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUM7U0FDdkY7SUFDSCxDQUFDO0lBQ0QsV0FBVztRQUNULElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUU7WUFDekIsSUFBSSxDQUFDLGNBQWMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztTQUMvQjtJQUNILENBQUM7SUFDRCxJQUE4QixJQUFJO1FBQ2hDLE9BQU8sT0FBTyxDQUFDO0lBQ2pCLENBQUM7SUFDRCxJQUF1QixFQUFFO1FBQ3ZCLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEdBQUcsU0FBUyxDQUFDO0lBQ3JDLENBQUM7SUFDRCxJQUFtQyxRQUFRO1FBQ3pDLE9BQU8sUUFBUSxDQUFDO0lBQ2xCLENBQUM7SUFDRCxJQUEwQixLQUFLO1FBQzdCLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUM7SUFDL0IsQ0FBQzs7NkdBM0JVLGVBQWU7aUdBQWYsZUFBZSxrWENQNUIsK1VBT007NEZEQU8sZUFBZTtrQkFKM0IsU0FBUzttQkFBQztvQkFDVCxXQUFXLEVBQUUseUJBQXlCO29CQUN0QyxRQUFRLEVBQUUsa0JBQWtCO2lCQUM3Qjt1R0FFVSxPQUFPO3NCQUFmLEtBQUs7Z0JBQ0csUUFBUTtzQkFBaEIsS0FBSztnQkFDMEMsa0JBQWtCO3NCQUFqRSxTQUFTO3VCQUFDLGlCQUFpQixFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTtnQkFhaEIsSUFBSTtzQkFBakMsV0FBVzt1QkFBQyxXQUFXO2dCQUdELEVBQUU7c0JBQXhCLFdBQVc7dUJBQUMsSUFBSTtnQkFHa0IsUUFBUTtzQkFBMUMsV0FBVzt1QkFBQyxnQkFBZ0I7Z0JBR0gsS0FBSztzQkFBOUIsV0FBVzt1QkFBQyxPQUFPIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBEb0NoZWNrLCBFbGVtZW50UmVmLCBIb3N0QmluZGluZywgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0LCBWaWV3Q2hpbGQsIFZpZXdDb250YWluZXJSZWYgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgQmFzZSwgU3VydmV5RWxlbWVudCwgVG9vbHRpcE1hbmFnZXIgfSBmcm9tIFwic3VydmV5LWNvcmVcIjtcblxuQENvbXBvbmVudCh7XG4gIHRlbXBsYXRlVXJsOiBcIi4vZXJyb3JzLmNvbXBvbmVudC5odG1sXCIsXG4gIHNlbGVjdG9yOiBcIidbc3YtbmctZXJyb3JzXSdcIlxufSlcbmV4cG9ydCBjbGFzcyBFcnJvcnNDb21wb25lbnQgaW1wbGVtZW50cyBPbkRlc3Ryb3ksIE9uSW5pdCB7XG4gIEBJbnB1dCgpIGVsZW1lbnQhOiBTdXJ2ZXlFbGVtZW50IHwgYW55O1xuICBASW5wdXQoKSBsb2NhdGlvbj86IFN0cmluZztcbiAgQFZpZXdDaGlsZChcImVycm9yc0NvbnRhaW5lclwiLCB7IHN0YXRpYzogdHJ1ZSB9KSBlcnJvcnNDb250YWluZXJSZWYhOiBFbGVtZW50UmVmPEhUTUxEaXZFbGVtZW50PjtcbiAgcHJpdmF0ZSB0b29sdGlwTWFuYWdlciE6IFRvb2x0aXBNYW5hZ2VyO1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHZpZXdDb250YWluZXJSZWY6IFZpZXdDb250YWluZXJSZWYpIHt9XG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIGlmICh0aGlzLmxvY2F0aW9uID09IFwidG9vbHRpcFwiKSB7XG4gICAgICB0aGlzLnRvb2x0aXBNYW5hZ2VyID0gbmV3IFRvb2x0aXBNYW5hZ2VyKHRoaXMudmlld0NvbnRhaW5lclJlZi5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQpO1xuICAgIH1cbiAgfVxuICBuZ09uRGVzdHJveSgpIHtcbiAgICBpZiAoISF0aGlzLnRvb2x0aXBNYW5hZ2VyKSB7XG4gICAgICB0aGlzLnRvb2x0aXBNYW5hZ2VyLmRpc3Bvc2UoKTtcbiAgICB9XG4gIH1cbiAgQEhvc3RCaW5kaW5nKFwiYXR0ci5yb2xlXCIpIGdldCByb2xlICgpOiBzdHJpbmcge1xuICAgIHJldHVybiBcImFsZXJ0XCI7XG4gIH1cbiAgQEhvc3RCaW5kaW5nKFwiaWRcIikgZ2V0IGlkKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudC5pZCArIFwiX2Vycm9yc1wiO1xuICB9XG4gIEBIb3N0QmluZGluZyhcImF0dHIuYXJpYS1saXZlXCIpIGdldCBhcmlhTGl2ZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiBcInBvbGl0ZVwiO1xuICB9XG4gIEBIb3N0QmluZGluZyhcImNsYXNzXCIpIGdldCBjbGFzcygpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnQuY3NzRXJyb3I7XG4gIH1cbn0iLCI8ZGl2ICpuZ0Zvcj1cImxldCBlcnJvciBvZiBlbGVtZW50LmVycm9ycztcIj5cbiAgPHNwYW5cbiAgICBbY2xhc3NdPVwiZWxlbWVudC5jc3NDbGFzc2VzID8gZWxlbWVudC5jc3NDbGFzc2VzLmVycm9yLmljb24gOiAncGFuZWwtZXJyb3ItaWNvbidcIlxuICAgIGFyaWEtaGlkZGVuPVwidHJ1ZVwiXG4gID48L3NwYW4+XG4gIDxzcGFuIFtjbGFzc109XCJlbGVtZW50LmNzc0NsYXNzZXMgPyBlbGVtZW50LmNzc0NsYXNzZXMuZXJyb3IuaXRlbSA6ICdwYW5lbC1lcnJvci1pdGVtJ1wiIFttb2RlbF09XCJlcnJvci5sb2NUZXh0XCIgc3Ytbmctc3RyaW5nPlxuICA8L3NwYW4+XG48L2Rpdj4iXX0=