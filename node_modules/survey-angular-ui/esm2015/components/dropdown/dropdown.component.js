import { Component, Input, ViewChild } from "@angular/core";
import { DropdownListModel, Helpers } from "survey-core";
import { BaseAngular } from "../../base-angular";
import * as i0 from "@angular/core";
import * as i1 from "../../survey-string.component";
import * as i2 from "../svg-icon/svg-icon.component";
import * as i3 from "../popup/popup.component";
import * as i4 from "@angular/common";
import * as i5 from "../../utils/dynamic.directive";
import * as i6 from "@angular/forms";
import * as i7 from "../../utils/ng-show.directive";
export class DropdownComponent extends BaseAngular {
    get dropdownModel() {
        var _a;
        return (_a = this.model) === null || _a === void 0 ? void 0 : _a.dropdownListModel;
    }
    getModel() {
        return this.model.dropdownListModel;
    }
    ngOnInit() {
        super.ngOnInit();
        if (!this.model.dropdownListModel) {
            this.model.dropdownListModel = new DropdownListModel(this.model);
        }
    }
    ngOnDestroy() {
        var _a;
        super.ngOnDestroy();
        (_a = this.dropdownModel) === null || _a === void 0 ? void 0 : _a.dispose();
    }
    click(event) {
        var _a;
        (_a = this.dropdownModel) === null || _a === void 0 ? void 0 : _a.onClick(event);
    }
    clear(event) {
        var _a;
        (_a = this.dropdownModel) === null || _a === void 0 ? void 0 : _a.onClear(event);
    }
    keyhandler(event) {
        var _a;
        (_a = this.dropdownModel) === null || _a === void 0 ? void 0 : _a.keyHandler(event);
    }
    blur(event) {
        var _a;
        (_a = this.dropdownModel) === null || _a === void 0 ? void 0 : _a.onBlur(event);
        this.updateInputDomElement();
    }
    focus(event) {
        var _a;
        (_a = this.dropdownModel) === null || _a === void 0 ? void 0 : _a.onFocus(event);
    }
    inputChange(event) {
        this.detectChanges();
    }
    updateInputDomElement() {
        var _a;
        if (!!((_a = this.inputElementRef) === null || _a === void 0 ? void 0 : _a.nativeElement)) {
            const control = this.inputElementRef.nativeElement;
            const newValue = this.model.inputStringRendered;
            if (!Helpers.isTwoValueEquals(newValue, control.value)) {
                control.value = this.model.inputStringRendered || "";
            }
        }
    }
}
DropdownComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: DropdownComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
DropdownComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: DropdownComponent, selector: "sv-ng-dropdown, '[sv-ng-dropdown]'", inputs: { model: "model" }, viewQueries: [{ propertyName: "inputElementRef", first: true, predicate: ["inputElement"], descendants: true }], usesInheritance: true, ngImport: i0, template: "<div [class]=\"model.cssClasses.selectWrapper\">\n    <div *ngIf=\"!model.isReadOnly\" [attr.tabindex]=\"dropdownModel.inputReadOnly ? null : 0\" [class]=\"model.getControlClass()\"\n        [attr.disabled]=\"model.isInputReadOnly ? true : null\" (click)=\"click($event)\" (blur)=\"blur($event)\"\n        (keydown)=\"keyhandler($event)\" [attr.id]=\"model.inputId\" [attr.aria-required]=\"model.ariaRequired\"\n        [attr.aria-label]=\"model.ariaLabel\" [attr.aria-invalid]=\"model.ariaInvalid\"\n        [attr.aria-describedby]=\"model.ariaDescribedBy\" [attr.role]=\"model.ariaRole\"\n        [attr.aria-controls]=\"dropdownModel.listElementId\"\n        [attr.aria-expanded]=\"model.ariaExpanded ? 'true' : 'false'\"\n        [attr.aria-activedescendant]=\"dropdownModel.ariaActivedescendant\">\n        <div *ngIf=\"dropdownModel.showHintPrefix\" [class]=\"model.cssClasses.hintPrefix\">\n            <span>{{ dropdownModel.hintStringPrefix }}</span>\n        </div>\n        <div [class]=\"model.cssClasses.controlValue\">\n            <div *ngIf=\"dropdownModel.showHintString\" [class]=\"model.cssClasses.hintSuffix\">\n                <span style=\"visibility: hidden\">{{ dropdownModel.inputStringRendered }}</span>\n                <span>{{ dropdownModel.hintStringSuffix }}</span>\n            </div>\n            <ng-container *ngIf=\"dropdownModel.showInputFieldComponent\">\n                <ng-template [component]=\"{ name: model.inputFieldComponentName, data: { model: dropdownModel.getSelectedAction(), question: model } }\"></ng-template>\n            </ng-container>\n            <sv-ng-string *ngIf=\"dropdownModel.showSelectedItemLocText\" [model]=\"model.selectedItemLocText\"></sv-ng-string>\n            <input #inputElement type=\"text\" autocomplete=\"off\" [(ngModel)]=\"dropdownModel.inputStringRendered\" [class]=\"model.cssClasses.filterStringInput\"\n            [attr.role]=\"dropdownModel.filterStringEnabled ? model.ariaRole : null\"\n            [attr.id]=\"model.getInputId()\"\n            [attr.inputmode]=\"dropdownModel.inputMode\"\n            [attr.tabindex]=\"dropdownModel.inputReadOnly ? null : -1\"\n            [attr.disabled]=\"model.isInputReadOnly ? true : null\"\n            [attr.aria-label]=\"model.placeholder\"\n            [attr.aria-controls]=\"dropdownModel.listElementId\"\n            [attr.aria-expanded]=\"model.ariaExpanded ? 'true' : 'false'\"\n            [attr.aria-activedescendant]=\"dropdownModel.ariaActivedescendant\"\n            [attr.placeholder]=\"dropdownModel.placeholderRendered\" [attr.readonly]=\"!dropdownModel.searchEnabled ? true : null\" \n            (change)=\"inputChange($event)\" (blur)=\"blur($event)\" (focus)=\"focus($event)\"/>\n        </div>\n        <div *ngIf=\"(model.allowClear && model.cssClasses.cleanButtonIconId)\"\n            [class]=\"model.cssClasses.cleanButton\" (click)=\"clear($event)\" [visible]=\"!model.isEmpty()\">\n            <!-- ko component: { name: 'sv-svg-icon', params: { css: model.cssClasses.cleanButtonSvg, iconName: model.cssClasses.cleanButtonIconId, size: 'auto' } } -->\n            <!-- /ko -->\n            <svg [iconName]=\"model.cssClasses.cleanButtonIconId\" [partCss]=\"model.cssClasses.cleanButtonSvg\" [title]=\"model.clearCaption\"\n                [size]=\"'auto'\" sv-ng-svg-icon></svg>\n        </div>\n    </div>\n    <sv-ng-popup *ngIf=\"!model.isReadOnly\" [popupModel]=\"dropdownModel.popupModel\"></sv-ng-popup>\n    <div disabled *ngIf=\"model.isReadOnly\" [class]=\"model.getControlClass()\" [attr.id]=\"model.inputId\">\n        <sv-ng-string *ngIf=\"model.selectedItemLocText\" [model]=\"model.selectedItemLocText\"></sv-ng-string>\n        <div>{{ model.readOnlyText }}</div>\n    </div>\n</div>", components: [{ type: i1.SurveyStringComponent, selector: "sv-ng-string, '[sv-ng-string]'", inputs: ["model"] }, { type: i2.SvgIconComponent, selector: "'[sv-ng-svg-icon]'", inputs: ["size", "width", "height", "iconName", "partCss", "css", "title"] }, { type: i3.PopupComponent, selector: "sv-ng-popup, '[sv-ng-popup]'", inputs: ["popupModel"] }], directives: [{ type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5.DynamicComponentDirective, selector: "[component]", inputs: ["component"] }, { type: i6.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i6.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i6.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i7.VisibleDirective, selector: "[visible]", inputs: ["visible"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: DropdownComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "sv-ng-dropdown, '[sv-ng-dropdown]'",
                    templateUrl: "./dropdown.component.html"
                }]
        }], propDecorators: { model: [{
                type: Input
            }], inputElementRef: [{
                type: ViewChild,
                args: ["inputElement"]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvZHJvcGRvd24vZHJvcGRvd24uY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvZHJvcGRvd24vZHJvcGRvd24uY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBYyxLQUFLLEVBQXFCLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzRixPQUFPLEVBQUUsaUJBQWlCLEVBQUUsT0FBTyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQ3pELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQzs7Ozs7Ozs7O0FBTWpELE1BQU0sT0FBTyxpQkFBa0IsU0FBUSxXQUFXO0lBRzlDLElBQUksYUFBYTs7UUFDZixPQUFPLE1BQUEsSUFBSSxDQUFDLEtBQUssMENBQUUsaUJBQWlCLENBQUM7SUFDdkMsQ0FBQztJQUNTLFFBQVE7UUFDaEIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLGlCQUFpQixDQUFDO0lBQ3RDLENBQUM7SUFFUSxRQUFRO1FBQ2YsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLGlCQUFpQixFQUFFO1lBQ2pDLElBQUksQ0FBQyxLQUFLLENBQUMsaUJBQWlCLEdBQUcsSUFBSSxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDbEU7SUFDSCxDQUFDO0lBRVEsV0FBVzs7UUFDbEIsS0FBSyxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ3BCLE1BQUEsSUFBSSxDQUFDLGFBQWEsMENBQUUsT0FBTyxFQUFFLENBQUM7SUFDaEMsQ0FBQztJQUVELEtBQUssQ0FBQyxLQUFVOztRQUNkLE1BQUEsSUFBSSxDQUFDLGFBQWEsMENBQUUsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3JDLENBQUM7SUFDRCxLQUFLLENBQUMsS0FBVTs7UUFDZCxNQUFBLElBQUksQ0FBQyxhQUFhLDBDQUFFLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNyQyxDQUFDO0lBQ0QsVUFBVSxDQUFDLEtBQVU7O1FBQ25CLE1BQUEsSUFBSSxDQUFDLGFBQWEsMENBQUUsVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3hDLENBQUM7SUFDRCxJQUFJLENBQUMsS0FBVTs7UUFDYixNQUFBLElBQUksQ0FBQyxhQUFhLDBDQUFFLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNsQyxJQUFJLENBQUMscUJBQXFCLEVBQUUsQ0FBQztJQUMvQixDQUFDO0lBQ0gsS0FBSyxDQUFDLEtBQVU7O1FBQ2QsTUFBQSxJQUFJLENBQUMsYUFBYSwwQ0FBRSxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDckMsQ0FBQztJQUNDLFdBQVcsQ0FBQyxLQUFVO1FBQ3BCLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztJQUN2QixDQUFDO0lBQ0QscUJBQXFCOztRQUNuQixJQUFJLENBQUMsQ0FBQyxDQUFBLE1BQUEsSUFBSSxDQUFDLGVBQWUsMENBQUUsYUFBYSxDQUFBLEVBQUU7WUFDekMsTUFBTSxPQUFPLEdBQVEsSUFBSSxDQUFDLGVBQWUsQ0FBQyxhQUFhLENBQUM7WUFDeEQsTUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxtQkFBbUIsQ0FBQztZQUNoRCxJQUFJLENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDLFFBQVEsRUFBRSxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUU7Z0JBQ3RELE9BQU8sQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxtQkFBbUIsSUFBSSxFQUFFLENBQUM7YUFDdEQ7U0FDRjtJQUNILENBQUM7OytHQWpEUSxpQkFBaUI7bUdBQWpCLGlCQUFpQiw4T0NSOUIsMnFIQStDTTs0RkR2Q08saUJBQWlCO2tCQUo3QixTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxvQ0FBb0M7b0JBQzlDLFdBQVcsRUFBRSwyQkFBMkI7aUJBQ3ZDOzhCQUVVLEtBQUs7c0JBQWIsS0FBSztnQkFDcUIsZUFBZTtzQkFBekMsU0FBUzt1QkFBQyxjQUFjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBJbnB1dCwgT25EZXN0cm95LCBPbkluaXQsIFZpZXdDaGlsZCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBEcm9wZG93bkxpc3RNb2RlbCwgSGVscGVycyB9IGZyb20gXCJzdXJ2ZXktY29yZVwiO1xuaW1wb3J0IHsgQmFzZUFuZ3VsYXIgfSBmcm9tIFwiLi4vLi4vYmFzZS1hbmd1bGFyXCI7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogXCJzdi1uZy1kcm9wZG93biwgJ1tzdi1uZy1kcm9wZG93bl0nXCIsXG4gIHRlbXBsYXRlVXJsOiBcIi4vZHJvcGRvd24uY29tcG9uZW50Lmh0bWxcIlxuICB9KVxuZXhwb3J0IGNsYXNzIERyb3Bkb3duQ29tcG9uZW50IGV4dGVuZHMgQmFzZUFuZ3VsYXIgaW1wbGVtZW50cyBPbkRlc3Ryb3ksIE9uSW5pdCB7XG4gICAgQElucHV0KCkgbW9kZWw6IGFueTtcbiAgICBAVmlld0NoaWxkKFwiaW5wdXRFbGVtZW50XCIpIGlucHV0RWxlbWVudFJlZiE6IEVsZW1lbnRSZWY8SFRNTERpdkVsZW1lbnQ+O1xuICAgIGdldCBkcm9wZG93bk1vZGVsKCk6IERyb3Bkb3duTGlzdE1vZGVsIHtcbiAgICAgIHJldHVybiB0aGlzLm1vZGVsPy5kcm9wZG93bkxpc3RNb2RlbDtcbiAgICB9XG4gICAgcHJvdGVjdGVkIGdldE1vZGVsKCkge1xuICAgICAgcmV0dXJuIHRoaXMubW9kZWwuZHJvcGRvd25MaXN0TW9kZWw7XG4gICAgfVxuXG4gICAgb3ZlcnJpZGUgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgICBzdXBlci5uZ09uSW5pdCgpO1xuICAgICAgaWYgKCF0aGlzLm1vZGVsLmRyb3Bkb3duTGlzdE1vZGVsKSB7XG4gICAgICAgIHRoaXMubW9kZWwuZHJvcGRvd25MaXN0TW9kZWwgPSBuZXcgRHJvcGRvd25MaXN0TW9kZWwodGhpcy5tb2RlbCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgb3ZlcnJpZGUgbmdPbkRlc3Ryb3koKSB7XG4gICAgICBzdXBlci5uZ09uRGVzdHJveSgpO1xuICAgICAgdGhpcy5kcm9wZG93bk1vZGVsPy5kaXNwb3NlKCk7XG4gICAgfVxuXG4gICAgY2xpY2soZXZlbnQ6IGFueSkge1xuICAgICAgdGhpcy5kcm9wZG93bk1vZGVsPy5vbkNsaWNrKGV2ZW50KTtcbiAgICB9XG4gICAgY2xlYXIoZXZlbnQ6IGFueSkge1xuICAgICAgdGhpcy5kcm9wZG93bk1vZGVsPy5vbkNsZWFyKGV2ZW50KTtcbiAgICB9XG4gICAga2V5aGFuZGxlcihldmVudDogYW55KSB7XG4gICAgICB0aGlzLmRyb3Bkb3duTW9kZWw/LmtleUhhbmRsZXIoZXZlbnQpO1xuICAgIH1cbiAgICBibHVyKGV2ZW50OiBhbnkpIHtcbiAgICAgIHRoaXMuZHJvcGRvd25Nb2RlbD8ub25CbHVyKGV2ZW50KTtcbiAgICAgIHRoaXMudXBkYXRlSW5wdXREb21FbGVtZW50KCk7XG4gICAgfVxuICBmb2N1cyhldmVudDogYW55KSB7XG4gICAgdGhpcy5kcm9wZG93bk1vZGVsPy5vbkZvY3VzKGV2ZW50KTtcbiAgfVxuICAgIGlucHV0Q2hhbmdlKGV2ZW50OiBhbnkpIHtcbiAgICAgIHRoaXMuZGV0ZWN0Q2hhbmdlcygpO1xuICAgIH1cbiAgICB1cGRhdGVJbnB1dERvbUVsZW1lbnQoKSB7XG4gICAgICBpZiAoISF0aGlzLmlucHV0RWxlbWVudFJlZj8ubmF0aXZlRWxlbWVudCkge1xuICAgICAgICBjb25zdCBjb250cm9sOiBhbnkgPSB0aGlzLmlucHV0RWxlbWVudFJlZi5uYXRpdmVFbGVtZW50O1xuICAgICAgICBjb25zdCBuZXdWYWx1ZSA9IHRoaXMubW9kZWwuaW5wdXRTdHJpbmdSZW5kZXJlZDtcbiAgICAgICAgaWYgKCFIZWxwZXJzLmlzVHdvVmFsdWVFcXVhbHMobmV3VmFsdWUsIGNvbnRyb2wudmFsdWUpKSB7XG4gICAgICAgICAgY29udHJvbC52YWx1ZSA9IHRoaXMubW9kZWwuaW5wdXRTdHJpbmdSZW5kZXJlZCB8fCBcIlwiO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxufSIsIjxkaXYgW2NsYXNzXT1cIm1vZGVsLmNzc0NsYXNzZXMuc2VsZWN0V3JhcHBlclwiPlxuICAgIDxkaXYgKm5nSWY9XCIhbW9kZWwuaXNSZWFkT25seVwiIFthdHRyLnRhYmluZGV4XT1cImRyb3Bkb3duTW9kZWwuaW5wdXRSZWFkT25seSA/IG51bGwgOiAwXCIgW2NsYXNzXT1cIm1vZGVsLmdldENvbnRyb2xDbGFzcygpXCJcbiAgICAgICAgW2F0dHIuZGlzYWJsZWRdPVwibW9kZWwuaXNJbnB1dFJlYWRPbmx5ID8gdHJ1ZSA6IG51bGxcIiAoY2xpY2spPVwiY2xpY2soJGV2ZW50KVwiIChibHVyKT1cImJsdXIoJGV2ZW50KVwiXG4gICAgICAgIChrZXlkb3duKT1cImtleWhhbmRsZXIoJGV2ZW50KVwiIFthdHRyLmlkXT1cIm1vZGVsLmlucHV0SWRcIiBbYXR0ci5hcmlhLXJlcXVpcmVkXT1cIm1vZGVsLmFyaWFSZXF1aXJlZFwiXG4gICAgICAgIFthdHRyLmFyaWEtbGFiZWxdPVwibW9kZWwuYXJpYUxhYmVsXCIgW2F0dHIuYXJpYS1pbnZhbGlkXT1cIm1vZGVsLmFyaWFJbnZhbGlkXCJcbiAgICAgICAgW2F0dHIuYXJpYS1kZXNjcmliZWRieV09XCJtb2RlbC5hcmlhRGVzY3JpYmVkQnlcIiBbYXR0ci5yb2xlXT1cIm1vZGVsLmFyaWFSb2xlXCJcbiAgICAgICAgW2F0dHIuYXJpYS1jb250cm9sc109XCJkcm9wZG93bk1vZGVsLmxpc3RFbGVtZW50SWRcIlxuICAgICAgICBbYXR0ci5hcmlhLWV4cGFuZGVkXT1cIm1vZGVsLmFyaWFFeHBhbmRlZCA/ICd0cnVlJyA6ICdmYWxzZSdcIlxuICAgICAgICBbYXR0ci5hcmlhLWFjdGl2ZWRlc2NlbmRhbnRdPVwiZHJvcGRvd25Nb2RlbC5hcmlhQWN0aXZlZGVzY2VuZGFudFwiPlxuICAgICAgICA8ZGl2ICpuZ0lmPVwiZHJvcGRvd25Nb2RlbC5zaG93SGludFByZWZpeFwiIFtjbGFzc109XCJtb2RlbC5jc3NDbGFzc2VzLmhpbnRQcmVmaXhcIj5cbiAgICAgICAgICAgIDxzcGFuPnt7IGRyb3Bkb3duTW9kZWwuaGludFN0cmluZ1ByZWZpeCB9fTwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgW2NsYXNzXT1cIm1vZGVsLmNzc0NsYXNzZXMuY29udHJvbFZhbHVlXCI+XG4gICAgICAgICAgICA8ZGl2ICpuZ0lmPVwiZHJvcGRvd25Nb2RlbC5zaG93SGludFN0cmluZ1wiIFtjbGFzc109XCJtb2RlbC5jc3NDbGFzc2VzLmhpbnRTdWZmaXhcIj5cbiAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT1cInZpc2liaWxpdHk6IGhpZGRlblwiPnt7IGRyb3Bkb3duTW9kZWwuaW5wdXRTdHJpbmdSZW5kZXJlZCB9fTwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8c3Bhbj57eyBkcm9wZG93bk1vZGVsLmhpbnRTdHJpbmdTdWZmaXggfX08L3NwYW4+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJkcm9wZG93bk1vZGVsLnNob3dJbnB1dEZpZWxkQ29tcG9uZW50XCI+XG4gICAgICAgICAgICAgICAgPG5nLXRlbXBsYXRlIFtjb21wb25lbnRdPVwieyBuYW1lOiBtb2RlbC5pbnB1dEZpZWxkQ29tcG9uZW50TmFtZSwgZGF0YTogeyBtb2RlbDogZHJvcGRvd25Nb2RlbC5nZXRTZWxlY3RlZEFjdGlvbigpLCBxdWVzdGlvbjogbW9kZWwgfSB9XCI+PC9uZy10ZW1wbGF0ZT5cbiAgICAgICAgICAgIDwvbmctY29udGFpbmVyPlxuICAgICAgICAgICAgPHN2LW5nLXN0cmluZyAqbmdJZj1cImRyb3Bkb3duTW9kZWwuc2hvd1NlbGVjdGVkSXRlbUxvY1RleHRcIiBbbW9kZWxdPVwibW9kZWwuc2VsZWN0ZWRJdGVtTG9jVGV4dFwiPjwvc3Ytbmctc3RyaW5nPlxuICAgICAgICAgICAgPGlucHV0ICNpbnB1dEVsZW1lbnQgdHlwZT1cInRleHRcIiBhdXRvY29tcGxldGU9XCJvZmZcIiBbKG5nTW9kZWwpXT1cImRyb3Bkb3duTW9kZWwuaW5wdXRTdHJpbmdSZW5kZXJlZFwiIFtjbGFzc109XCJtb2RlbC5jc3NDbGFzc2VzLmZpbHRlclN0cmluZ0lucHV0XCJcbiAgICAgICAgICAgIFthdHRyLnJvbGVdPVwiZHJvcGRvd25Nb2RlbC5maWx0ZXJTdHJpbmdFbmFibGVkID8gbW9kZWwuYXJpYVJvbGUgOiBudWxsXCJcbiAgICAgICAgICAgIFthdHRyLmlkXT1cIm1vZGVsLmdldElucHV0SWQoKVwiXG4gICAgICAgICAgICBbYXR0ci5pbnB1dG1vZGVdPVwiZHJvcGRvd25Nb2RlbC5pbnB1dE1vZGVcIlxuICAgICAgICAgICAgW2F0dHIudGFiaW5kZXhdPVwiZHJvcGRvd25Nb2RlbC5pbnB1dFJlYWRPbmx5ID8gbnVsbCA6IC0xXCJcbiAgICAgICAgICAgIFthdHRyLmRpc2FibGVkXT1cIm1vZGVsLmlzSW5wdXRSZWFkT25seSA/IHRydWUgOiBudWxsXCJcbiAgICAgICAgICAgIFthdHRyLmFyaWEtbGFiZWxdPVwibW9kZWwucGxhY2Vob2xkZXJcIlxuICAgICAgICAgICAgW2F0dHIuYXJpYS1jb250cm9sc109XCJkcm9wZG93bk1vZGVsLmxpc3RFbGVtZW50SWRcIlxuICAgICAgICAgICAgW2F0dHIuYXJpYS1leHBhbmRlZF09XCJtb2RlbC5hcmlhRXhwYW5kZWQgPyAndHJ1ZScgOiAnZmFsc2UnXCJcbiAgICAgICAgICAgIFthdHRyLmFyaWEtYWN0aXZlZGVzY2VuZGFudF09XCJkcm9wZG93bk1vZGVsLmFyaWFBY3RpdmVkZXNjZW5kYW50XCJcbiAgICAgICAgICAgIFthdHRyLnBsYWNlaG9sZGVyXT1cImRyb3Bkb3duTW9kZWwucGxhY2Vob2xkZXJSZW5kZXJlZFwiIFthdHRyLnJlYWRvbmx5XT1cIiFkcm9wZG93bk1vZGVsLnNlYXJjaEVuYWJsZWQgPyB0cnVlIDogbnVsbFwiIFxuICAgICAgICAgICAgKGNoYW5nZSk9XCJpbnB1dENoYW5nZSgkZXZlbnQpXCIgKGJsdXIpPVwiYmx1cigkZXZlbnQpXCIgKGZvY3VzKT1cImZvY3VzKCRldmVudClcIi8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2ICpuZ0lmPVwiKG1vZGVsLmFsbG93Q2xlYXIgJiYgbW9kZWwuY3NzQ2xhc3Nlcy5jbGVhbkJ1dHRvbkljb25JZClcIlxuICAgICAgICAgICAgW2NsYXNzXT1cIm1vZGVsLmNzc0NsYXNzZXMuY2xlYW5CdXR0b25cIiAoY2xpY2spPVwiY2xlYXIoJGV2ZW50KVwiIFt2aXNpYmxlXT1cIiFtb2RlbC5pc0VtcHR5KClcIj5cbiAgICAgICAgICAgIDwhLS0ga28gY29tcG9uZW50OiB7IG5hbWU6ICdzdi1zdmctaWNvbicsIHBhcmFtczogeyBjc3M6IG1vZGVsLmNzc0NsYXNzZXMuY2xlYW5CdXR0b25TdmcsIGljb25OYW1lOiBtb2RlbC5jc3NDbGFzc2VzLmNsZWFuQnV0dG9uSWNvbklkLCBzaXplOiAnYXV0bycgfSB9IC0tPlxuICAgICAgICAgICAgPCEtLSAva28gLS0+XG4gICAgICAgICAgICA8c3ZnIFtpY29uTmFtZV09XCJtb2RlbC5jc3NDbGFzc2VzLmNsZWFuQnV0dG9uSWNvbklkXCIgW3BhcnRDc3NdPVwibW9kZWwuY3NzQ2xhc3Nlcy5jbGVhbkJ1dHRvblN2Z1wiIFt0aXRsZV09XCJtb2RlbC5jbGVhckNhcHRpb25cIlxuICAgICAgICAgICAgICAgIFtzaXplXT1cIidhdXRvJ1wiIHN2LW5nLXN2Zy1pY29uPjwvc3ZnPlxuICAgICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgICA8c3YtbmctcG9wdXAgKm5nSWY9XCIhbW9kZWwuaXNSZWFkT25seVwiIFtwb3B1cE1vZGVsXT1cImRyb3Bkb3duTW9kZWwucG9wdXBNb2RlbFwiPjwvc3YtbmctcG9wdXA+XG4gICAgPGRpdiBkaXNhYmxlZCAqbmdJZj1cIm1vZGVsLmlzUmVhZE9ubHlcIiBbY2xhc3NdPVwibW9kZWwuZ2V0Q29udHJvbENsYXNzKClcIiBbYXR0ci5pZF09XCJtb2RlbC5pbnB1dElkXCI+XG4gICAgICAgIDxzdi1uZy1zdHJpbmcgKm5nSWY9XCJtb2RlbC5zZWxlY3RlZEl0ZW1Mb2NUZXh0XCIgW21vZGVsXT1cIm1vZGVsLnNlbGVjdGVkSXRlbUxvY1RleHRcIj48L3N2LW5nLXN0cmluZz5cbiAgICAgICAgPGRpdj57eyBtb2RlbC5yZWFkT25seVRleHQgfX08L2Rpdj5cbiAgICA8L2Rpdj5cbjwvZGl2PiJdfQ==