import { Component, Input } from "@angular/core";
import { BaseAngular } from "../../base-angular";
import { createPopupViewModel } from "survey-core";
import * as i0 from "@angular/core";
import * as i1 from "./popup.service";
export class PopupComponent extends BaseAngular {
    constructor(viewContainerRef, changeDetectorRef, popupService) {
        super(changeDetectorRef, viewContainerRef);
        this.popupService = popupService;
    }
    getModel() {
        return this.popupModel;
    }
    onModelChanged() {
        var _a;
        this.destroyModel();
        this.model = createPopupViewModel(this.popupModel, (_a = this.viewContainerRef) === null || _a === void 0 ? void 0 : _a.element.nativeElement.parentElement);
        this.model.initializePopupContainer();
        this.portalHost = this.popupService.createComponent(this.model);
    }
    ngOnInit() {
        this.onModelChanged();
    }
    destroyModel() {
        var _a, _b;
        (_a = this.portalHost) === null || _a === void 0 ? void 0 : _a.detach();
        (_b = this.model) === null || _b === void 0 ? void 0 : _b.unmountPopupContainer();
    }
    ngOnDestroy() {
        super.ngOnDestroy();
        this.destroyModel();
    }
}
PopupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: PopupComponent, deps: [{ token: i0.ViewContainerRef }, { token: i0.ChangeDetectorRef }, { token: i1.PopupService }], target: i0.ɵɵFactoryTarget.Component });
PopupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: PopupComponent, selector: "sv-ng-popup, '[sv-ng-popup]'", inputs: { popupModel: "popupModel" }, usesInheritance: true, ngImport: i0, template: "<div></div>", isInline: true });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: PopupComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "sv-ng-popup, '[sv-ng-popup]'",
                    template: "<div></div>"
                }]
        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ChangeDetectorRef }, { type: i1.PopupService }]; }, propDecorators: { popupModel: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wdXAuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvcG9wdXAvcG9wdXAuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBcUIsU0FBUyxFQUFFLEtBQUssRUFBb0IsTUFBTSxlQUFlLENBQUM7QUFDdEYsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ2pELE9BQU8sRUFBa0Msb0JBQW9CLEVBQUUsTUFBTSxhQUFhLENBQUM7OztBQVNuRixNQUFNLE9BQU8sY0FBZSxTQUFRLFdBQXVCO0lBVXpELFlBQVksZ0JBQWtDLEVBQUUsaUJBQW9DLEVBQVUsWUFBMEI7UUFDdEgsS0FBSyxDQUFDLGlCQUFpQixFQUFFLGdCQUFnQixDQUFDLENBQUM7UUFEaUQsaUJBQVksR0FBWixZQUFZLENBQWM7SUFFeEgsQ0FBQztJQU5TLFFBQVE7UUFDaEIsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO0lBQ3pCLENBQUM7SUFLa0IsY0FBYzs7UUFDL0IsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1FBQ3BCLElBQUksQ0FBQyxLQUFLLEdBQUcsb0JBQW9CLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxNQUFBLElBQUksQ0FBQyxnQkFBZ0IsMENBQUUsT0FBTyxDQUFDLGFBQWEsQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUMvRyxJQUFJLENBQUMsS0FBSyxDQUFDLHdCQUF3QixFQUFFLENBQUM7UUFDdEMsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDbEUsQ0FBQztJQUNRLFFBQVE7UUFDZixJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7SUFDeEIsQ0FBQztJQUNNLFlBQVk7O1FBQ2pCLE1BQUEsSUFBSSxDQUFDLFVBQVUsMENBQUUsTUFBTSxFQUFFLENBQUM7UUFDMUIsTUFBQSxJQUFJLENBQUMsS0FBSywwQ0FBRSxxQkFBcUIsRUFBRSxDQUFDO0lBQ3RDLENBQUM7SUFFUSxXQUFXO1FBQ2xCLEtBQUssQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUNwQixJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDdEIsQ0FBQzs7NEdBOUJVLGNBQWM7Z0dBQWQsY0FBYyxpSUFIZixhQUFhOzRGQUdaLGNBQWM7a0JBTDFCLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLDhCQUE4QjtvQkFDeEMsUUFBUSxFQUFFLGFBQWE7aUJBQ3hCO2tLQUdVLFVBQVU7c0JBQWxCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3RvclJlZiwgQ29tcG9uZW50LCBJbnB1dCwgVmlld0NvbnRhaW5lclJlZiB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBCYXNlQW5ndWxhciB9IGZyb20gXCIuLi8uLi9iYXNlLWFuZ3VsYXJcIjtcbmltcG9ydCB7IFBvcHVwQmFzZVZpZXdNb2RlbCwgUG9wdXBNb2RlbCwgY3JlYXRlUG9wdXBWaWV3TW9kZWwgfSBmcm9tIFwic3VydmV5LWNvcmVcIjtcbmltcG9ydCB7IERvbVBvcnRhbE91dGxldCB9IGZyb20gXCJAYW5ndWxhci9jZGsvcG9ydGFsXCI7XG5pbXBvcnQgeyBQb3B1cFNlcnZpY2UgfSBmcm9tIFwiLi9wb3B1cC5zZXJ2aWNlXCI7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogXCJzdi1uZy1wb3B1cCwgJ1tzdi1uZy1wb3B1cF0nXCIsXG4gIHRlbXBsYXRlOiBcIjxkaXY+PC9kaXY+XCJcbn0pXG5cbmV4cG9ydCBjbGFzcyBQb3B1cENvbXBvbmVudCBleHRlbmRzIEJhc2VBbmd1bGFyPFBvcHVwTW9kZWw+IHtcbiAgQElucHV0KCkgcG9wdXBNb2RlbCE6IFBvcHVwTW9kZWw7XG5cbiAgcHVibGljIG1vZGVsITogUG9wdXBCYXNlVmlld01vZGVsO1xuICBwcml2YXRlIHBvcnRhbEhvc3QhOiBEb21Qb3J0YWxPdXRsZXQ7XG5cbiAgcHJvdGVjdGVkIGdldE1vZGVsKCk6IFBvcHVwTW9kZWwge1xuICAgIHJldHVybiB0aGlzLnBvcHVwTW9kZWw7XG4gIH1cblxuICBjb25zdHJ1Y3Rvcih2aWV3Q29udGFpbmVyUmVmOiBWaWV3Q29udGFpbmVyUmVmLCBjaGFuZ2VEZXRlY3RvclJlZjogQ2hhbmdlRGV0ZWN0b3JSZWYsIHByaXZhdGUgcG9wdXBTZXJ2aWNlOiBQb3B1cFNlcnZpY2UpIHtcbiAgICBzdXBlcihjaGFuZ2VEZXRlY3RvclJlZiwgdmlld0NvbnRhaW5lclJlZik7XG4gIH1cbiAgcHJvdGVjdGVkIG92ZXJyaWRlIG9uTW9kZWxDaGFuZ2VkKCk6IHZvaWQge1xuICAgIHRoaXMuZGVzdHJveU1vZGVsKCk7XG4gICAgdGhpcy5tb2RlbCA9IGNyZWF0ZVBvcHVwVmlld01vZGVsKHRoaXMucG9wdXBNb2RlbCwgdGhpcy52aWV3Q29udGFpbmVyUmVmPy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQucGFyZW50RWxlbWVudCk7XG4gICAgdGhpcy5tb2RlbC5pbml0aWFsaXplUG9wdXBDb250YWluZXIoKTtcbiAgICB0aGlzLnBvcnRhbEhvc3QgPSB0aGlzLnBvcHVwU2VydmljZS5jcmVhdGVDb21wb25lbnQodGhpcy5tb2RlbCk7XG4gIH1cbiAgb3ZlcnJpZGUgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5vbk1vZGVsQ2hhbmdlZCgpO1xuICB9XG4gIHB1YmxpYyBkZXN0cm95TW9kZWwoKTogdm9pZCB7XG4gICAgdGhpcy5wb3J0YWxIb3N0Py5kZXRhY2goKTtcbiAgICB0aGlzLm1vZGVsPy51bm1vdW50UG9wdXBDb250YWluZXIoKTtcbiAgfVxuXG4gIG92ZXJyaWRlIG5nT25EZXN0cm95KCkge1xuICAgIHN1cGVyLm5nT25EZXN0cm95KCk7XG4gICAgdGhpcy5kZXN0cm95TW9kZWwoKTtcbiAgfVxufSJdfQ==