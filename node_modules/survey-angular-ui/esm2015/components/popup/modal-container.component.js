import { Component } from "@angular/core";
import { createDialogOptions, createPopupModalViewModel, settings } from "survey-core";
import * as i0 from "@angular/core";
import * as i1 from "./popup.service";
export class ModalComponent {
    constructor(popupService) {
        this.popupService = popupService;
        this.functionDefined = false;
    }
    showDialog(dialogOptions) {
        this.model = createPopupModalViewModel(dialogOptions);
        this.model.initializePopupContainer();
        this.model.model.onHide = () => {
            this.portalHost.detach();
            this.model.unmountPopupContainer();
        };
        this.portalHost = this.popupService.createComponent(this.model);
        this.model.model.isVisible = true;
        return this.model;
    }
    ngOnInit() {
        if (!!settings.showModal)
            return;
        this.functionDefined = true;
        settings.showModal = (componentName, data, onApply, onCancel, cssClass, title, displayMode = "popup") => {
            const options = createDialogOptions(componentName, data, onApply, onCancel, undefined, undefined, cssClass, title, displayMode);
            return this.showDialog(options);
        };
    }
    ngOnDestroy() {
        if (this.functionDefined) {
            settings.showModal = undefined;
        }
    }
}
ModalComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ModalComponent, deps: [{ token: i1.PopupService }], target: i0.ɵɵFactoryTarget.Component });
ModalComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: ModalComponent, selector: "sv-ng-modal-container", ngImport: i0, template: "", isInline: true, styles: [":host{display:none}\n"] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ModalComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "sv-ng-modal-container",
                    template: "",
                    styleUrls: ["../../hide-host.scss"]
                }]
        }], ctorParameters: function () { return [{ type: i1.PopupService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwtY29udGFpbmVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3BvcHVwL21vZGFsLWNvbnRhaW5lci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxQyxPQUFPLEVBQUUsbUJBQW1CLEVBQXNDLHlCQUF5QixFQUFFLFFBQVEsRUFBRSxNQUFNLGFBQWEsQ0FBQzs7O0FBUzNILE1BQU0sT0FBTyxjQUFjO0lBTXpCLFlBQW9CLFlBQTBCO1FBQTFCLGlCQUFZLEdBQVosWUFBWSxDQUFjO1FBRnRDLG9CQUFlLEdBQVksS0FBSyxDQUFDO0lBR3pDLENBQUM7SUFDRCxVQUFVLENBQUMsYUFBNkI7UUFDdEMsSUFBSSxDQUFDLEtBQUssR0FBRyx5QkFBeUIsQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUN0RCxJQUFJLENBQUMsS0FBSyxDQUFDLHdCQUF3QixFQUFFLENBQUM7UUFDdEMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLEdBQUcsRUFBRTtZQUM3QixJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRSxDQUFDO1lBQ3pCLElBQUksQ0FBQyxLQUFLLENBQUMscUJBQXFCLEVBQUUsQ0FBQztRQUNyQyxDQUFDLENBQUM7UUFDRixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNoRSxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO1FBQ2xDLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztJQUNwQixDQUFDO0lBQ0QsUUFBUTtRQUNOLElBQUcsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxTQUFTO1lBQUUsT0FBTztRQUNoQyxJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQztRQUM1QixRQUFRLENBQUMsU0FBUyxHQUFHLENBQ25CLGFBQXFCLEVBQ3JCLElBQVMsRUFDVCxPQUFzQixFQUN0QixRQUFxQixFQUNyQixRQUFpQixFQUNqQixLQUFjLEVBQ2QsY0FBbUMsT0FBTyxFQUN0QixFQUFFO1lBQ3RCLE1BQU0sT0FBTyxHQUFHLG1CQUFtQixDQUNqQyxhQUFhLEVBQ2IsSUFBSSxFQUNKLE9BQU8sRUFDUCxRQUFRLEVBQ1IsU0FBUyxFQUNULFNBQVMsRUFDVCxRQUFRLEVBQ1IsS0FBSyxFQUNMLFdBQVcsQ0FDWixDQUFDO1lBQ0YsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ2xDLENBQUMsQ0FBQztJQUNKLENBQUM7SUFDRCxXQUFXO1FBQ1QsSUFBRyxJQUFJLENBQUMsZUFBZSxFQUFFO1lBQ3ZCLFFBQVEsQ0FBQyxTQUFTLEdBQVEsU0FBUyxDQUFDO1NBQ3JDO0lBQ0gsQ0FBQzs7NEdBakRVLGNBQWM7Z0dBQWQsY0FBYyw2REFKZixFQUFFOzRGQUlELGNBQWM7a0JBTjFCLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLHVCQUF1QjtvQkFDakMsUUFBUSxFQUFFLEVBQUU7b0JBQ1osU0FBUyxFQUFFLENBQUMsc0JBQXNCLENBQUM7aUJBQ3BDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRG9tUG9ydGFsT3V0bGV0IH0gZnJvbSBcIkBhbmd1bGFyL2Nkay9wb3J0YWxcIjtcbmltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBjcmVhdGVEaWFsb2dPcHRpb25zLCBJRGlhbG9nT3B0aW9ucywgUG9wdXBCYXNlVmlld01vZGVsLCBjcmVhdGVQb3B1cE1vZGFsVmlld01vZGVsLCBzZXR0aW5ncyB9IGZyb20gXCJzdXJ2ZXktY29yZVwiO1xuaW1wb3J0IHsgUG9wdXBTZXJ2aWNlIH0gZnJvbSBcIi4vcG9wdXAuc2VydmljZVwiO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6IFwic3YtbmctbW9kYWwtY29udGFpbmVyXCIsXG4gIHRlbXBsYXRlOiBcIlwiLFxuICBzdHlsZVVybHM6IFtcIi4uLy4uL2hpZGUtaG9zdC5zY3NzXCJdXG59KVxuXG5leHBvcnQgY2xhc3MgTW9kYWxDb21wb25lbnQge1xuXG4gIHB1YmxpYyBtb2RlbCE6IFBvcHVwQmFzZVZpZXdNb2RlbDtcbiAgcHJpdmF0ZSBwb3J0YWxIb3N0ITogRG9tUG9ydGFsT3V0bGV0O1xuICBwcml2YXRlIGZ1bmN0aW9uRGVmaW5lZDogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcG9wdXBTZXJ2aWNlOiBQb3B1cFNlcnZpY2UpIHtcbiAgfVxuICBzaG93RGlhbG9nKGRpYWxvZ09wdGlvbnM6IElEaWFsb2dPcHRpb25zKTogUG9wdXBCYXNlVmlld01vZGVsIHtcbiAgICB0aGlzLm1vZGVsID0gY3JlYXRlUG9wdXBNb2RhbFZpZXdNb2RlbChkaWFsb2dPcHRpb25zKTtcbiAgICB0aGlzLm1vZGVsLmluaXRpYWxpemVQb3B1cENvbnRhaW5lcigpO1xuICAgIHRoaXMubW9kZWwubW9kZWwub25IaWRlID0gKCkgPT4ge1xuICAgICAgdGhpcy5wb3J0YWxIb3N0LmRldGFjaCgpO1xuICAgICAgdGhpcy5tb2RlbC51bm1vdW50UG9wdXBDb250YWluZXIoKTtcbiAgICB9O1xuICAgIHRoaXMucG9ydGFsSG9zdCA9IHRoaXMucG9wdXBTZXJ2aWNlLmNyZWF0ZUNvbXBvbmVudCh0aGlzLm1vZGVsKTtcbiAgICB0aGlzLm1vZGVsLm1vZGVsLmlzVmlzaWJsZSA9IHRydWU7XG4gICAgcmV0dXJuIHRoaXMubW9kZWw7XG4gIH1cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgaWYoISFzZXR0aW5ncy5zaG93TW9kYWwpIHJldHVybjtcbiAgICB0aGlzLmZ1bmN0aW9uRGVmaW5lZCA9IHRydWU7XG4gICAgc2V0dGluZ3Muc2hvd01vZGFsID0gKFxuICAgICAgY29tcG9uZW50TmFtZTogc3RyaW5nLFxuICAgICAgZGF0YTogYW55LFxuICAgICAgb25BcHBseTogKCkgPT4gYm9vbGVhbixcbiAgICAgIG9uQ2FuY2VsPzogKCkgPT4gdm9pZCxcbiAgICAgIGNzc0NsYXNzPzogc3RyaW5nLFxuICAgICAgdGl0bGU/OiBzdHJpbmcsXG4gICAgICBkaXNwbGF5TW9kZTogXCJwb3B1cFwiIHwgXCJvdmVybGF5XCIgPSBcInBvcHVwXCJcbiAgICApOiBQb3B1cEJhc2VWaWV3TW9kZWwgPT4ge1xuICAgICAgY29uc3Qgb3B0aW9ucyA9IGNyZWF0ZURpYWxvZ09wdGlvbnMoXG4gICAgICAgIGNvbXBvbmVudE5hbWUsXG4gICAgICAgIGRhdGEsXG4gICAgICAgIG9uQXBwbHksXG4gICAgICAgIG9uQ2FuY2VsLFxuICAgICAgICB1bmRlZmluZWQsXG4gICAgICAgIHVuZGVmaW5lZCxcbiAgICAgICAgY3NzQ2xhc3MsXG4gICAgICAgIHRpdGxlLFxuICAgICAgICBkaXNwbGF5TW9kZVxuICAgICAgKTtcbiAgICAgIHJldHVybiB0aGlzLnNob3dEaWFsb2cob3B0aW9ucyk7XG4gICAgfTtcbiAgfVxuICBuZ09uRGVzdHJveSgpIHtcbiAgICBpZih0aGlzLmZ1bmN0aW9uRGVmaW5lZCkge1xuICAgICAgc2V0dGluZ3Muc2hvd01vZGFsID0gPGFueT51bmRlZmluZWQ7XG4gICAgfVxuICB9XG59XG5cbiJdfQ==