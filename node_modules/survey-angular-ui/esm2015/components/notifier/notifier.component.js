import { Component, Input } from "@angular/core";
import { BaseAngular } from "../../base-angular";
import * as i0 from "@angular/core";
import * as i1 from "../action-bar/action-bar.component";
import * as i2 from "@angular/common";
export class NotifierComponent extends BaseAngular {
    getStateElement() {
        return this.notifier;
    }
    getModel() {
        return this.notifier;
    }
}
NotifierComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: NotifierComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
NotifierComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: NotifierComponent, selector: "sv-notifier", inputs: { notifier: "notifier" }, usesInheritance: true, ngImport: i0, template: "<ng-template #template>\n  <ng-container *ngIf=\"notifier.isDisplayed\">\n    <div [class]=\"notifier.css\" [style]=\"{ visibility: notifier.active ? 'visible' : 'hidden' }\">\n      <span>{{notifier.message}}</span>\n      <sv-action-bar [model]=\"notifier.actionBar\"></sv-action-bar> \n    </div>\n  </ng-container>\n</ng-template>", styles: [":host { display: none; }"], components: [{ type: i1.ActionBarComponent, selector: "sv-action-bar, sv-ng-action-bar", inputs: ["model", "handleClick"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: NotifierComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "sv-notifier",
                    templateUrl: "./notifier.component.html",
                    styles: [":host { display: none; }"]
                }]
        }], propDecorators: { notifier: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZpZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvbm90aWZpZXIvbm90aWZpZXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvbm90aWZpZXIvbm90aWZpZXIuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLG9CQUFvQixDQUFDOzs7O0FBUWpELE1BQU0sT0FBTyxpQkFBa0IsU0FBUSxXQUFxQjtJQUVoRCxlQUFlO1FBQ3ZCLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN2QixDQUFDO0lBQ1MsUUFBUTtRQUNoQixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDdkIsQ0FBQzs7K0dBUFUsaUJBQWlCO21HQUFqQixpQkFBaUIsNEdDVDlCLGdWQU9jOzRGREVELGlCQUFpQjtrQkFMN0IsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsYUFBYTtvQkFDdkIsV0FBVyxFQUFFLDJCQUEyQjtvQkFDeEMsTUFBTSxFQUFFLENBQUMsMEJBQTBCLENBQUM7aUJBQ25DOzhCQUVRLFFBQVE7c0JBQWhCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IEJhc2VBbmd1bGFyIH0gZnJvbSBcIi4uLy4uL2Jhc2UtYW5ndWxhclwiO1xuaW1wb3J0IHsgQmFzZSwgTm90aWZpZXIgfSBmcm9tIFwic3VydmV5LWNvcmVcIjtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiBcInN2LW5vdGlmaWVyXCIsXG4gIHRlbXBsYXRlVXJsOiBcIi4vbm90aWZpZXIuY29tcG9uZW50Lmh0bWxcIixcbiAgc3R5bGVzOiBbXCI6aG9zdCB7IGRpc3BsYXk6IG5vbmU7IH1cIl1cbiAgfSlcbmV4cG9ydCBjbGFzcyBOb3RpZmllckNvbXBvbmVudCBleHRlbmRzIEJhc2VBbmd1bGFyPE5vdGlmaWVyPiB7XG4gIEBJbnB1dCgpIG5vdGlmaWVyITogTm90aWZpZXI7XG4gIHByb3RlY3RlZCBnZXRTdGF0ZUVsZW1lbnQoKTogQmFzZSB7XG4gICAgcmV0dXJuIHRoaXMubm90aWZpZXI7XG4gIH1cbiAgcHJvdGVjdGVkIGdldE1vZGVsKCk6IE5vdGlmaWVyIHtcbiAgICByZXR1cm4gdGhpcy5ub3RpZmllcjtcbiAgfVxufSIsIjxuZy10ZW1wbGF0ZSAjdGVtcGxhdGU+XG4gIDxuZy1jb250YWluZXIgKm5nSWY9XCJub3RpZmllci5pc0Rpc3BsYXllZFwiPlxuICAgIDxkaXYgW2NsYXNzXT1cIm5vdGlmaWVyLmNzc1wiIFtzdHlsZV09XCJ7IHZpc2liaWxpdHk6IG5vdGlmaWVyLmFjdGl2ZSA/ICd2aXNpYmxlJyA6ICdoaWRkZW4nIH1cIj5cbiAgICAgIDxzcGFuPnt7bm90aWZpZXIubWVzc2FnZX19PC9zcGFuPlxuICAgICAgPHN2LWFjdGlvbi1iYXIgW21vZGVsXT1cIm5vdGlmaWVyLmFjdGlvbkJhclwiPjwvc3YtYWN0aW9uLWJhcj4gXG4gICAgPC9kaXY+XG4gIDwvbmctY29udGFpbmVyPlxuPC9uZy10ZW1wbGF0ZT4iXX0=