import { Component, Input } from "@angular/core";
import { AngularComponentFactory } from "../../../component-factory";
import * as i0 from "@angular/core";
import * as i1 from "../../../survey-string.component";
export class MatrixDynamicRemoveButtonComponent {
    get question() {
        return this.model.data.question;
    }
    get row() {
        return this.model.data.row;
    }
    getModel() {
        return this.model;
    }
}
MatrixDynamicRemoveButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: MatrixDynamicRemoveButtonComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
MatrixDynamicRemoveButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: MatrixDynamicRemoveButtonComponent, selector: "sv-ng-matrix-remove-btn", inputs: { model: "model" }, ngImport: i0, template: "<button type=\"button\" [class]=\"question.getRemoveRowButtonCss()\" [disabled]=\"question.isInputReadOnly\" (click)=\"question.removeRowUI(row)\">\n  <sv-ng-string [model]=\"question.locRemoveRowText\" ></sv-ng-string>\n  <span [class]=\"question.cssClasses.iconRemove\"></span>\n</button>", components: [{ type: i1.SurveyStringComponent, selector: "sv-ng-string, '[sv-ng-string]'", inputs: ["model"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: MatrixDynamicRemoveButtonComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "sv-ng-matrix-remove-btn",
                    templateUrl: "./remove-button.component.html"
                }]
        }], propDecorators: { model: [{
                type: Input
            }] } });
AngularComponentFactory.Instance.registerComponent("sv-matrix-remove-button", MatrixDynamicRemoveButtonComponent);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVtb3ZlLWJ1dHRvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9tYXRyaXgtYWN0aW9ucy9yZW1vdmUtYnV0dG9uL3JlbW92ZS1idXR0b24uY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvbWF0cml4LWFjdGlvbnMvcmVtb3ZlLWJ1dHRvbi9yZW1vdmUtYnV0dG9uLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDOzs7QUFPckUsTUFBTSxPQUFPLGtDQUFrQztJQUc3QyxJQUFJLFFBQVE7UUFDVixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUNsQyxDQUFDO0lBRUQsSUFBSSxHQUFHO1FBQ0wsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUM7SUFDN0IsQ0FBQztJQUVELFFBQVE7UUFDTixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDcEIsQ0FBQzs7Z0lBYlUsa0NBQWtDO29IQUFsQyxrQ0FBa0MsMkZDUi9DLG9TQUdTOzRGREtJLGtDQUFrQztrQkFKOUMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUseUJBQXlCO29CQUNuQyxXQUFXLEVBQUUsZ0NBQWdDO2lCQUM5Qzs4QkFFVSxLQUFLO3NCQUFiLEtBQUs7O0FBZVIsdUJBQXVCLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUNoRCx5QkFBeUIsRUFDekIsa0NBQWtDLENBQ25DLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IEFuZ3VsYXJDb21wb25lbnRGYWN0b3J5IH0gZnJvbSBcIi4uLy4uLy4uL2NvbXBvbmVudC1mYWN0b3J5XCI7XG5pbXBvcnQgeyBBY3Rpb24sIEJhc2UgfSBmcm9tIFwic3VydmV5LWNvcmVcIjtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiBcInN2LW5nLW1hdHJpeC1yZW1vdmUtYnRuXCIsXG4gIHRlbXBsYXRlVXJsOiBcIi4vcmVtb3ZlLWJ1dHRvbi5jb21wb25lbnQuaHRtbFwiXG59KVxuZXhwb3J0IGNsYXNzIE1hdHJpeER5bmFtaWNSZW1vdmVCdXR0b25Db21wb25lbnQge1xuICBASW5wdXQoKSBtb2RlbCE6IEFjdGlvbjtcblxuICBnZXQgcXVlc3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMubW9kZWwuZGF0YS5xdWVzdGlvbjtcbiAgfVxuXG4gIGdldCByb3coKSB7XG4gICAgcmV0dXJuIHRoaXMubW9kZWwuZGF0YS5yb3c7XG4gIH1cblxuICBnZXRNb2RlbCgpOiBCYXNlIHtcbiAgICByZXR1cm4gdGhpcy5tb2RlbDtcbiAgfVxufVxuXG5Bbmd1bGFyQ29tcG9uZW50RmFjdG9yeS5JbnN0YW5jZS5yZWdpc3RlckNvbXBvbmVudChcbiAgXCJzdi1tYXRyaXgtcmVtb3ZlLWJ1dHRvblwiLFxuICBNYXRyaXhEeW5hbWljUmVtb3ZlQnV0dG9uQ29tcG9uZW50XG4pO1xuIiwiPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgW2NsYXNzXT1cInF1ZXN0aW9uLmdldFJlbW92ZVJvd0J1dHRvbkNzcygpXCIgW2Rpc2FibGVkXT1cInF1ZXN0aW9uLmlzSW5wdXRSZWFkT25seVwiIChjbGljayk9XCJxdWVzdGlvbi5yZW1vdmVSb3dVSShyb3cpXCI+XG4gIDxzdi1uZy1zdHJpbmcgW21vZGVsXT1cInF1ZXN0aW9uLmxvY1JlbW92ZVJvd1RleHRcIiA+PC9zdi1uZy1zdHJpbmc+XG4gIDxzcGFuIFtjbGFzc109XCJxdWVzdGlvbi5jc3NDbGFzc2VzLmljb25SZW1vdmVcIj48L3NwYW4+XG48L2J1dHRvbj4iXX0=