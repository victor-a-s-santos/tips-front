import { Component, Input } from "@angular/core";
import { AngularComponentFactory } from "../../../component-factory";
import * as i0 from "@angular/core";
import * as i1 from "../../svg-icon/svg-icon.component";
export class MatrixDetailButtonComponent {
    get question() {
        return this.model.data.question;
    }
    get row() {
        return this.model.data.row;
    }
    getModel() {
        return this.model;
    }
}
MatrixDetailButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: MatrixDetailButtonComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
MatrixDetailButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: MatrixDetailButtonComponent, selector: "sv-ng-matrix-detail-btn", inputs: { model: "model" }, ngImport: i0, template: "<button type=\"button\" [class]=\"question.getDetailPanelButtonCss(row)\" (click)=\"row.showHideDetailPanelClick()\"\n  [attr.aria-expanded]=\"question.getIsDetailPanelShowing(row) ? 'true' : 'false'\"\n  [attr.aria-controls]=\"question.getIsDetailPanelShowing(row) ? row.detailPanelId : null\">\n  <svg [class]=\"this.question.getDetailPanelIconCss(this.row)\" \n    [iconName]=\"this.question.getDetailPanelIconId(this.row)\" [size]=\"'auto'\" sv-ng-svg-icon>\n  </svg>\n</button>", components: [{ type: i1.SvgIconComponent, selector: "'[sv-ng-svg-icon]'", inputs: ["size", "width", "height", "iconName", "partCss", "css", "title"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: MatrixDetailButtonComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "sv-ng-matrix-detail-btn",
                    templateUrl: "./detail-button.component.html"
                }]
        }], propDecorators: { model: [{
                type: Input
            }] } });
AngularComponentFactory.Instance.registerComponent("sv-matrix-detail-button", MatrixDetailButtonComponent);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV0YWlsLWJ1dHRvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9tYXRyaXgtYWN0aW9ucy9kZXRhaWwtYnV0dG9uL2RldGFpbC1idXR0b24uY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvbWF0cml4LWFjdGlvbnMvZGV0YWlsLWJ1dHRvbi9kZXRhaWwtYnV0dG9uLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDOzs7QUFRckUsTUFBTSxPQUFPLDJCQUEyQjtJQUd0QyxJQUFJLFFBQVE7UUFDVixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUNsQyxDQUFDO0lBRUQsSUFBSSxHQUFHO1FBQ0wsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUM7SUFDN0IsQ0FBQztJQUVELFFBQVE7UUFDTixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDcEIsQ0FBQzs7eUhBYlUsMkJBQTJCOzZHQUEzQiwyQkFBMkIsMkZDVHhDLG9lQU1TOzRGREdJLDJCQUEyQjtrQkFKdkMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUseUJBQXlCO29CQUNuQyxXQUFXLEVBQUUsZ0NBQWdDO2lCQUM5Qzs4QkFFaUIsS0FBSztzQkFBcEIsS0FBSzs7QUFlUix1QkFBdUIsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMseUJBQXlCLEVBQUUsMkJBQTJCLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgQW5ndWxhckNvbXBvbmVudEZhY3RvcnkgfSBmcm9tIFwiLi4vLi4vLi4vY29tcG9uZW50LWZhY3RvcnlcIjtcbmltcG9ydCB7IEFjdGlvbiB9IGZyb20gXCJzdXJ2ZXktY29yZVwiO1xuaW1wb3J0IHsgQmFzZSB9IGZyb20gXCJzdXJ2ZXktY29yZVwiO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6IFwic3YtbmctbWF0cml4LWRldGFpbC1idG5cIixcbiAgdGVtcGxhdGVVcmw6IFwiLi9kZXRhaWwtYnV0dG9uLmNvbXBvbmVudC5odG1sXCJcbn0pXG5leHBvcnQgY2xhc3MgTWF0cml4RGV0YWlsQnV0dG9uQ29tcG9uZW50IHtcbiAgQElucHV0KCkgcHVibGljIG1vZGVsITogQWN0aW9uO1xuXG4gIGdldCBxdWVzdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5tb2RlbC5kYXRhLnF1ZXN0aW9uO1xuICB9XG5cbiAgZ2V0IHJvdygpIHtcbiAgICByZXR1cm4gdGhpcy5tb2RlbC5kYXRhLnJvdztcbiAgfVxuXG4gIGdldE1vZGVsKCk6IEJhc2Uge1xuICAgIHJldHVybiB0aGlzLm1vZGVsO1xuICB9XG59XG5cbkFuZ3VsYXJDb21wb25lbnRGYWN0b3J5Lkluc3RhbmNlLnJlZ2lzdGVyQ29tcG9uZW50KFwic3YtbWF0cml4LWRldGFpbC1idXR0b25cIiwgTWF0cml4RGV0YWlsQnV0dG9uQ29tcG9uZW50KTtcbiIsIjxidXR0b24gdHlwZT1cImJ1dHRvblwiIFtjbGFzc109XCJxdWVzdGlvbi5nZXREZXRhaWxQYW5lbEJ1dHRvbkNzcyhyb3cpXCIgKGNsaWNrKT1cInJvdy5zaG93SGlkZURldGFpbFBhbmVsQ2xpY2soKVwiXG4gIFthdHRyLmFyaWEtZXhwYW5kZWRdPVwicXVlc3Rpb24uZ2V0SXNEZXRhaWxQYW5lbFNob3dpbmcocm93KSA/ICd0cnVlJyA6ICdmYWxzZSdcIlxuICBbYXR0ci5hcmlhLWNvbnRyb2xzXT1cInF1ZXN0aW9uLmdldElzRGV0YWlsUGFuZWxTaG93aW5nKHJvdykgPyByb3cuZGV0YWlsUGFuZWxJZCA6IG51bGxcIj5cbiAgPHN2ZyBbY2xhc3NdPVwidGhpcy5xdWVzdGlvbi5nZXREZXRhaWxQYW5lbEljb25Dc3ModGhpcy5yb3cpXCIgXG4gICAgW2ljb25OYW1lXT1cInRoaXMucXVlc3Rpb24uZ2V0RGV0YWlsUGFuZWxJY29uSWQodGhpcy5yb3cpXCIgW3NpemVdPVwiJ2F1dG8nXCIgc3Ytbmctc3ZnLWljb24+XG4gIDwvc3ZnPlxuPC9idXR0b24+Il19