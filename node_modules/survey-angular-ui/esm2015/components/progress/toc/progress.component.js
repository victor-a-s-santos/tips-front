import { Component, Input } from "@angular/core";
import { EmbeddedViewContentComponent } from "../../../embedded-view-content.component";
import { createTOCListModel, getTocRootCss } from "survey-core";
import { AngularComponentFactory } from "../../../component-factory";
import * as i0 from "@angular/core";
import * as i1 from "../../list/list.component";
export class ProgressTocComponent extends EmbeddedViewContentComponent {
    constructor() {
        super(...arguments);
        this.containerCss = "sv_progress-toc";
    }
    createProgressTOCModel() {
        this.containerCss = getTocRootCss(this.model);
        this.listModel = createTOCListModel(this.model);
    }
    ngOnInit() {
        super.ngOnInit();
        this.createProgressTOCModel();
    }
    ngOnChanges(changes) {
        this.createProgressTOCModel();
    }
}
ProgressTocComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ProgressTocComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
ProgressTocComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: ProgressTocComponent, selector: "sv-progress-toc, sv-ng-progress-toc", inputs: { model: "model" }, usesInheritance: true, usesOnChanges: true, ngImport: i0, template: "<ng-template #template>\n  <div [class]=\"containerCss\">\n    <sv-ng-list [model]=\"listModel\"></sv-ng-list>\n  </div>\n</ng-template>", styles: [":host { display: none; }"], components: [{ type: i1.ListComponent, selector: "sv-ng-list, '[sv-ng-list]'", inputs: ["model"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ProgressTocComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "sv-progress-toc, sv-ng-progress-toc",
                    templateUrl: "./progress.component.html",
                    styles: [":host { display: none; }"]
                }]
        }], propDecorators: { model: [{
                type: Input
            }] } });
AngularComponentFactory.Instance.registerComponent("sv-progress-toc", ProgressTocComponent);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZ3Jlc3MuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvcHJvZ3Jlc3MvdG9jL3Byb2dyZXNzLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3Byb2dyZXNzL3RvYy9wcm9ncmVzcy5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBdUQsTUFBTSxlQUFlLENBQUM7QUFDdEcsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sMENBQTBDLENBQUM7QUFDeEYsT0FBTyxFQUFFLGtCQUFrQixFQUFFLGFBQWEsRUFBMEIsTUFBTSxhQUFhLENBQUM7QUFDeEYsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sNEJBQTRCLENBQUM7OztBQU9yRSxNQUFNLE9BQU8sb0JBQXFCLFNBQVEsNEJBQTRCO0lBTHRFOztRQU9TLGlCQUFZLEdBQUcsaUJBQWlCLENBQUM7S0FhekM7SUFYUyxzQkFBc0I7UUFDNUIsSUFBSSxDQUFDLFlBQVksR0FBRyxhQUFhLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzlDLElBQUksQ0FBQyxTQUFTLEdBQUcsa0JBQWtCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2xELENBQUM7SUFDUSxRQUFRO1FBQ2YsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxzQkFBc0IsRUFBRSxDQUFDO0lBQ2hDLENBQUM7SUFDRCxXQUFXLENBQUMsT0FBc0I7UUFDaEMsSUFBSSxDQUFDLHNCQUFzQixFQUFFLENBQUM7SUFDaEMsQ0FBQzs7a0hBZFUsb0JBQW9CO3NHQUFwQixvQkFBb0IsbUpDVmpDLDBJQUljOzRGRE1ELG9CQUFvQjtrQkFMaEMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUscUNBQXFDO29CQUMvQyxXQUFXLEVBQUUsMkJBQTJCO29CQUN4QyxNQUFNLEVBQUUsQ0FBQywwQkFBMEIsQ0FBQztpQkFDckM7OEJBSVUsS0FBSztzQkFBYixLQUFLOztBQWFSLHVCQUF1QixDQUFDLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQyxpQkFBaUIsRUFBRSxvQkFBb0IsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25DaGFuZ2VzLCBPbkluaXQsIFNpbXBsZUNoYW5nZXMsIENoYW5nZURldGVjdG9yUmVmIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IEVtYmVkZGVkVmlld0NvbnRlbnRDb21wb25lbnQgfSBmcm9tIFwiLi4vLi4vLi4vZW1iZWRkZWQtdmlldy1jb250ZW50LmNvbXBvbmVudFwiO1xuaW1wb3J0IHsgY3JlYXRlVE9DTGlzdE1vZGVsLCBnZXRUb2NSb290Q3NzLCBMaXN0TW9kZWwsIFN1cnZleU1vZGVsIH0gZnJvbSBcInN1cnZleS1jb3JlXCI7XG5pbXBvcnQgeyBBbmd1bGFyQ29tcG9uZW50RmFjdG9yeSB9IGZyb20gXCIuLi8uLi8uLi9jb21wb25lbnQtZmFjdG9yeVwiO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6IFwic3YtcHJvZ3Jlc3MtdG9jLCBzdi1uZy1wcm9ncmVzcy10b2NcIixcbiAgdGVtcGxhdGVVcmw6IFwiLi9wcm9ncmVzcy5jb21wb25lbnQuaHRtbFwiLFxuICBzdHlsZXM6IFtcIjpob3N0IHsgZGlzcGxheTogbm9uZTsgfVwiXVxufSlcbmV4cG9ydCBjbGFzcyBQcm9ncmVzc1RvY0NvbXBvbmVudCBleHRlbmRzIEVtYmVkZGVkVmlld0NvbnRlbnRDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMsIE9uSW5pdCB7XG4gIHB1YmxpYyBsaXN0TW9kZWwhOiBMaXN0TW9kZWw7XG4gIHB1YmxpYyBjb250YWluZXJDc3MgPSBcInN2X3Byb2dyZXNzLXRvY1wiO1xuICBASW5wdXQoKSBtb2RlbCE6IFN1cnZleU1vZGVsO1xuICBwcml2YXRlIGNyZWF0ZVByb2dyZXNzVE9DTW9kZWwoKSB7XG4gICAgdGhpcy5jb250YWluZXJDc3MgPSBnZXRUb2NSb290Q3NzKHRoaXMubW9kZWwpO1xuICAgIHRoaXMubGlzdE1vZGVsID0gY3JlYXRlVE9DTGlzdE1vZGVsKHRoaXMubW9kZWwpO1xuICB9XG4gIG92ZXJyaWRlIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIHN1cGVyLm5nT25Jbml0KCk7XG4gICAgdGhpcy5jcmVhdGVQcm9ncmVzc1RPQ01vZGVsKCk7XG4gIH1cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQge1xuICAgIHRoaXMuY3JlYXRlUHJvZ3Jlc3NUT0NNb2RlbCgpO1xuICB9XG59XG5Bbmd1bGFyQ29tcG9uZW50RmFjdG9yeS5JbnN0YW5jZS5yZWdpc3RlckNvbXBvbmVudChcInN2LXByb2dyZXNzLXRvY1wiLCBQcm9ncmVzc1RvY0NvbXBvbmVudCk7XG4iLCI8bmctdGVtcGxhdGUgI3RlbXBsYXRlPlxuICA8ZGl2IFtjbGFzc109XCJjb250YWluZXJDc3NcIj5cbiAgICA8c3YtbmctbGlzdCBbbW9kZWxdPVwibGlzdE1vZGVsXCI+PC9zdi1uZy1saXN0PlxuICA8L2Rpdj5cbjwvbmctdGVtcGxhdGU+Il19