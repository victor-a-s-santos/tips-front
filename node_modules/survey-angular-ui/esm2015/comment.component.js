import { Component, Input } from "@angular/core";
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class SurveyCommentComponent {
    constructor() {
    }
    get comment() {
        if (!this.question.comment)
            return "";
        return this.question.comment;
    }
}
SurveyCommentComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: SurveyCommentComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
SurveyCommentComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: SurveyCommentComponent, selector: "sv-ng-comment, '[sv-ng-comment]'", inputs: { question: "question" }, ngImport: i0, template: "<textarea *ngIf=\"!question.isReadOnlyRenderDiv()\" [id]=\"question.commentId\" [attr.max-length]=\"question.getOthersMaxLength()\"  [attr.aria-required]=\"question.ariaRequired\" [attr.aria-label]=\"question.ariaLabel\" [attr.placeholder]=\"question.commentPlaceholder\" \n  [value]=\"comment\"\n  [style.resize]=\"question.resizeStyle\"\n  [disabled]=\"question.isInputReadOnly\"\n  (change)=\"question.onCommentChange($event)\"\n  (input)=\"question.onCommentInput($event)\"\n  [class]=\"question.cssClasses.other\">\n</textarea>\n<div *ngIf=\"question.isReadOnlyRenderDiv()\">{{ question.comment }}</div>\n", directives: [{ type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: SurveyCommentComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "sv-ng-comment, '[sv-ng-comment]'",
                    templateUrl: "./comment.component.html",
                }]
        }], ctorParameters: function () { return []; }, propDecorators: { question: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbWVudC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY29tbWVudC5jb21wb25lbnQudHMiLCIuLi8uLi9zcmMvY29tbWVudC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7O0FBT2pELE1BQU0sT0FBTyxzQkFBc0I7SUFFakM7SUFDQSxDQUFDO0lBQ0QsSUFBVyxPQUFPO1FBQ2hCLElBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU87WUFBRSxPQUFPLEVBQUUsQ0FBQztRQUNyQyxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDO0lBQy9CLENBQUM7O29IQVBVLHNCQUFzQjt3R0FBdEIsc0JBQXNCLDBHQ1BuQyxvbUJBU0E7NEZERmEsc0JBQXNCO2tCQUpsQyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxrQ0FBa0M7b0JBQzVDLFdBQVcsRUFBRSwwQkFBMEI7aUJBQ3hDOzBFQUVVLFFBQVE7c0JBQWhCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IFF1ZXN0aW9uIH0gZnJvbSBcInN1cnZleS1jb3JlXCI7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogXCJzdi1uZy1jb21tZW50LCAnW3N2LW5nLWNvbW1lbnRdJ1wiLFxuICB0ZW1wbGF0ZVVybDogXCIuL2NvbW1lbnQuY29tcG9uZW50Lmh0bWxcIixcbn0pXG5leHBvcnQgY2xhc3MgU3VydmV5Q29tbWVudENvbXBvbmVudCB7XG4gIEBJbnB1dCgpIHF1ZXN0aW9uITogUXVlc3Rpb247XG4gIGNvbnN0cnVjdG9yKCkge1xuICB9XG4gIHB1YmxpYyBnZXQgY29tbWVudCgpOiBzdHJpbmcge1xuICAgIGlmKCF0aGlzLnF1ZXN0aW9uLmNvbW1lbnQpIHJldHVybiBcIlwiO1xuICAgIHJldHVybiB0aGlzLnF1ZXN0aW9uLmNvbW1lbnQ7XG4gIH1cbn0iLCI8dGV4dGFyZWEgKm5nSWY9XCIhcXVlc3Rpb24uaXNSZWFkT25seVJlbmRlckRpdigpXCIgW2lkXT1cInF1ZXN0aW9uLmNvbW1lbnRJZFwiIFthdHRyLm1heC1sZW5ndGhdPVwicXVlc3Rpb24uZ2V0T3RoZXJzTWF4TGVuZ3RoKClcIiAgW2F0dHIuYXJpYS1yZXF1aXJlZF09XCJxdWVzdGlvbi5hcmlhUmVxdWlyZWRcIiBbYXR0ci5hcmlhLWxhYmVsXT1cInF1ZXN0aW9uLmFyaWFMYWJlbFwiIFthdHRyLnBsYWNlaG9sZGVyXT1cInF1ZXN0aW9uLmNvbW1lbnRQbGFjZWhvbGRlclwiIFxuICBbdmFsdWVdPVwiY29tbWVudFwiXG4gIFtzdHlsZS5yZXNpemVdPVwicXVlc3Rpb24ucmVzaXplU3R5bGVcIlxuICBbZGlzYWJsZWRdPVwicXVlc3Rpb24uaXNJbnB1dFJlYWRPbmx5XCJcbiAgKGNoYW5nZSk9XCJxdWVzdGlvbi5vbkNvbW1lbnRDaGFuZ2UoJGV2ZW50KVwiXG4gIChpbnB1dCk9XCJxdWVzdGlvbi5vbkNvbW1lbnRJbnB1dCgkZXZlbnQpXCJcbiAgW2NsYXNzXT1cInF1ZXN0aW9uLmNzc0NsYXNzZXMub3RoZXJcIj5cbjwvdGV4dGFyZWE+XG48ZGl2ICpuZ0lmPVwicXVlc3Rpb24uaXNSZWFkT25seVJlbmRlckRpdigpXCI+e3sgcXVlc3Rpb24uY29tbWVudCB9fTwvZGl2PlxuIl19