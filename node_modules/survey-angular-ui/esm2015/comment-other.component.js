import { Component, Input } from "@angular/core";
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class SurveyCommentOtherComponent {
    constructor() {
    }
    get otherValue() {
        const val = this.question.otherValue;
        return !!val ? val : "";
    }
    onOtherValueChange(event) {
        this.question.onOtherValueChange(event);
    }
    onOtherValueInput(event) {
        this.question.onOtherValueInput(event);
    }
    get otherId() {
        return this.question.otherId;
    }
    get otherPlaceholder() {
        return this.question.otherPlaceholder;
    }
}
SurveyCommentOtherComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: SurveyCommentOtherComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
SurveyCommentOtherComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: SurveyCommentOtherComponent, selector: "sv-ng-comment-other, '[sv-ng-comment-other]'", inputs: { question: "question" }, ngImport: i0, template: "<textarea *ngIf=\"!question.isReadOnlyRenderDiv()\" [id]=\"otherId\" [attr.max-length]=\"question.getOthersMaxLength()\"  [attr.aria-required]=\"question.ariaRequired\" [attr.aria-label]=\"question.ariaLabel\" [attr.placeholder]=\"otherPlaceholder\" \n  [value]=\"otherValue\"\n  [style.resize]=\"question.resizeStyle\"\n  [disabled]=\"question.isInputReadOnly\"\n  (change)=\"onOtherValueChange($event)\"\n  (input)=\"onOtherValueInput($event)\"\n  [class]=\"question.cssClasses.other\">\n</textarea>\n<div *ngIf=\"question.isReadOnlyRenderDiv()\">{{ otherValue }}</div>\n", directives: [{ type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: SurveyCommentOtherComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "sv-ng-comment-other, '[sv-ng-comment-other]'",
                    templateUrl: "./comment-other.component.html",
                }]
        }], ctorParameters: function () { return []; }, propDecorators: { question: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbWVudC1vdGhlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY29tbWVudC1vdGhlci5jb21wb25lbnQudHMiLCIuLi8uLi9zcmMvY29tbWVudC1vdGhlci5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7O0FBT2pELE1BQU0sT0FBTywyQkFBMkI7SUFFdEM7SUFDQSxDQUFDO0lBQ0QsSUFBVyxVQUFVO1FBQ25CLE1BQU0sR0FBRyxHQUF3QixJQUFJLENBQUMsUUFBUyxDQUFDLFVBQVUsQ0FBQztRQUMzRCxPQUFPLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0lBQzFCLENBQUM7SUFDTSxrQkFBa0IsQ0FBQyxLQUFVO1FBQ2IsSUFBSSxDQUFDLFFBQVMsQ0FBQyxrQkFBa0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNoRSxDQUFDO0lBQ00saUJBQWlCLENBQUMsS0FBVTtRQUNaLElBQUksQ0FBQyxRQUFTLENBQUMsaUJBQWlCLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDL0QsQ0FBQztJQUNELElBQVcsT0FBTztRQUNoQixPQUE0QixJQUFJLENBQUMsUUFBUyxDQUFDLE9BQU8sQ0FBQztJQUNyRCxDQUFDO0lBQ0QsSUFBVyxnQkFBZ0I7UUFDekIsT0FBNEIsSUFBSSxDQUFDLFFBQVMsQ0FBQyxnQkFBZ0IsQ0FBQztJQUM5RCxDQUFDOzt5SEFuQlUsMkJBQTJCOzZHQUEzQiwyQkFBMkIsc0hDUHhDLCtqQkFTQTs0RkRGYSwyQkFBMkI7a0JBSnZDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLDhDQUE4QztvQkFDeEQsV0FBVyxFQUFFLGdDQUFnQztpQkFDOUM7MEVBRVUsUUFBUTtzQkFBaEIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgUXVlc3Rpb24sIFF1ZXN0aW9uU2VsZWN0QmFzZSB9IGZyb20gXCJzdXJ2ZXktY29yZVwiO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6IFwic3YtbmctY29tbWVudC1vdGhlciwgJ1tzdi1uZy1jb21tZW50LW90aGVyXSdcIixcbiAgdGVtcGxhdGVVcmw6IFwiLi9jb21tZW50LW90aGVyLmNvbXBvbmVudC5odG1sXCIsXG59KVxuZXhwb3J0IGNsYXNzIFN1cnZleUNvbW1lbnRPdGhlckNvbXBvbmVudCB7XG4gIEBJbnB1dCgpIHF1ZXN0aW9uITogUXVlc3Rpb247XG4gIGNvbnN0cnVjdG9yKCkge1xuICB9XG4gIHB1YmxpYyBnZXQgb3RoZXJWYWx1ZSgpOiBzdHJpbmcge1xuICAgIGNvbnN0IHZhbCA9ICg8UXVlc3Rpb25TZWxlY3RCYXNlPnRoaXMucXVlc3Rpb24pLm90aGVyVmFsdWU7XG4gICAgcmV0dXJuICEhdmFsID8gdmFsIDogXCJcIjtcbiAgfVxuICBwdWJsaWMgb25PdGhlclZhbHVlQ2hhbmdlKGV2ZW50OiBhbnkpOiB2b2lkIHtcbiAgICAoPFF1ZXN0aW9uU2VsZWN0QmFzZT50aGlzLnF1ZXN0aW9uKS5vbk90aGVyVmFsdWVDaGFuZ2UoZXZlbnQpO1xuICB9XG4gIHB1YmxpYyBvbk90aGVyVmFsdWVJbnB1dChldmVudDogYW55KTogdm9pZCB7XG4gICAgKDxRdWVzdGlvblNlbGVjdEJhc2U+dGhpcy5xdWVzdGlvbikub25PdGhlclZhbHVlSW5wdXQoZXZlbnQpO1xuICB9XG4gIHB1YmxpYyBnZXQgb3RoZXJJZCgpOiBzdHJpbmcge1xuICAgIHJldHVybiAoPFF1ZXN0aW9uU2VsZWN0QmFzZT50aGlzLnF1ZXN0aW9uKS5vdGhlcklkO1xuICB9XG4gIHB1YmxpYyBnZXQgb3RoZXJQbGFjZWhvbGRlcigpOiBzdHJpbmcge1xuICAgIHJldHVybiAoPFF1ZXN0aW9uU2VsZWN0QmFzZT50aGlzLnF1ZXN0aW9uKS5vdGhlclBsYWNlaG9sZGVyO1xuICB9XG59IiwiPHRleHRhcmVhICpuZ0lmPVwiIXF1ZXN0aW9uLmlzUmVhZE9ubHlSZW5kZXJEaXYoKVwiIFtpZF09XCJvdGhlcklkXCIgW2F0dHIubWF4LWxlbmd0aF09XCJxdWVzdGlvbi5nZXRPdGhlcnNNYXhMZW5ndGgoKVwiICBbYXR0ci5hcmlhLXJlcXVpcmVkXT1cInF1ZXN0aW9uLmFyaWFSZXF1aXJlZFwiIFthdHRyLmFyaWEtbGFiZWxdPVwicXVlc3Rpb24uYXJpYUxhYmVsXCIgW2F0dHIucGxhY2Vob2xkZXJdPVwib3RoZXJQbGFjZWhvbGRlclwiIFxuICBbdmFsdWVdPVwib3RoZXJWYWx1ZVwiXG4gIFtzdHlsZS5yZXNpemVdPVwicXVlc3Rpb24ucmVzaXplU3R5bGVcIlxuICBbZGlzYWJsZWRdPVwicXVlc3Rpb24uaXNJbnB1dFJlYWRPbmx5XCJcbiAgKGNoYW5nZSk9XCJvbk90aGVyVmFsdWVDaGFuZ2UoJGV2ZW50KVwiXG4gIChpbnB1dCk9XCJvbk90aGVyVmFsdWVJbnB1dCgkZXZlbnQpXCJcbiAgW2NsYXNzXT1cInF1ZXN0aW9uLmNzc0NsYXNzZXMub3RoZXJcIj5cbjwvdGV4dGFyZWE+XG48ZGl2ICpuZ0lmPVwicXVlc3Rpb24uaXNSZWFkT25seVJlbmRlckRpdigpXCI+e3sgb3RoZXJWYWx1ZSB9fTwvZGl2PlxuIl19