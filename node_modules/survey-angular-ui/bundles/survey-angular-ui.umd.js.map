{"version":3,"file":"survey-angular-ui.umd.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/embedded-view-content.component.ts","../../src/base-angular.ts","../../src/component-factory.ts","../../src/utils/dynamic.directive.ts","../../src/components/action-bar/action.component.ts","../../src/components/action-bar/action.component.html","../../src/components/action-bar/action-bar.component.ts","../../src/components/action-bar/action-bar.component.html","../../src/utils/ng-show.directive.ts","../../src/components/popup/popup-container.component.ts","../../src/components/popup/popup-container.component.html","../../src/components/popup/popup.service.ts","../../src/components/popup/modal-container.component.ts","../../src/components/element-title/dynamic-head.component.ts","../../src/components/element-title/dynamic-head.component.html","../../src/survey-string.component.ts","../../src/components/element-title/title-actions.component.ts","../../src/components/element-title/title-actions.component.html","../../src/components/element-title/element-title.component.ts","../../src/components/element-title/element-title.component.html","../../src/components/survey-header/survey-header.component.ts","../../src/components/survey-header/survey-header.component.html","../../src/element.component.ts","../../src/element.component.html","../../src/row.component.ts","../../src/row.component.html","../../src/page.component.ts","../../src/page.component.html","../../src/components/brand-info/brand-info.component.ts","../../src/components/brand-info/brand-info.component.html","../../src/components/notifier/notifier.component.ts","../../src/components/notifier/notifier.component.html","../../src/survey-content.component.ts","../../src/survey-content.component.html","../../src/survey.component.ts","../../src/popup.survey.component.ts","../../src/popup.survey.component.html","../../src/question.ts","../../src/errors.component.ts","../../src/errors.component.html","../../src/components/element-header/element-header.component.ts","../../src/components/element-header/element-header.component.html","../../src/comment.component.ts","../../src/comment.component.html","../../src/question.component.ts","../../src/question.component.html","../../src/string-viewer.component.ts","../../src/string-viewer.component.html","../../src/components/popup/popup-pointer.component.ts","../../src/components/popup/popup-pointer.component.html","../../src/components/popup/popup.component.ts","../../src/components/skeleton.component.ts","../../src/components/skeleton.component.html","../../src/components/svg-icon/svg-icon.component.ts","../../src/components/dropdown/dropdown.component.ts","../../src/components/dropdown/dropdown.component.html","../../src/components/tagbox/tagbox-filter.component.ts","../../src/components/tagbox/tagbox-filter.component.html","../../src/components/tagbox/tagbox-item.component.ts","../../src/components/tagbox/tagbox-item.component.html","../../src/components/tagbox/tagbox.component.ts","../../src/components/tagbox/tagbox.component.html","../../src/components/renderAs/dropdown-select/dropdown-option-item.component.ts","../../src/comment-other.component.ts","../../src/comment-other.component.html","../../src/components/renderAs/dropdown-select/dropdown-select.component.ts","../../src/components/renderAs/dropdown-select/dropdown-select.component.html","../../src/utils/safe-url.pipe.ts","../../src/components/survey-header/logo-image.component.ts","../../src/components/survey-header/logo-image.component.html","../../src/components/character-counter/character-counter.component.ts","../../src/components/character-counter/character-counter.component.html","../../src/questions/text.component.ts","../../src/questions/text.component.html","../../src/utils/safe-html.pipe.ts","../../src/questions/html.component.ts","../../src/questions/html.component.html","../../src/questions/selectbase.component.ts","../../src/questions/selectbase.component.html","../../src/questions/radiogroup.component.ts","../../src/questions/radiogroup-item.component.ts","../../src/questions/radiogroup-item.component.html","../../src/questions/checkbox.component.ts","../../src/questions/checkbox-item.component.ts","../../src/questions/checkbox-item.component.html","../../src/questions/dropdown.component.ts","../../src/questions/dropdown.component.html","../../src/questions/tagbox.component.ts","../../src/questions/tagbox.component.html","../../src/questions/rating.component.ts","../../src/questions/rating.component.html","../../src/questions/boolean.component.ts","../../src/questions/boolean.component.html","../../src/questions/imagepicker-item.component.ts","../../src/questions/imagepicker-item.component.html","../../src/questions/imagepicker.component.ts","../../src/questions/imagepicker.component.html","../../src/questions/button-group/button-group-item.component.ts","../../src/questions/button-group/button-group-item.component.html","../../src/questions/button-group/button-group.component.ts","../../src/questions/button-group/button-group.component.html","../../src/components-container.component.ts","../../src/components-container.component.html","../../src/utils/ng-key2click.directive.ts","../../src/components/action-bar/action-bar-item.component.ts","../../src/components/action-bar/action-bar-item.component.html","../../src/components/action-bar/action-bar-item-dropdown.component.ts","../../src/components/action-bar/action-bar-item-dropdown.component.html","../../src/questions/selectbase-item.ts","../../src/questions/selectbase-item.html","../../src/components/skeleton/skeleton.component.ts","../../src/components/skeleton/skeleton.component.html","../../src/components/timer-panel/timer-panel.component.ts","../../src/components/timer-panel/timer-panel.component.html","../../src/components/list/list-item.component.ts","../../src/components/list/list-item.component.html","../../src/components/list/list.component.ts","../../src/components/list/list.component.html","../../src/components/rating/rating-item.component.ts","../../src/components/rating/rating-item.component.html","../../src/components/rating/rating-item-star.component.ts","../../src/components/rating/rating-item-star.component.html","../../src/components/rating/rating-item-smiley.component.ts","../../src/components/rating/rating-item-smiley.component.html","../../src/components/renderAs/rating-dropdown/rating-dropdown.component.ts","../../src/components/renderAs/rating-dropdown/rating-dropdown.component.html","../../src/components/renderAs/boolean-checkbox/boolean-checkbox.component.ts","../../src/components/renderAs/boolean-checkbox/boolean-checkbox.component.html","../../src/components/renderAs/boolean-radio/boolean-radio-item.component.ts","../../src/components/renderAs/boolean-radio/boolean-radio-item.component.html","../../src/components/renderAs/boolean-radio/boolean-radio.component.ts","../../src/components/renderAs/boolean-radio/boolean-radio.component.html","../../src/components/progress/default/progress.component.ts","../../src/components/progress/default/progress.component.html","../../src/components/progress/buttons/progress.component.ts","../../src/components/progress/buttons/progress.component.html","../../src/components/progress/toc/progress.component.ts","../../src/components/progress/toc/progress.component.html","../../src/panel.component.ts","../../src/panel.component.html","../../src/components/survey-actions/survey-nav-btn.component.ts","../../src/components/survey-actions/survey-nav-btn.component.html","../../src/questions/matrix.component.ts","../../src/questions/matrix.component.html","../../src/questions/file.component.ts","../../src/questions/file.component.html","../../src/questions/comment.component.ts","../../src/questions/comment.component.html","../../src/questions/signature.component.ts","../../src/questions/signature.component.html","../../src/questions/multipletextitem.component.ts","../../src/questions/mutlipletextitem.component.html","../../src/questions/multipletext.component.ts","../../src/questions/multipletext.component.html","../../src/questions/ranking.component.ts","../../src/questions/ranking.component.html","../../src/questions/ranking-item.component.ts","../../src/questions/ranking-item.component.html","../../src/string-editor.component.ts","../../src/string-editor.component.html","../../src/components/paneldynamic-actions/paneldynamic-add-btn.component.ts","../../src/components/paneldynamic-actions/paneldynamic-add-btn.component.html","../../src/components/paneldynamic-actions/paneldynamic-next-btn.component.ts","../../src/components/paneldynamic-actions/paneldynamic-next-btn.component.html","../../src/components/paneldynamic-actions/paneldynamic-prev-btn.component.ts","../../src/components/paneldynamic-actions/paneldynamic-prev-btn.component.html","../../src/components/paneldynamic-actions/paneldynamic-remove-btn.component.ts","../../src/components/paneldynamic-actions/paneldynamic-remove-btn.component.html","../../src/components/paneldynamic-actions/paneldynamic-progress-text.component.ts","../../src/components/paneldynamic-actions/paneldynamic-progress-text.component.html","../../src/questions/paneldynamic.component.ts","../../src/questions/paneldynamic.component.html","../../src/template-renderer.component.ts","../../src/template-renderer.component.html","../../src/questions/customwidget.component.ts","../../src/questions/customwidget.component.html","../../src/components/matrix-actions/drag-drop-icon/drag-drop-icon.ts","../../src/components/matrix-actions/drag-drop-icon/drag-drop-icon.component.html","../../src/questions/matrixcell.component.ts","../../src/questions/matrixcell.component.html","../../src/questions/matrixrequiredheader.component.ts","../../src/questions/matrix-row.component.ts","../../src/questions/matrix-row.component.html","../../src/questions/matrixtable.component.ts","../../src/questions/matrixtable.component.html","../../src/questions/matrixdropdown.component.ts","../../src/questions/matrixdropdown.component.html","../../src/questions/matrixdynamic.component.ts","../../src/questions/matrixdynamic.component.html","../../src/components/matrix-actions/remove-button/remove-button.component.ts","../../src/components/matrix-actions/remove-button/remove-button.component.html","../../src/components/matrix-actions/detail-button/detail-button.component.ts","../../src/components/matrix-actions/detail-button/detail-button.component.html","../../src/questions/expression.component.ts","../../src/questions/image.component.ts","../../src/questions/image.component.html","../../src/questions/custom.component.ts","../../src/questions/composite.component.ts","../../src/angular-ui.module.ts","../../src/survey-angular-ui.ts"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.push(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.push(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","import { Component, EmbeddedViewRef, OnInit, TemplateRef, ViewChild, ViewContainerRef } from \"@angular/core\";\n\n@Component({\n  template: \"\",\n})\n\nexport class EmbeddedViewContentComponent implements OnInit {\n  @ViewChild(\"template\", { read: TemplateRef, static: true }) templateRef!: TemplateRef<HTMLElement>\n  protected embeddedView?: EmbeddedViewRef<HTMLElement>;\n  constructor(protected viewContainerRef?: ViewContainerRef) {}\n\n  ngOnInit(): void {\n    if(!!this.templateRef) {\n      this.embeddedView = this.viewContainerRef?.createEmbeddedView(this.templateRef);\n    }\n  }\n}","import { ChangeDetectorRef, Component, DoCheck, OnChanges, OnDestroy, SimpleChange, ViewContainerRef } from \"@angular/core\";\nimport { ArrayChanges, Base, ISurvey, SurveyModel } from \"survey-core\";\nimport { EmbeddedViewContentComponent } from \"./embedded-view-content.component\";\n\n@Component({\n  template: \"\"\n  })\nexport abstract class BaseAngular<T extends Base = Base> extends EmbeddedViewContentComponent implements DoCheck, OnDestroy {\n  constructor(protected changeDetectorRef: ChangeDetectorRef, viewContainerRef?: ViewContainerRef) {\n    super(viewContainerRef);\n  }\n  protected get surveyModel(): ISurvey {\n    return this.getModel().getSurvey();\n  }\n  protected abstract getModel(): T;\n  protected previousModel?: T;\n  private isModelSubsribed: boolean = false;\n\n  public ngDoCheck(): void {\n    if(this.previousModel !== this.getModel()) {\n      this.unMakeBaseElementAngular(this.previousModel);\n      this.makeBaseElementAngular(this.getModel());\n      this.onModelChanged();\n      this.previousModel = this.getModel();\n    }\n    this.setIsRendering(true);\n  }\n\n  protected onModelChanged() {}\n\n  private setIsRendering(val: boolean) {\n    const model = this.getModel();\n    if (!!model) {\n      (<any>model).isRendering = val;\n    }\n  }\n  private getIsRendering() {\n    const model = this.getModel();\n    return !!model && !!(<any>model).isRendering;\n  }\n  private isDestroyed: boolean = false;\n  ngOnDestroy() {\n    this.isDestroyed = true;\n    this.unMakeBaseElementAngular(this.getModel());\n  }\n\n  private makeBaseElementAngular(stateElement: T) {\n    if(!!stateElement && !(<any>stateElement).__ngImplemented) {\n      this.isModelSubsribed = true;\n      (<any>stateElement).__ngImplemented = true;\n      stateElement.iteratePropertiesHash((hash, key) => {\n        var val: any = hash[key];\n        if (Array.isArray(val)) {\n          var val: any = val;\n          val[\"onArrayChanged\"] = (arrayChanges: ArrayChanges) => {\n            this.update(key);\n          };\n        }\n      });\n      stateElement.setPropertyValueCoreHandler = (\n        hash: any,\n        key: string,\n        val: any\n      ) => {\n        if (hash[key] !== val) {\n          hash[key] = val;\n          this.update(key);\n        }\n      };\n    }\n  }\n  private unMakeBaseElementAngular(stateElement?: Base) {\n    if(!!stateElement && this.isModelSubsribed) {\n      this.isModelSubsribed = false;\n      (<any>stateElement).__ngImplemented = false;\n      stateElement.setPropertyValueCoreHandler = <any>undefined;\n      stateElement.iteratePropertiesHash((hash, key) => {\n        var val: any = hash[key];\n        if (Array.isArray(val)) {\n          var val: any = val;\n          val[\"onArrayChanged\"] = () => {};\n        }\n      });\n    }\n  }\n\n  private update(key: string) {\n    if (this.getIsRendering()) return;\n    this.beforeUpdate();\n    if(this.getPropertiesToUpdateSync().indexOf(key) > -1) {\n      this.detectChanges();\n      this.afterUpdate();\n    } else {\n      ((<any>window)[\"__zone_symbol__queueMicrotask\"]\n        ? (<any>window)[\"__zone_symbol__queueMicrotask\"] : queueMicrotask)(() => {\n        if(!this.isDestroyed) {\n          this.setIsRendering(true);\n          this.detectChanges();\n        }\n        this.afterUpdate();\n      });\n    }\n  }\n  private getChangeDetectorRef() {\n    return this.embeddedView ? this.embeddedView : this.changeDetectorRef;\n  }\n  protected getPropertiesToUpdateSync(): Array<string> {\n    return [];\n  }\n  protected detectChanges() {\n    this.getChangeDetectorRef().detectChanges();\n  }\n\n  protected getShouldReattachChangeDetector(): boolean {\n    return true;\n  }\n\n  protected beforeUpdate(): void {\n    if(this.getShouldReattachChangeDetector()) {\n      this.getChangeDetectorRef().detach();\n    }\n    this.setIsRendering(true);\n  }\n  protected afterUpdate(): void {\n    if(this.getShouldReattachChangeDetector()) {\n      this.getChangeDetectorRef().reattach();\n    }\n    this.setIsRendering(false);\n  }\n  ngAfterViewChecked(): void {\n    this.setIsRendering(false);\n  }\n}","import { Component, ComponentFactoryResolver, ComponentRef, Type, ViewContainerRef } from \"@angular/core\";\n\nexport class AngularComponentFactory {\n  public static Instance: AngularComponentFactory = new AngularComponentFactory();\n  private creatorHash: { [index: string]: Type<Component> } = {};\n\n  public registerComponent(\n    typeName: string,\n    componentType: Type<any>\n  ): void {\n    this.creatorHash[typeName] = componentType;\n  }\n  public getAllTypes(): Array<string> {\n    var result = new Array<string>();\n    for (var key in this.creatorHash) {\n      result.push(key);\n    }\n    return result.sort();\n  }\n  public isComponentRegistered(elementType: string): boolean {\n    return !!this.creatorHash[elementType];\n  }\n  public create(containerRef: ViewContainerRef, elementType: string, resolver: ComponentFactoryResolver): ComponentRef<Component> {\n    var componentType = this.creatorHash[elementType];\n    if (!componentType) return (null as any);\n    return containerRef.createComponent(resolver.resolveComponentFactory(componentType));\n  }\n}\n","import { ComponentFactoryResolver, Directive, ElementRef, Input, OnChanges, SimpleChanges, TemplateRef, ViewContainerRef } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\ninterface IDynamicComponent {\n  name: string;\n  data?: any;\n  default?: string;\n}\n\n@Directive({\n  selector: \"[component]\"\n})\n\nexport class DynamicComponentDirective implements OnChanges {\n  constructor(private containerRef: ViewContainerRef, private templateRef: TemplateRef<unknown>, private resolver: ComponentFactoryResolver) { }\n  @Input() component!: IDynamicComponent;\n  private componentInstance: any;\n  ngOnChanges(changes: SimpleChanges): void {\n    const componentChanges = changes[\"component\"];\n    if(componentChanges.currentValue.name !== componentChanges.previousValue?.name ||\n      (componentChanges.currentValue.name === undefined && componentChanges.previousValue === undefined && !this.componentInstance)) {\n      this.createComponent();\n    } else {\n      this.updateComponentData();\n    }\n  }\n  createComponent(): void {\n    this.containerRef.clear();\n    if(AngularComponentFactory.Instance.isComponentRegistered(this.component.name)) {\n      this.componentInstance = AngularComponentFactory.Instance.create(this.containerRef, this.component.name, this.resolver).instance;\n    } else if (this.component.default) {\n      this.componentInstance = AngularComponentFactory.Instance.create(this.containerRef, this.component.default, this.resolver).instance;\n    }\n    if(!this.componentInstance) {\n      throw new Error(`Can't create component with name: ${this.component.name} and default: ${this.component.default}`);\n    } else {\n      this.componentInstance.contentTempl = this.templateRef;\n    }\n    this.updateComponentData();\n  }\n  updateComponentData(): void {\n    const data = this.component.data;\n    Object.keys(data).forEach((key) => {\n      this.componentInstance[key] = data[key];\n    });\n  }\n}","import { Component, Input, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-ng-action\",\n  templateUrl: \"./action.component.html\",\n  styles: [\":host { display: none; }\"],\n})\nexport class ActionComponent extends BaseAngular {\n  @Input() model: any;\n  @ViewChild(\"actionContent\", { read: ViewContainerRef, static: true }) actionContent!: ViewContainerRef;\n  getModel() {\n    return this.model;\n  }\n  protected override getPropertiesToUpdateSync(): string[] {\n    return [\"mode\"];\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-action\", ActionComponent);","\n<ng-template #template>\n  <div [class]=\"model.getActionRootCss()\" [id]=\"model.id\">\n    <div class=\"sv-action__content\">\n      <ng-container *ngIf=\"model.needSeparator\">\n        <div class=\"sv-action-bar-separator\"></div>\n      </ng-container>\n      <ng-template [component]=\"{ name: model.component, data: { model }, default: 'sv-action-bar-item'}\"></ng-template>\n    </div>\n  </div>\n</ng-template>","import { Component, ElementRef, Input, ViewChild } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { ActionContainer } from \"survey-core\";\n\n@Component({\n  selector: \"sv-action-bar, sv-ng-action-bar\",\n  templateUrl: \"./action-bar.component.html\",\n  styles: [\":host { display: none }\"]\n})\nexport class ActionBarComponent extends BaseAngular<ActionContainer> {\n  @Input() model!: ActionContainer;\n  @Input() handleClick: any;\n  @ViewChild(\"container\") container!: ElementRef<HTMLDivElement>;\n  getModel(): ActionContainer {\n    return this.model;\n  }\n\n  get allowOnClick(): boolean {\n    return this.handleClick !== undefined ? this.handleClick : true;\n  }\n\n  onClick(event: Event): void {\n    if(this.allowOnClick) {\n      event.stopPropagation();\n    }\n  }\n  ngAfterViewInit() {\n    if (!!this.model.hasActions) {\n      this.model.initResponsivityManager(this.container.nativeElement);\n    }\n  }\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.model.resetResponsivityManager();\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-action-bar\", ActionBarComponent);","<ng-template #template>\n  <div *ngIf=\"model.hasActions\" [class]=\"model.getRootCss()\" (click)=\"onClick($event)\" #container>\n    <ng-container *ngFor=\"let action of model.renderedActions\">\n      <sv-ng-action [model]=\"action\"></sv-ng-action>\n    </ng-container>\n  </div>\n</ng-template>","import { Directive, ElementRef, Input, OnChanges, SimpleChanges } from \"@angular/core\";\n\n@Directive({\n  selector: \"[visible]\"\n})\nexport class VisibleDirective implements OnChanges {\n  constructor(private el: ElementRef) { }\n  @Input() visible?: boolean;\n  ngOnChanges(changes: SimpleChanges): void {\n    changes[\"visible\"].currentValue ? this.show() : this.hide();\n  }\n  private hide() {\n    this.el.nativeElement.style.display = \"none\";\n  }\n  private show() {\n    this.el.nativeElement.style.display = \"\";\n  }\n}","import { ChangeDetectorRef, Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { PopupBaseViewModel, PopupModalViewModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-popup-container, '[sv-ng-popup-container]'\",\n  templateUrl: \"./popup-container.component.html\"\n  })\n\nexport class PopupBaseContainerComponent<T extends PopupBaseViewModel = PopupBaseViewModel> extends BaseAngular<T> {\n  private prevIsVisible: boolean = false;\n  @Input() model!: T;\n\n  constructor(changeDetectorRef: ChangeDetectorRef) {\n    super(changeDetectorRef);\n    this.changeDetectorRef.detach();\n  }\n  protected getModel(): T {\n    return this.model;\n  }\n\n  get applyButtonText(): string | null {\n    const popupModalModel = this.model as any as PopupModalViewModel;\n    if(!popupModalModel) return null;\n\n    return popupModalModel.applyButtonText;\n  }\n\n  apply(): void {\n    const popupModalModel = this.model as any as PopupModalViewModel;\n    if(!popupModalModel) return;\n\n    popupModalModel.apply();\n  }\n\n  protected override getShouldReattachChangeDetector(): boolean {\n    return false;\n  }\n\n  protected override onModelChanged(): void {\n    this.changeDetectorRef.detectChanges();\n  }\n\n  protected override afterUpdate(): void {\n    super.afterUpdate();\n    if (!this.prevIsVisible && this.model.isVisible) {\n      this.model.updateOnShowing();\n    }\n    if (this.prevIsVisible !== this.model.isVisible) {\n      this.prevIsVisible = this.model.isVisible;\n    }\n  }\n  public clickInside(event: any) {\n    event.stopPropagation();\n  }\n}","<div class=\"sv-popup\" tabindex=\"-1\" [class]=\"model.styleClass\" [visible]=\"model.isVisible\" (click)=\"model.clickOutside()\" (keydown)=\"model.onKeyDown($event)\">\n    <div class=\"sv-popup__container\" [style]=\"{ left: model.left, top: model.top, height: model.height, minWidth: model.minWidth, width: model.width }\" (click)=\"clickInside($event)\">\n        <div class=\"sv-popup__shadow\">\n            <ng-container *ngIf=\"model.showHeader\">\n                <ng-template [component]=\"{ name: model.popupHeaderTemplate, data: { model: model } }\"></ng-template>\n            </ng-container>\n            <div class=\"sv-popup__body-content\">\n                <div *ngIf=\"model.title\" class=\"sv-popup__body-header\">{{ model.title }}</div>\n                <div class=\"sv-popup__scrolling-content\">\n                    <div class=\"sv-popup__content\">\n                        <ng-template [component]=\"{ name: model.contentComponentName, data: model.contentComponentData }\"></ng-template>\n                    </div>\n                </div>\n                <div *ngIf=\"model.showFooter\" class=\"sv-popup__body-footer\">\n                    <sv-ng-action-bar [model]=\"model.footerToolbar\"></sv-ng-action-bar>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { ApplicationRef, ComponentFactoryResolver, Injectable, Injector } from \"@angular/core\";\nimport { ComponentPortal, DomPortalOutlet } from \"@angular/cdk/portal\";\nimport { PopupBaseViewModel } from \"survey-core\";\nimport { PopupBaseContainerComponent } from \"./popup-container.component\";\n\n@Injectable()\nexport class PopupService {\n  constructor(private injector: Injector,\n              private applicationRef: ApplicationRef,\n              private componentFactoryResolver: ComponentFactoryResolver) {}\n\n  createComponent(popupViewModel: PopupBaseViewModel): DomPortalOutlet {\n    const portalHost = new DomPortalOutlet(popupViewModel.container, this.componentFactoryResolver, this.applicationRef, this.injector);\n    const portal = new ComponentPortal(PopupBaseContainerComponent);\n    const componentRef = portalHost.attach(portal);\n    popupViewModel.container = <HTMLElement>popupViewModel.container.children[0];\n    componentRef.instance.model = popupViewModel;\n    componentRef.changeDetectorRef.detectChanges();\n    return portalHost;\n  }\n}","import { DomPortalOutlet } from \"@angular/cdk/portal\";\nimport { Component } from \"@angular/core\";\nimport { createDialogOptions, IDialogOptions, PopupBaseViewModel, createPopupModalViewModel, settings } from \"survey-core\";\nimport { PopupService } from \"./popup.service\";\n\n@Component({\n  selector: \"sv-ng-modal-container\",\n  template: \"\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\n\nexport class ModalComponent {\n\n  public model!: PopupBaseViewModel;\n  private portalHost!: DomPortalOutlet;\n  private functionDefined: boolean = false;\n\n  constructor(private popupService: PopupService) {\n  }\n  showDialog(dialogOptions: IDialogOptions): PopupBaseViewModel {\n    this.model = createPopupModalViewModel(dialogOptions);\n    this.model.initializePopupContainer();\n    this.model.model.onHide = () => {\n      this.portalHost.detach();\n      this.model.unmountPopupContainer();\n    };\n    this.portalHost = this.popupService.createComponent(this.model);\n    this.model.model.isVisible = true;\n    return this.model;\n  }\n  ngOnInit(): void {\n    if(!!settings.showModal) return;\n    this.functionDefined = true;\n    settings.showModal = (\n      componentName: string,\n      data: any,\n      onApply: () => boolean,\n      onCancel?: () => void,\n      cssClass?: string,\n      title?: string,\n      displayMode: \"popup\" | \"overlay\" = \"popup\"\n    ): PopupBaseViewModel => {\n      const options = createDialogOptions(\n        componentName,\n        data,\n        onApply,\n        onCancel,\n        undefined,\n        undefined,\n        cssClass,\n        title,\n        displayMode\n      );\n      return this.showDialog(options);\n    };\n  }\n  ngOnDestroy() {\n    if(this.functionDefined) {\n      settings.showModal = <any>undefined;\n    }\n  }\n}\n\n","import { Component, Input } from \"@angular/core\";\nimport { EmbeddedViewContentComponent } from \"../../embedded-view-content.component\";\nimport { SurveyElement } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-dynamic-head\",\n  templateUrl: \"./dynamic-head.component.html\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\nexport class DynamicHeadComponent extends EmbeddedViewContentComponent {\n  @Input() tagName!: string;\n  @Input() element!: SurveyElement;\n  get ariaLabel(): string | null {\n    return this.element.titleAriaLabel;\n  }\n}","<ng-template #template>\n  <ng-container [ngSwitch]=\"tagName\">\n    <h1 *ngSwitchCase=\"'h1'\" [class]=\"element.cssTitle\" [attr.id]=\"element.ariaTitleId\" [attr.tabindex]=\"element.titleTabIndex\" [attr.aria-expanded]=\"element.titleAriaExpanded\" [attr.role]=\"element.titleAriaRole\" [attr.aria-label]=\"ariaLabel\"><ng-container *ngTemplateOutlet=\"titleContent\"></ng-container></h1>\n    <h2 *ngSwitchCase=\"'h2'\"[class]=\"element.cssTitle\" [attr.id]=\"element.ariaTitleId\" [attr.tabindex]=\"element.titleTabIndex\" [attr.aria-expanded]=\"element.titleAriaExpanded\" [attr.role]=\"element.titleAriaRole\" [attr.aria-label]=\"ariaLabel\"><ng-container *ngTemplateOutlet=\"titleContent\"></ng-container></h2>\n    <h3 *ngSwitchCase=\"'h3'\"[class]=\"element.cssTitle\" [attr.id]=\"element.ariaTitleId\" [attr.tabindex]=\"element.titleTabIndex\" [attr.aria-expanded]=\"element.titleAriaExpanded\" [attr.role]=\"element.titleAriaRole\" [attr.aria-label]=\"ariaLabel\"><ng-container *ngTemplateOutlet=\"titleContent\"></ng-container></h3>\n    <h4 *ngSwitchCase=\"'h4'\"[class]=\"element.cssTitle\" [attr.id]=\"element.ariaTitleId\" [attr.tabindex]=\"element.titleTabIndex\" [attr.aria-expanded]=\"element.titleAriaExpanded\" [attr.role]=\"element.titleAriaRole\" [attr.aria-label]=\"ariaLabel\"><ng-container *ngTemplateOutlet=\"titleContent\"></ng-container></h4>\n    <h5 *ngSwitchCase=\"'h5'\"[class]=\"element.cssTitle\" [attr.id]=\"element.ariaTitleId\" [attr.tabindex]=\"element.titleTabIndex\" [attr.aria-expanded]=\"element.titleAriaExpanded\" [attr.role]=\"element.titleAriaRole\" [attr.aria-label]=\"ariaLabel\"><ng-container *ngTemplateOutlet=\"titleContent\"></ng-container></h5>\n    <h6 *ngSwitchCase=\"'h6'\"[class]=\"element.cssTitle\" [attr.id]=\"element.ariaTitleId\" [attr.tabindex]=\"element.titleTabIndex\" [attr.aria-expanded]=\"element.titleAriaExpanded\" [attr.role]=\"element.titleAriaRole\" [attr.aria-label]=\"ariaLabel\"><ng-container *ngTemplateOutlet=\"titleContent\"></ng-container></h6>\n  </ng-container>\n  <ng-template #titleContent>\n    <ng-content></ng-content>\n  </ng-template>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { LocalizableString } from \"survey-core\";\n\n@Component(\n  {\n    selector: \"sv-ng-string, '[sv-ng-string]'\",\n    template: \"<ng-template [component]='{ name: model.renderAs, data: { model: model.renderAsData } }'></ng-template>\"\n  }\n)\nexport class SurveyStringComponent {\n  @Input() model!: LocalizableString;\n}","import { Component, Input } from \"@angular/core\";\nimport { EmbeddedViewContentComponent } from \"../../embedded-view-content.component\";\n\n@Component({\n  selector: \"sv-ng-element-title-actions\",\n  templateUrl: \"./title-actions.component.html\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\nexport class ElementTitleActionsComponent extends EmbeddedViewContentComponent {\n  @Input() element: any;\n}","<ng-template #template>\n  <ng-container *ngIf=\"!element.hasTitleActions\">\n    <ng-container *ngTemplateOutlet=\"elementTitleContent\"></ng-container>\n  </ng-container>\n  <ng-container *ngIf=\"element.hasTitleActions\">\n    <div class=\"sv-title-actions\">\n      <span class=\"sv-title-actions__title\">\n        <ng-container *ngTemplateOutlet=\"elementTitleContent\"></ng-container>\n      </span>\n      <sv-ng-action-bar [model]=\"element.getTitleToolbar()\"></sv-ng-action-bar>\n    </div>\n  </ng-container>\n  <ng-template #elementTitleContent>\n    <sv-ng-string *ngIf=\"element.isTitleRenderedAsString\" [model]=\"element.locTitle\"></sv-ng-string>\n    <ng-container *ngIf=\"!element.isTitleRenderedAsString\">\n      <span\n        *ngIf=\"element.isRequireTextOnStart\"\n        [class]=\"element.cssClasses.requiredText\"\n        [attr.aria-hidden]=\"true\"\n        >{{ element.requiredText }}</span>\n      <span\n        *ngIf=\"element.no\"\n        style=\"position: static\"\n        [class]=\"element.cssClasses.number || element.cssClasses.panel.number\"\n        [attr.aria-hidden]=\"true\"\n        >{{ element.no }}</span>\n      <span *ngIf=\"element.no\">&nbsp;</span>\n      <span\n        *ngIf=\"element.isRequireTextBeforeTitle\"\n        [class]=\"element.cssClasses.requiredText\"\n        [attr.aria-hidden]=\"true\"\n        >{{ element.requiredText }}</span>\n      <span *ngIf=\"element.isRequireTextBeforeTitle\">&nbsp;</span>\n      <sv-ng-string [model]=\"element.locTitle\"></sv-ng-string>\n      <span *ngIf=\"element.isRequireTextAfterTitle\">&nbsp;</span>\n      <span\n        *ngIf=\" element.isRequireTextAfterTitle\"\n        [class]=\"element.cssClasses.requiredText\"\n        [attr.aria-hidden]=\"true\"\n        >{{ element.requiredText }}</span> \n  </ng-container>\n  </ng-template>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { EmbeddedViewContentComponent } from \"../../embedded-view-content.component\";\n\n@Component({\n  selector: \"sv-ng-element-title\",\n  templateUrl: \"./element-title.component.html\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\nexport class ElementTitleComponent extends EmbeddedViewContentComponent {\n  @Input() element: any;\n}","<ng-template #template>\n  <sv-ng-dynamic-head [tagName]=\"element.titleTagName\" [element]=\"element\" *ngIf=\"element.hasTitle\">\n    <sv-ng-element-title-actions [element]=\"element\"></sv-ng-element-title-actions>\n  </sv-ng-dynamic-head>\n</ng-template>","import { AfterViewInit, ChangeDetectorRef, Component, Input, OnDestroy, ViewContainerRef } from \"@angular/core\";\nimport { SurveyModel } from \"survey-core\";\n\n@Component({\n  selector: \"'[sv-ng-survey-header]'\",\n  templateUrl: \"survey-header.component.html\"\n})\nexport class SurveyHeaderComponent implements AfterViewInit, OnDestroy {\n  @Input() survey!: SurveyModel;\n  constructor(private viewContainerRef: ViewContainerRef, private changeDetectorRef: ChangeDetectorRef) {}\n  ngAfterViewInit(): void {\n    this.survey.afterRenderHeader(this.viewContainerRef.element.nativeElement);\n    this.survey.locLogo.onChanged = () => {\n      this.changeDetectorRef.detectChanges();\n    };\n  }\n  ngOnDestroy(): void {\n    this.survey.locLogo.onChanged = () => {};\n  }\n}","<div *ngIf=\"survey.isLogoBefore\" [class]=\"survey.logoClassNames\">\n  <ng-template [component]=\"{ name: survey.getElementWrapperComponentName(survey, 'logo-image'), data: { data: survey.getElementWrapperComponentData(survey, 'logo-image') } }\"></ng-template>\n</div>\n<div\n  *ngIf=\"survey.renderedHasTitle\"\n  [class]=\"survey.css.headerText\"\n  [style.maxWidth]=\"survey.titleMaxWidth\"\n>\n  <sv-ng-element-title [element]=\"survey\"></sv-ng-element-title>\n  <h5 *ngIf=\"survey.renderedHasDescription\" [class]=\"survey.css.description\" [model]=\"survey.locDescription\" sv-ng-string></h5>\n</div>\n\n<div *ngIf=\"survey.isLogoAfter\" [class]=\"survey.logoClassNames\">\n  <ng-template [component]=\"{ name: survey.getElementWrapperComponentName(survey, 'logo-image'), data: { data: survey.getElementWrapperComponentData(survey, 'logo-image') } }\"></ng-template>\n</div>\n<div [class]=\"survey.css.headerClose\"></div>","import { Component, Input } from \"@angular/core\";\nimport { PanelModel, Question, SurveyModel } from \"survey-core\";\nimport { BaseAngular } from \"./base-angular\";\n\n@Component({\n  selector: \"sv-ng-element\",\n  templateUrl: \"./element.component.html\",\n  styleUrls: [\"./hide-host.scss\"]\n})\nexport class ElementComponent extends BaseAngular<PanelModel | Question> {\n  @Input() model!: PanelModel | Question;\n  protected getModel(): PanelModel | Question {\n    return this.model;\n  }\n  protected get elementComponentName(): string {\n    return this.model.isPanel ? \"panel\": \"question\";\n  }\n  public get componentName(): string {\n    const survey = this.surveyModel as SurveyModel;\n    if(!!survey) {\n      const name = survey.getElementWrapperComponentName(this.model);\n      if(!!name) {\n        return name;\n      }\n    }\n    return this.elementComponentName;\n  }\n  public get rootStyle() {\n    //use this if to check if cssClassses are calculated and allowRootStyle flag was set\n    if(!!this.model.cssClasses) {\n      return this.model.rootStyle;\n    } else {\n      return {};\n    }\n  }\n  public get componentData(): any {\n    const survey = this.surveyModel as SurveyModel;\n    let data: any;\n    if(!!survey) {\n      data = survey.getElementWrapperComponentData(this.model);\n    }\n    return {\n      componentName: this.elementComponentName,\n      componentData: {\n        model: this.model,\n        data: data\n      }\n    };\n  }\n}\n","<ng-template #template>\n    <div *ngIf=\"!!model\" [class]=\"model.cssClasses.questionWrapper\" [style]=\"rootStyle\" (focusin)=\"model.focusIn()\">\n        <ng-template [component]=\"{ name: componentName, data: componentData }\"></ng-template>\n    </div>\n</ng-template>","import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, Input, NgZone, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { IElement, QuestionRowModel } from \"survey-core\";\nimport { BaseAngular } from \"./base-angular\";\n@Component({\n  selector: \"sv-ng-row\",\n  templateUrl: \"./row.component.html\",\n  styleUrls: [\"./hide-host.scss\"]\n})\nexport class RowComponent extends BaseAngular<QuestionRowModel> implements AfterViewInit {\n  @Input() row!: QuestionRowModel;\n  @ViewChild(\"container\", { read: ElementRef }) container?: ElementRef<HTMLDivElement>;\n  constructor(cdr: ChangeDetectorRef, vcr: ViewContainerRef, private ngZone: NgZone) {\n    super(cdr, vcr);\n  }\n\n  protected getModel(): QuestionRowModel {\n    return this.row;\n  }\n  trackElementBy (index: number, element: IElement): string {\n    return element.name + index;\n  }\n  public ngAfterViewInit(): void {\n    const el = this.container?.nativeElement;\n    if (!!el && !this.row.isNeedRender) {\n      this.ngZone.runOutsideAngular(() => {\n        setTimeout(() => {\n          this.row.startLazyRendering(el);\n        }, 10);\n      });\n    }\n  }\n  protected override onModelChanged(): void {\n    super.onModelChanged();\n    if(!this.previousModel) {\n      return;\n    } else {\n      this.row.isNeedRender = this.previousModel.isNeedRender;\n      this.stopLazyRendering();\n    }\n  }\n  private stopLazyRendering() {\n    this.row.stopLazyRendering();\n    this.row.isNeedRender = !this.row.isLazyRendering();\n  }\n  public override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.stopLazyRendering();\n  }\n}","<ng-template #template>\n  <div [class]=\"row.getRowCss()\" *ngIf=\"row.visible\" #container>\n    <ng-container *ngFor=\"let element of row.visibleElements; trackBy: trackElementBy\">\n      <sv-ng-element [model]=\"$any(element)\" *ngIf=\"row.isNeedRender\"></sv-ng-element>\n      <ng-template *ngIf=\"!row.isNeedRender && element.skeletonComponentName\" [component]=\"{ name: element.skeletonComponentName, data: { element: element } }\"></ng-template>\n    </ng-container>\n  </div>\n</ng-template>","import { AfterViewInit, Component, ElementRef, Input, OnChanges, SimpleChanges, ViewChild } from \"@angular/core\";\nimport { PageModel, SurveyModel } from \"survey-core\";\nimport { BaseAngular } from \"./base-angular\";\n@Component({\n  selector: \"page, sv-ng-page\",\n  templateUrl: \"./page.component.html\",\n  styleUrls: [\"./hide-host.scss\"]\n  })\nexport class PageComponent extends BaseAngular<PageModel> {\n  @Input() model!: PageModel;\n  @Input() survey?: SurveyModel;\n  @ViewChild(\"pageContainer\", { static: false, read: ElementRef }) pageContainerRef!: ElementRef<HTMLDivElement>;\n  protected getModel(): PageModel {\n    return this.model;\n  }\n  protected override onModelChanged(): void {\n    if(!!this.pageContainerRef && this.pageContainerRef.nativeElement) {\n      this.model.survey.afterRenderPage(this.pageContainerRef.nativeElement);\n    }\n  }\n  ngAfterViewInit(): void {\n    this.model.survey?.afterRenderPage(this.pageContainerRef?.nativeElement);\n  }\n}","<ng-template #template>\n  <ng-container *ngIf=\"!!this.survey && !!this.model && this.model.isVisible && !!this.model.survey\">\n    <div [class]=\"model.cssRoot\" #pageContainer>\n      <sv-ng-element-title [element]=\"model\"></sv-ng-element-title>\n      <div *ngIf=\"model._showDescription\" [class]=\"model.cssClasses.page.description\">\n        <sv-ng-string [model]=\"model.locDescription\"></sv-ng-string>\n      </div>\n      <ng-container *ngFor=\"let row of model.rows\">\n        <ng-template [component]=\"{ name: $any(model.survey).getRowWrapperComponentName(row), data: { componentData: $any(model.survey).getRowWrapperComponentData(row) } }\">\n          <sv-ng-row [row]=\"row\"></sv-ng-row>\n        </ng-template>\n      </ng-container>\n    </div>\n  </ng-container>  \n</ng-template>","import { Component } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n@Component({\n  selector: \"sv-brand-info\",\n  templateUrl: \"./brand-info.component.html\"\n})\nexport class BrandInfoComponent {}\nAngularComponentFactory.Instance.registerComponent(\"sv-brand-info\", BrandInfoComponent);","<div class=\"sv-brand-info\">\n  <a class=\"sv-brand-info__logo\" href=\"https://surveyjs.io/?utm_source=built-in_links&utm_medium=online_survey_tool&utm_campaign=landing_page\"><img src=\"https://surveyjs.io/Content/Images/poweredby.svg\"/></a>\n  <div class=\"sv-brand-info__text\">Try and see how easy it is to <a href=\"https://surveyjs.io/create-survey?utm_source=built-in_links&utm_medium=online_survey_tool&utm_campaign=create_survey\">create a survey</a></div>\n  <div class=\"sv-brand-info__terms\"><a href=\"https://surveyjs.io/TermsOfUse\">Terms of Use & Privacy Statement</a></div>\n</div>","import { Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { Base, Notifier } from \"survey-core\";\n\n@Component({\n  selector: \"sv-notifier\",\n  templateUrl: \"./notifier.component.html\",\n  styles: [\":host { display: none; }\"]\n  })\nexport class NotifierComponent extends BaseAngular<Notifier> {\n  @Input() notifier!: Notifier;\n  protected getStateElement(): Base {\n    return this.notifier;\n  }\n  protected getModel(): Notifier {\n    return this.notifier;\n  }\n}","<ng-template #template>\n  <ng-container *ngIf=\"notifier.isDisplayed\">\n    <div [class]=\"notifier.css\" [style]=\"{ visibility: notifier.active ? 'visible' : 'hidden' }\">\n      <span>{{notifier.message}}</span>\n      <sv-action-bar [model]=\"notifier.actionBar\"></sv-action-bar> \n    </div>\n  </ng-container>\n</ng-template>","\nimport { AfterViewInit, Component, ElementRef, Input, OnInit, ViewChild } from \"@angular/core\";\nimport { SurveyModel, SvgRegistry } from \"survey-core\";\nimport { BaseAngular } from \"./base-angular\";\nimport { AngularComponentFactory } from \"./component-factory\";\n@Component({\n  selector: \"survey-content\",\n  templateUrl: \"./survey-content.component.html\"\n  })\nexport class SurveyContentComponent extends BaseAngular<SurveyModel> implements OnInit, AfterViewInit {\n  @Input() model!: SurveyModel;\n  @ViewChild(\"surveyContainer\", { static: false }) rootEl!: ElementRef<HTMLDivElement>;\n  private isSurveyUpdated: boolean = false;\n  protected getModel(): SurveyModel {\n    return this.model;\n  }\n  protected override onModelChanged(): void {\n    if(!!this.previousModel) {\n      this.previousModel.destroyResizeObserver();\n      this.previousModel.renderCallback = <any>undefined;\n    }\n    if(!!this.model) {\n      this.model.renderCallback = () => {\n        this.detectChanges();\n      };\n    }\n    this.isSurveyUpdated = true;\n  }\n  override ngOnInit(): void {\n    super.ngOnInit();\n    if(!!this.model && this.model[\"needRenderIcons\"]) {\n      SvgRegistry.renderIcons();\n    }\n  }\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    if(!!this.model) {\n      this.model.renderCallback = <any>undefined;\n    }\n  }\n  ngAfterViewInit(): void {\n    this.isSurveyUpdated = true;\n  }\n  override ngAfterViewChecked(): void {\n    if(!!this.model && this.isSurveyUpdated) {\n      this.model.afterRenderSurvey(this.rootEl.nativeElement);\n    }\n    super.ngAfterViewChecked();\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"survey\", SurveyContentComponent);","<ng-template #template>\n  <div #surveyContainer *ngIf=\"!!model\" [class]=\"model.getRootCss()\" [style.backgroundImage]=\"model.renderBackgroundImage\">\n    <form onsubmit=\"return false;\" [style.backgroundColor]=\"model.renderBackgroundOpacity\">\n      <div class=\"sv_custom_header\" [hidden]=\"model.hasLogo\"></div>\n      <div [class]=\"model.css.container\">\n        <div *ngIf=\"model.renderedHasHeader\" [class]=\"model.css.header\" [survey]=\"model\" sv-ng-survey-header></div>\n        <ng-template [component]=\"{ name: 'sv-components-container', data: { survey: model, container: 'header', needRenderWrapper: false } }\"></ng-template>\n        <div *ngIf=\"model.isShowingPage\" [class]=\"model.bodyContainerCss\">\n          <ng-template [component]=\"{ name: 'sv-components-container', data: { survey: model, container: 'left' } }\"></ng-template>\n          <div [class]=\"model.bodyCss\" [style.maxWidth]=\"model.renderedWidth\" [id]=\"model.activePage ? model.activePage.id : ''\">\n            <ng-template [component]=\"{ name: 'sv-components-container', data: { survey: model, container: 'contentTop' } }\"></ng-template>\n            <!-- ko if: activePage -->\n              <ng-container *ngIf=\"model.activePage\">\n                  <sv-ng-page [model]=\"model.activePage\" [survey]=\"model\"></sv-ng-page>\n              </ng-container>\n              <!-- ko if: activePage.rows.length == 0 && $data.emptyPageTemplate -->\n              <!-- ko template: { name: emptyPageTemplate, data: $data.emptyPageTemplateData || $data } -->\n              <!-- /ko -->\n              <!-- /ko -->\n            <!-- /ko -->\n            <ng-template [component]=\"{ name: 'sv-components-container', data: { survey: model, container: 'contentBottom' } }\"></ng-template>\n          </div>\n          <ng-template [component]=\"{ name: 'sv-components-container', data: { survey: model, container: 'right' } }\"></ng-template>\n        </div>\n        <ng-template [component]=\"{ name: 'sv-components-container', data: { survey: model, container: 'footer', needRenderWrapper: false } }\"></ng-template>\n        <div *ngIf=\"model.state === 'completed' && model.showCompletedPage\" [class]=\"model.completedCss\"\n          [innerHtml]=\"model.processedCompletedHtml\"></div>\n        <div *ngIf=\"model.state === 'completedbefore'\" [class]=\"model.css.body\"\n          [innerHtml]=\"model.processedCompletedBeforeHtml\"></div>\n        <div *ngIf=\"model.state === 'loading'\" [class]=\"model.css.body\" [innerHtml]=\"model.processedLoadingHtml\"></div>\n        <div *ngIf=\"model.state === 'empty'\" [class]=\"model.css.bodyEmpty\">{{model.emptySurveyText}}</div>\n      </div>\n    </form>\n    <sv-brand-info *ngIf=\"model.showBrandInfo\"></sv-brand-info>\n    <sv-notifier [notifier]=\"model.notifier\"></sv-notifier>\n  </div>\n</ng-template>","import { ChangeDetectorRef, Component, Input } from \"@angular/core\";\nimport { SurveyModel } from \"survey-core\";\nimport { BaseAngular } from \"./base-angular\";\n@Component({\n  selector: \"survey\",\n  template: \"<sv-ng-modal-container></sv-ng-modal-container><survey-content [model]='model'></survey-content>\"\n  })\nexport class SurveyComponent extends BaseAngular<SurveyModel> {\n  @Input() model!: SurveyModel;\n  protected getModel(): SurveyModel {\n    return this.model;\n  }\n  constructor(changeDetectorRef: ChangeDetectorRef) {\n    super(changeDetectorRef);\n    changeDetectorRef.detach();\n  }\n  protected override getShouldReattachChangeDetector(): boolean {\n    return false;\n  }\n  protected override onModelChanged(): void {\n    this.changeDetectorRef.detectChanges();\n  }\n}","import { ChangeDetectorRef, Component, Input, OnChanges, SimpleChanges } from \"@angular/core\";\nimport { PopupSurveyModel, SurveyModel } from \"survey-core\";\nimport { BaseAngular } from \"./base-angular\";\n@Component({\n  selector: \"popup-survey\",\n  templateUrl: \"./popup.survey.component.html\",\n  styleUrls: [\"./popup.survey.component.scss\"]\n  })\nexport class PopupSurveyComponent extends BaseAngular<PopupSurveyModel> implements OnChanges {\n  @Input() model!: SurveyModel;\n  @Input() isExpanded?: boolean;\n  @Input() closeOnCompleteTimeout?: number;\n  public popup!: PopupSurveyModel;\n\n  constructor(changeDetectorRef: ChangeDetectorRef) {\n    super(changeDetectorRef);\n    changeDetectorRef.detach();\n  }\n  protected getModel(): PopupSurveyModel {\n    return this.popup;\n  }\n  protected override getShouldReattachChangeDetector(): boolean {\n    return false;\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if(changes[\"model\"]?.currentValue !== changes[\"model\"]?.previousValue) {\n      this.popup = new PopupSurveyModel(null, this.model);\n    }\n    if (this.isExpanded !== undefined) {\n      this.popup.isExpanded = this.isExpanded;\n    }\n    if (this.closeOnCompleteTimeout !== undefined) {\n      this.popup.closeOnCompleteTimeout = this.closeOnCompleteTimeout;\n    }\n    this.popup.isShowing = true;\n    this.changeDetectorRef.detectChanges();\n  }\n}","<div *ngIf=\"!!popup && popup.isShowing\" [class]=\"popup.cssRoot\" style=\"position: fixed; bottom: 3px; right: 10px;\" [style.width]=\"popup.renderedWidth\" [style.maxWidth]=\"popup.renderedWidth\">\n  <div [class]=\"popup.cssHeaderRoot\">\n      <span (click)=\"popup.changeExpandCollapse()\" style=\"width: 100%; cursor: pointer;\">\n          <span style=\"padding-right:10px\" [class]=\"popup.cssHeaderTitle\">{{popup.locTitle.renderedHtml}}</span>\n          <span aria-hidden=\"true\" [class]=\"popup.cssButton\"></span>\n      </span>\n      <span *ngIf=\"popup.isExpanded\" (click)=\"popup.changeExpandCollapse()\" style=\"float: right; cursor: pointer;\">\n          <span style=\"padding-right:10px\" [class]=\"popup.cssHeaderTitle\">X</span>\n      </span>\n  </div>\n  <div *ngIf=\"popup.isExpanded\" [class]=\"popup.cssBody\">\n    <survey [model]=\"popup.survey\"></survey>\n  </div>\n</div>","import { AfterViewInit, Component, ElementRef, Input, OnDestroy, ViewChild } from \"@angular/core\";\nimport { Question } from \"survey-core\";\nimport { BaseAngular } from \"./base-angular\";\n\n@Component({\n  template: \"\"\n})\nexport class QuestionAngular<T extends Question = Question> extends BaseAngular<Question> implements AfterViewInit, OnDestroy {\n  @Input() public model!: T;\n\n  @ViewChild(\"contentElement\") elementContentRef!: ElementRef<HTMLElement>;\n\n  protected getModel() {\n    return this.model;\n  }\n\n  ngAfterViewInit() {\n    if (!!this.model) {\n      this.model.afterRenderQuestionElement(this.elementContentRef?.nativeElement);\n    }\n  }\n  override ngOnDestroy() {\n    if (!!this.model) {\n      this.model.beforeDestroyQuestionElement(this.elementContentRef?.nativeElement);\n    }\n    super.ngOnDestroy();\n  }\n}\n\nexport function getComponentName(question: Question): string {\n  if (question.customWidget) return \"survey-customwidget\";\n  if (question.isDefaultRendering()) {\n    return question.getTemplate() + \"-question\";\n  }\n  return question.getComponentName();\n}","import { Component, DoCheck, ElementRef, HostBinding, Input, OnDestroy, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { Base, SurveyElement, TooltipManager } from \"survey-core\";\n\n@Component({\n  templateUrl: \"./errors.component.html\",\n  selector: \"'[sv-ng-errors]'\"\n})\nexport class ErrorsComponent implements OnDestroy, OnInit {\n  @Input() element!: SurveyElement | any;\n  @Input() location?: String;\n  @ViewChild(\"errorsContainer\", { static: true }) errorsContainerRef!: ElementRef<HTMLDivElement>;\n  private tooltipManager!: TooltipManager;\n  constructor(private viewContainerRef: ViewContainerRef) {}\n  ngOnInit(): void {\n    if (this.location == \"tooltip\") {\n      this.tooltipManager = new TooltipManager(this.viewContainerRef.element.nativeElement);\n    }\n  }\n  ngOnDestroy() {\n    if (!!this.tooltipManager) {\n      this.tooltipManager.dispose();\n    }\n  }\n  @HostBinding(\"attr.role\") get role (): string {\n    return \"alert\";\n  }\n  @HostBinding(\"id\") get id(): string {\n    return this.element.id + \"_errors\";\n  }\n  @HostBinding(\"attr.aria-live\") get ariaLive(): string {\n    return \"polite\";\n  }\n  @HostBinding(\"class\") get class(): string {\n    return this.element.cssError;\n  }\n}","<div *ngFor=\"let error of element.errors;\">\n  <span\n    [class]=\"element.cssClasses ? element.cssClasses.error.icon : 'panel-error-icon'\"\n    aria-hidden=\"true\"\n  ></span>\n  <span [class]=\"element.cssClasses ? element.cssClasses.error.item : 'panel-error-item'\" [model]=\"error.locText\" sv-ng-string>\n  </span>\n</div>","import { Component, HostBinding, HostListener, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"'[sv-ng-element-header]'\",\n  templateUrl: \"./element-header.component.html\"\n})\nexport class ElementHeaderComponent {\n  @Input() element: any;\n  constructor() {\n  }\n  @HostBinding(\"class\") get rootClass(): string {\n    return this.element.cssHeader;\n  }\n  @HostListener(\"click\") click(): void {\n    if(this.element.clickTitleFunction !== undefined) {\n      this.element.clickTitleFunction();\n    }\n  }\n}","<sv-ng-element-title [element]=\"element\"></sv-ng-element-title>\n<div *ngIf=\"element.hasDescriptionUnderTitle\" [class]=\"element.cssDescription\" [model]=\"element.locDescription\" sv-ng-string></div>\n<ng-container *ngIf=\"!!element.additionalTitleToolbar\">\n<sv-ng-action-bar [model]=\"element.additionalTitleToolbar\"></sv-ng-action-bar>\n</ng-container>","import { Component, Input } from \"@angular/core\";\nimport { Question } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-comment, '[sv-ng-comment]'\",\n  templateUrl: \"./comment.component.html\",\n})\nexport class SurveyCommentComponent {\n  @Input() question!: Question;\n  constructor() {\n  }\n  public get comment(): string {\n    if(!this.question.comment) return \"\";\n    return this.question.comment;\n  }\n}","<textarea *ngIf=\"!question.isReadOnlyRenderDiv()\" [id]=\"question.commentId\" [attr.max-length]=\"question.getOthersMaxLength()\"  [attr.aria-required]=\"question.ariaRequired\" [attr.aria-label]=\"question.ariaLabel\" [attr.placeholder]=\"question.commentPlaceholder\" \n  [value]=\"comment\"\n  [style.resize]=\"question.resizeStyle\"\n  [disabled]=\"question.isInputReadOnly\"\n  (change)=\"question.onCommentChange($event)\"\n  (input)=\"question.onCommentInput($event)\"\n  [class]=\"question.cssClasses.other\">\n</textarea>\n<div *ngIf=\"question.isReadOnlyRenderDiv()\">{{ question.comment }}</div>\n","import { Component, ElementRef, Input, ViewChild } from \"@angular/core\";\nimport { Question } from \"survey-core\";\nimport { AngularComponentFactory } from \"./component-factory\";\nimport { EmbeddedViewContentComponent } from \"./embedded-view-content.component\";\nimport { getComponentName } from \"./question\";\n\n@Component({\n  selector: \"sv-ng-question\",\n  templateUrl: \"./question.component.html\"\n})\nexport class QuestionComponent extends EmbeddedViewContentComponent {\n  @Input() model!: Question;\n  @ViewChild(\"elementContainer\") rootEl?: ElementRef<HTMLDivElement>;\n  protected getModel(): Question {\n    return this.model;\n  }\n  ngAfterViewInit(): void {\n    if (!!this.rootEl?.nativeElement) {\n      this.model.afterRender(this.rootEl?.nativeElement);\n    }\n  }\n  public getComponentName(): string { return getComponentName(this.model); }\n  public getQuestionContentWrapperComponentName(): string {\n    return (<any>this.model.survey).getQuestionContentWrapperComponentName(this.model) || this.getComponentName();\n  }\n  public getQuestionContentWrapperComponentData(): any {\n    return {\n      componentName: this.getComponentName(),\n      componentData: {\n        model: this.model,\n        data: (<any>this.model.survey).getElementWrapperComponentData(this.model)\n      }\n    };\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"question\", QuestionComponent);","<ng-template #template>\n  <div *ngIf=\"!!model\" #elementContainer [class]=\"model.getRootCss()\" [style]=\"model.getRootStyle()\" [id]=\"model.id\" [attr.data-name]=\"model.name\" [attr.role]=\"model.ariaRole\" [attr.aria-required]=\"model.ariaRequired\" [attr.aria-invalid]=\"model.ariaInvalid\" [attr.aria-labelledby]=\"model.ariaLabelledBy\">\n    <div *ngIf=\"model.showErrorsAboveQuestion && model.hasVisibleErrors\" [element]=\"model\" sv-ng-errors></div>\n    <div [element]=\"model\" *ngIf=\"model.hasTitleOnLeftTop\" sv-ng-element-header></div>\n    <div [class]=\"model.cssContent\" role=\"presentation\" [visible]=\"!model.isCollapsed\">\n      <div *ngIf=\"model.showErrorOnTop && model.hasVisibleErrors\" [element]=\"model\" sv-ng-errors></div>\n      <ng-template [component]=\"{ name: getQuestionContentWrapperComponentName(), data: getQuestionContentWrapperComponentData(), default: 'skeleton-question' }\">\n      </ng-template>\n      <div *ngIf=\"model.hasComment\" [class]=\"model.getCommentAreaCss(false)\">\n        <div [model]=\"model.locCommentText\" sv-ng-string></div>\n        <sv-ng-comment [question]=\"model\"></sv-ng-comment>\n      </div>\n      <div *ngIf=\"model.showErrorOnBottom && model.hasVisibleErrors\" [element]=\"model\" sv-ng-errors></div>\n      <div *ngIf=\"model.isErrorsModeTooltip && model.hasVisibleErrors\" [element]=\"model\" [location]=\"'tooltip'\" sv-ng-errors></div>\n      <div *ngIf=\"model.hasDescriptionUnderInput\" [class]=\"model.cssDescription\" [model]=\"model.locDescription\" sv-ng-string></div>\n  </div>\n    <div [element]=\"model\" *ngIf=\"model.hasTitleOnBottom\" sv-ng-element-header></div>\n    <div *ngIf=\"model.showErrorsBelowQuestion && model.hasVisibleErrors\" [element]=\"model\" sv-ng-errors></div>\n  </div>\n</ng-template>","import { ChangeDetectorRef, Component, DoCheck, Input, OnChanges, OnDestroy, SimpleChanges } from \"@angular/core\";\nimport { LocalizableString } from \"survey-core\";\nimport { AngularComponentFactory } from \"./component-factory\";\n\n@Component({\n  selector: \"sv-ng-string-viewer, string-viewer, '[sv-ng-string-viewer]'\",\n  templateUrl: \"./string-viewer.component.html\",\n  styleUrls: [\"./string-viewer.component.scss\"]\n})\nexport class StringViewerComponent implements DoCheck {\n  @Input() model!: LocalizableString;\n  private previousModel: LocalizableString | undefined;\n  constructor(private changeDetectorRef: ChangeDetectorRef) {}\n  ngDoCheck(): void {\n    if(this.model !== this.previousModel) {\n      if(!!this.previousModel) {\n        this.clearOnChanged(this.previousModel);\n      }\n      if(!!this.model) {\n        this.model.onChanged = () => { this.changeDetectorRef.detectChanges(); };\n      }\n      this.previousModel = this.model;\n    }\n  }\n  clearOnChanged(model: LocalizableString) {\n    model.onChanged = () => {};\n  }\n  ngOnDestroy(): void {\n    !!this.model && this.clearOnChanged(this.model);\n  }\n}\nAngularComponentFactory.Instance.registerComponent(LocalizableString.defaultRenderer, StringViewerComponent);","<span *ngIf=\"!model.hasHtml\" class=\"sv-string-viewer\">{{model.renderedHtml}}</span>\n<span *ngIf=\"model.hasHtml\" class=\"sv-string-viewer\" [innerHtml]=\"model.renderedHtml\"></span>","import { Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { PopupBaseViewModel, PopupDropdownViewModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-ng-popup-pointer, '[sv-ng-popup-pointer]'\",\n  templateUrl: \"./popup-pointer.component.html\"\n})\n\nexport class PopupPointerComponent extends BaseAngular<PopupBaseViewModel> {\n  @Input() model!: PopupBaseViewModel;\n\n  get popupModel(): PopupDropdownViewModel {\n    return this.model as PopupDropdownViewModel;\n  }\n\n  protected getModel(): PopupBaseViewModel {\n    return this.model;\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"popup-pointer\", PopupPointerComponent);","<span class=\"sv-popup__pointer\" [style]=\"{ left: popupModel.pointerTarget.left, top: popupModel.pointerTarget.top }\"></span>","import { ChangeDetectorRef, Component, Input, ViewContainerRef } from \"@angular/core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { PopupBaseViewModel, PopupModel, createPopupViewModel } from \"survey-core\";\nimport { DomPortalOutlet } from \"@angular/cdk/portal\";\nimport { PopupService } from \"./popup.service\";\n\n@Component({\n  selector: \"sv-ng-popup, '[sv-ng-popup]'\",\n  template: \"<div></div>\"\n})\n\nexport class PopupComponent extends BaseAngular<PopupModel> {\n  @Input() popupModel!: PopupModel;\n\n  public model!: PopupBaseViewModel;\n  private portalHost!: DomPortalOutlet;\n\n  protected getModel(): PopupModel {\n    return this.popupModel;\n  }\n\n  constructor(viewContainerRef: ViewContainerRef, changeDetectorRef: ChangeDetectorRef, private popupService: PopupService) {\n    super(changeDetectorRef, viewContainerRef);\n  }\n  protected override onModelChanged(): void {\n    this.destroyModel();\n    this.model = createPopupViewModel(this.popupModel, this.viewContainerRef?.element.nativeElement.parentElement);\n    this.model.initializePopupContainer();\n    this.portalHost = this.popupService.createComponent(this.model);\n  }\n  override ngOnInit() {\n    this.onModelChanged();\n  }\n  public destroyModel(): void {\n    this.portalHost?.detach();\n    this.model?.unmountPopupContainer();\n  }\n\n  override ngOnDestroy() {\n    super.ngOnDestroy();\n    this.destroyModel();\n  }\n}","import { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"question-skeleton\",\n  templateUrl: \"./skeleton.component.html\",\n  styleUrls: [\"./skeleton.component.scss\"]\n})\nexport class QuestionSkeletonComponent {\n  @Input() model: any;\n}\n\nAngularComponentFactory.Instance.registerComponent(\"skeleton-question\", QuestionSkeletonComponent);","<div class=\"sv-skeleton--not-implemented\">\n  <div>{{ model.getType() + \" question type renderer is not implemented yet.\" }}</div>\n  <div>{{ model.value }}</div>\n</div>\n","import { Component, HostBinding, Input, OnChanges, ViewContainerRef } from \"@angular/core\";\nimport * as Survey from \"survey-core\";\n\n@Component({\n  selector: \"'[sv-ng-svg-icon]'\",\n  template: \"\"\n})\nexport class SvgIconComponent implements OnChanges {\n  @Input() size?: number | string;\n  @Input() width?: number;\n  @Input() height?: number;\n  @Input() iconName!: string;\n  @Input() partCss?: string;\n  @Input() css?: string;\n  @Input() title?: string;\n  constructor(private viewContaierRef: ViewContainerRef) {\n  }\n  private createSvg() {\n    if(!!this.iconName) {\n      (Survey as any).createSvg(\n        this.size,\n        this.width,\n        this.height,\n        this.iconName,\n        this.viewContaierRef.element.nativeElement,\n        this.title\n      );\n    }\n  }\n  @HostBinding(\"class\") get rootClass(): string {\n    let className = \"sv-svg-icon\";\n    if(!this.css && !!this.partCss) {\n      className += \" \" + this.partCss;\n    } else if(!!this.css) {\n      className = this.css;\n    }\n    return className;\n  }\n  @HostBinding(\"[attr.role]\") get rootRole(): string {\n    return \"img\";\n  }\n  @HostBinding(\"[attr.aria-label]\") get ariaLabel(): string {\n    return <string>this.title;\n  }\n  ngOnChanges(): void {\n    const el = this.viewContaierRef.element.nativeElement;\n    el.innerHTML = \"\";\n    el.appendChild(document.createElementNS(\"http://www.w3.org/2000/svg\", \"use\"));\n    this.createSvg();\n  }\n}","import { Component, ElementRef, Input, OnDestroy, OnInit, ViewChild } from \"@angular/core\";\nimport { DropdownListModel, Helpers } from \"survey-core\";\nimport { BaseAngular } from \"../../base-angular\";\n\n@Component({\n  selector: \"sv-ng-dropdown, '[sv-ng-dropdown]'\",\n  templateUrl: \"./dropdown.component.html\"\n  })\nexport class DropdownComponent extends BaseAngular implements OnDestroy, OnInit {\n    @Input() model: any;\n    @ViewChild(\"inputElement\") inputElementRef!: ElementRef<HTMLDivElement>;\n    get dropdownModel(): DropdownListModel {\n      return this.model?.dropdownListModel;\n    }\n    protected getModel() {\n      return this.model.dropdownListModel;\n    }\n\n    override ngOnInit(): void {\n      super.ngOnInit();\n      if (!this.model.dropdownListModel) {\n        this.model.dropdownListModel = new DropdownListModel(this.model);\n      }\n    }\n\n    override ngOnDestroy() {\n      super.ngOnDestroy();\n      this.dropdownModel?.dispose();\n    }\n\n    click(event: any) {\n      this.dropdownModel?.onClick(event);\n    }\n    clear(event: any) {\n      this.dropdownModel?.onClear(event);\n    }\n    keyhandler(event: any) {\n      this.dropdownModel?.keyHandler(event);\n    }\n    blur(event: any) {\n      this.dropdownModel?.onBlur(event);\n      this.updateInputDomElement();\n    }\n  focus(event: any) {\n    this.dropdownModel?.onFocus(event);\n  }\n    inputChange(event: any) {\n      this.detectChanges();\n    }\n    updateInputDomElement() {\n      if (!!this.inputElementRef?.nativeElement) {\n        const control: any = this.inputElementRef.nativeElement;\n        const newValue = this.model.inputStringRendered;\n        if (!Helpers.isTwoValueEquals(newValue, control.value)) {\n          control.value = this.model.inputStringRendered || \"\";\n        }\n      }\n    }\n}","<div [class]=\"model.cssClasses.selectWrapper\">\n    <div *ngIf=\"!model.isReadOnly\" [attr.tabindex]=\"dropdownModel.inputReadOnly ? null : 0\" [class]=\"model.getControlClass()\"\n        [attr.disabled]=\"model.isInputReadOnly ? true : null\" (click)=\"click($event)\" (blur)=\"blur($event)\"\n        (keydown)=\"keyhandler($event)\" [attr.id]=\"model.inputId\" [attr.aria-required]=\"model.ariaRequired\"\n        [attr.aria-label]=\"model.ariaLabel\" [attr.aria-invalid]=\"model.ariaInvalid\"\n        [attr.aria-describedby]=\"model.ariaDescribedBy\" [attr.role]=\"model.ariaRole\"\n        [attr.aria-controls]=\"dropdownModel.listElementId\"\n        [attr.aria-expanded]=\"model.ariaExpanded ? 'true' : 'false'\"\n        [attr.aria-activedescendant]=\"dropdownModel.ariaActivedescendant\">\n        <div *ngIf=\"dropdownModel.showHintPrefix\" [class]=\"model.cssClasses.hintPrefix\">\n            <span>{{ dropdownModel.hintStringPrefix }}</span>\n        </div>\n        <div [class]=\"model.cssClasses.controlValue\">\n            <div *ngIf=\"dropdownModel.showHintString\" [class]=\"model.cssClasses.hintSuffix\">\n                <span style=\"visibility: hidden\">{{ dropdownModel.inputStringRendered }}</span>\n                <span>{{ dropdownModel.hintStringSuffix }}</span>\n            </div>\n            <ng-container *ngIf=\"dropdownModel.showInputFieldComponent\">\n                <ng-template [component]=\"{ name: model.inputFieldComponentName, data: { model: dropdownModel.getSelectedAction(), question: model } }\"></ng-template>\n            </ng-container>\n            <sv-ng-string *ngIf=\"dropdownModel.showSelectedItemLocText\" [model]=\"model.selectedItemLocText\"></sv-ng-string>\n            <input #inputElement type=\"text\" autocomplete=\"off\" [(ngModel)]=\"dropdownModel.inputStringRendered\" [class]=\"model.cssClasses.filterStringInput\"\n            [attr.role]=\"dropdownModel.filterStringEnabled ? model.ariaRole : null\"\n            [attr.id]=\"model.getInputId()\"\n            [attr.inputmode]=\"dropdownModel.inputMode\"\n            [attr.tabindex]=\"dropdownModel.inputReadOnly ? null : -1\"\n            [attr.disabled]=\"model.isInputReadOnly ? true : null\"\n            [attr.aria-label]=\"model.placeholder\"\n            [attr.aria-controls]=\"dropdownModel.listElementId\"\n            [attr.aria-expanded]=\"model.ariaExpanded ? 'true' : 'false'\"\n            [attr.aria-activedescendant]=\"dropdownModel.ariaActivedescendant\"\n            [attr.placeholder]=\"dropdownModel.placeholderRendered\" [attr.readonly]=\"!dropdownModel.searchEnabled ? true : null\" \n            (change)=\"inputChange($event)\" (blur)=\"blur($event)\" (focus)=\"focus($event)\"/>\n        </div>\n        <div *ngIf=\"(model.allowClear && model.cssClasses.cleanButtonIconId)\"\n            [class]=\"model.cssClasses.cleanButton\" (click)=\"clear($event)\" [visible]=\"!model.isEmpty()\">\n            <!-- ko component: { name: 'sv-svg-icon', params: { css: model.cssClasses.cleanButtonSvg, iconName: model.cssClasses.cleanButtonIconId, size: 'auto' } } -->\n            <!-- /ko -->\n            <svg [iconName]=\"model.cssClasses.cleanButtonIconId\" [partCss]=\"model.cssClasses.cleanButtonSvg\" [title]=\"model.clearCaption\"\n                [size]=\"'auto'\" sv-ng-svg-icon></svg>\n        </div>\n    </div>\n    <sv-ng-popup *ngIf=\"!model.isReadOnly\" [popupModel]=\"dropdownModel.popupModel\"></sv-ng-popup>\n    <div disabled *ngIf=\"model.isReadOnly\" [class]=\"model.getControlClass()\" [attr.id]=\"model.inputId\">\n        <sv-ng-string *ngIf=\"model.selectedItemLocText\" [model]=\"model.selectedItemLocText\"></sv-ng-string>\n        <div>{{ model.readOnlyText }}</div>\n    </div>\n</div>","import { Component, Input } from \"@angular/core\";\nimport { DropdownMultiSelectListModel, QuestionTagboxModel } from \"survey-core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-tagbox-filter\",\n  templateUrl: \"./tagbox-filter.component.html\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\nexport class TagboxFilterComponent extends BaseAngular {\n  @Input() model!: DropdownMultiSelectListModel;\n  @Input() question!: QuestionTagboxModel;\n\n  getModel() {\n    return this.model;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-tagbox-filter\", TagboxFilterComponent);","<ng-template #template>\n  <input\n    type=\"text\"\n    autocomplete=\"off\"\n    [(ngModel)]=\"model.inputStringRendered\"\n    [attr.id]=\"question.getInputId()\"\n    [class]=\"question.cssClasses.filterStringInput\"\n    [attr.inputmode]=\"model.inputMode\"\n    [attr.role]=\"model.filterStringEnabled ? question.ariaRole : null\"\n    [attr.readonly]=\"!model.searchEnabled ? true : null\"\n    [attr.disabled]=\"question.isInputReadOnly ? true : null\"\n    [attr.size]=\"!model.inputStringRendered ? 1 : null\"\n    [attr.aria-label]=\"question.placeholder\"\n    [attr.aria-controls]=\"model.listElementId\"\n    [attr.aria-expanded]=\"question.ariaExpanded ? 'true' : 'false'\"\n    [attr.aria-activedescendant]=\"model.ariaActivedescendant\"\n    [attr.placeholder]=\"model.filterStringPlaceholder\"\n    (keydown)=\"model.inputKeyHandler($event)\"\n    (blur)=\"model.onBlur($event)\"\n    (focus)=\"model.onFocus($event)\"\n  />\n</ng-template>\n","import { Component, Input } from \"@angular/core\";\nimport { ItemValue, QuestionTagboxModel } from \"survey-core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-ng-tagbox-item, '[sv-ng-tagbox-item]'\",\n  templateUrl: \"./tagbox-item.component.html\",\n})\nexport class TagboxItemComponent extends BaseAngular {\n  @Input() item!: ItemValue;\n  @Input() question!: QuestionTagboxModel;\n\n  removeItem(event: any) {\n    this.question.dropdownListModel.deselectItem(this.item.value);\n    event.stopPropagation();\n  }\n\n  getModel() {\n    return this.item;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-tagbox-item\", TagboxItemComponent);","<div class=\"sv-tagbox__item\">\n  <div class=\"sv-tagbox__item-text\" [model]=\"item.locText\" sv-ng-string></div>  \n  <div [class]=\"question.cssClasses.cleanItemButton\" (click)=\"removeItem($event)\">\n    <svg [iconName]=\"question.cssClasses.cleanItemButtonIconId\" [partCss]=\"question.cssClasses.cleanItemButtonSvg\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n  </div>\n</div>","import { Component, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport { DropdownMultiSelectListModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-tagbox, '[sv-ng-tagbox]'\",\n  templateUrl: \"./tagbox.component.html\"\n})\nexport class TagboxComponent implements OnDestroy, OnInit {\n    @Input() model: any;\n    private dropdownListModel!: DropdownMultiSelectListModel;\n\n    get dropdownModel(): DropdownMultiSelectListModel {\n      return this.dropdownListModel;\n    }\n\n    getModel() {\n      return this.model;\n    }\n\n    ngOnInit(): void {\n      this.dropdownListModel = this.model.dropdownListModel || new DropdownMultiSelectListModel(this.model);\n    }\n\n    ngOnDestroy() {\n      this.dropdownListModel?.dispose();\n    }\n\n    click(event: any) {\n      this.dropdownListModel?.onClick(event);\n    }\n    clear(event: any) {\n      this.dropdownListModel?.onClear(event);\n    }\n    keyhandler(event: any) {\n      this.dropdownListModel?.keyHandler(event);\n    }\n    blur(event: any) {\n      this.dropdownListModel?.onBlur(event);\n    }\n}","<div [class]=\"model.cssClasses.selectWrapper\">\n    <div *ngIf=\"!model.isReadOnly\" [attr.tabindex]=\"dropdownModel.inputReadOnly ? null : 0\" [class]=\"model.getControlClass()\"\n        [attr.disabled]=\"model.isInputReadOnly ? true : null\" (click)=\"click($event)\" (blur)=\"blur($event)\"\n        (keydown)=\"keyhandler($event)\" [attr.id]=\"model.inputId\" [attr.aria-required]=\"model.ariaRequired\"\n        [attr.aria-label]=\"model.ariaLabel\" [attr.aria-invalid]=\"model.ariaInvalid\"\n        [attr.aria-describedby]=\"model.ariaDescribedBy\" [attr.role]=\"model.ariaRole\"\n        [attr.aria-controls]=\"dropdownModel.listElementId\"\n        [attr.aria-expanded]=\"model.ariaExpanded ? 'true' : 'false'\"\n        [attr.aria-activedescendant]=\"dropdownModel.ariaActivedescendant\">\n        <div [class]=\"model.cssClasses.controlValue\">\n            <ng-container *ngIf=\"!model.isEmpty()\">\n                <sv-ng-tagbox-item *ngFor=\"let item of model.selectedChoices\" [item]=\"item\" [question]=\"model\">\n                </sv-ng-tagbox-item>\n            </ng-container>\n            <ng-template [component]=\"{ name: 'sv-tagbox-filter', data: { model: dropdownModel, question: model } }\"></ng-template>\n        </div>\n        <div *ngIf=\"(model.allowClear && model.cssClasses.cleanButtonIconId)\" [class]=\"model.cssClasses.cleanButton\"\n            (click)=\"clear($event)\" [visible]=\"!model.isEmpty()\">\n            <!-- ko component: { name: 'sv-svg-icon', params: { css: model.cssClasses.cleanButtonSvg, iconName: model.cssClasses.cleanButtonIconId, size: 'auto' } } -->\n            <!-- /ko -->\n            <svg [iconName]=\"model.cssClasses.cleanButtonIconId\" [partCss]=\"model.cssClasses.cleanButtonSvg\" [title]=\"model.clearCaption\"\n                [size]=\"'auto'\" sv-ng-svg-icon></svg>\n        </div>\n    </div>\n    <sv-ng-popup *ngIf=\"!model.isReadOnly\" [popupModel]=\"model.popupModel\"></sv-ng-popup>\n    <div disabled *ngIf=\"model.isReadOnly\" [class]=\"model.getControlClass()\" [attr.id]=\"model.inputId\">\n        <div>{{ model.readOnlyText }}</div>\n    </div>\n</div>","import { Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"../../../base-angular\";\nimport { AngularComponentFactory } from \"../../../component-factory\";\n\n@Component({\n  selector: \"sv-ng-dropdown-option-item, '[sv-ng-dropdown-option-item]'\",\n  template: '<ng-template #template><option [value]=\"item.value\" [disabled]=\"!item.isEnabled\">{{ item.text }}</option><ng-template>',\n})\nexport class DropdownOptionItemComponent extends BaseAngular {\n  @Input() item: any;\n  protected override onModelChanged(): void {\n    if (!this.item.locText) return;\n    this.item.locText.onChanged = () => {\n      this.detectChanges();\n    };\n  }\n  protected getModel() {\n    return this.item;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-dropdown-option-item\", DropdownOptionItemComponent);","import { Component, Input } from \"@angular/core\";\nimport { Question, QuestionSelectBase } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-comment-other, '[sv-ng-comment-other]'\",\n  templateUrl: \"./comment-other.component.html\",\n})\nexport class SurveyCommentOtherComponent {\n  @Input() question!: Question;\n  constructor() {\n  }\n  public get otherValue(): string {\n    const val = (<QuestionSelectBase>this.question).otherValue;\n    return !!val ? val : \"\";\n  }\n  public onOtherValueChange(event: any): void {\n    (<QuestionSelectBase>this.question).onOtherValueChange(event);\n  }\n  public onOtherValueInput(event: any): void {\n    (<QuestionSelectBase>this.question).onOtherValueInput(event);\n  }\n  public get otherId(): string {\n    return (<QuestionSelectBase>this.question).otherId;\n  }\n  public get otherPlaceholder(): string {\n    return (<QuestionSelectBase>this.question).otherPlaceholder;\n  }\n}","<textarea *ngIf=\"!question.isReadOnlyRenderDiv()\" [id]=\"otherId\" [attr.max-length]=\"question.getOthersMaxLength()\"  [attr.aria-required]=\"question.ariaRequired\" [attr.aria-label]=\"question.ariaLabel\" [attr.placeholder]=\"otherPlaceholder\" \n  [value]=\"otherValue\"\n  [style.resize]=\"question.resizeStyle\"\n  [disabled]=\"question.isInputReadOnly\"\n  (change)=\"onOtherValueChange($event)\"\n  (input)=\"onOtherValueInput($event)\"\n  [class]=\"question.cssClasses.other\">\n</textarea>\n<div *ngIf=\"question.isReadOnlyRenderDiv()\">{{ otherValue }}</div>\n","import { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../../component-factory\";\nimport { RendererFactory } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-dropdown-select-question\",\n  templateUrl: \"./dropdown-select.component.html\"\n})\nexport class DropdownSelectComponent {\n  @Input() model: any;\n\n  get editableValue() {\n    return this.model.renderedValue || \"\";\n  }\n  set editableValue(newValue: any) {\n    if(newValue === \"\") {\n      this.model.renderedValue = undefined;\n    } else {\n      this.model.renderedValue = newValue;\n    }\n  }\n\n  click(event: any) {\n    this.model.onClick(event);\n  }\n  keyup(event: any) {\n    this.model.onKeyUp(event);\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"dropdown-select-question\", DropdownSelectComponent);\nRendererFactory.Instance.registerRenderer(\"dropdown\", \"select\", \"dropdown-select-question\");","<div [class]=\"model.renderCssRoot\">\n  <div [class]=\"model.cssClasses.selectWrapper\">\n    <select *ngIf=\"!model.isReadOnly\" [attr.id]=\"model.inputId\" [(ngModel)]=\"editableValue\"\n      [disabled]=\"model.isInputReadOnly\" (click)=\"click($event)\" (keyup)=\"keyup($event)\"\n      [class]=\"model.getControlClass()\" [attr.autocomplete]=\"model.autocomplete\" [required]=\"model.isRequired\"\n      [attr.aria-required]=\"model.ariaRequired\" [attr.aria-label]=\"model.ariaLabel\"\n      [attr.aria-invalid]=\"model.ariaInvalid\" [attr.aria-describedby]=\"model.ariaDescribedBy\">\n      <option *ngIf=\"model.allowClear\" value=\"\">{{ model.placeholder }}</option>\n      <ng-template *ngFor=\"let item of model.visibleChoices\" [component]=\"{ name: 'sv-dropdown-option-item', data: { item } }\"></ng-template>\n    </select>\n    <div *ngIf=\"model.isReadOnly\" disabled [class]=\"model.getControlClass()\" [attr.id]=\"model.inputId\">{{ model.readOnlyText }}</div>\n  </div>\n  <div *ngIf=\"model.isOtherSelected\" [class]=\"model.getCommentAreaCss(true)\"\n    [style.display]=\"model.isFlowLayout ? 'inline': '' \" [question]=\"model\" sv-ng-comment-other></div>\n</div>","import { Pipe, PipeTransform } from \"@angular/core\";\nimport { DomSanitizer, SafeResourceUrl, SafeUrl } from \"@angular/platform-browser\";\n\n//temp: disables angular sanitizer, which breaks a links\n@Pipe({ name: \"safeUrl\" })\nexport class SafeUrlPipe implements PipeTransform {\n  constructor(private domSanitizer: DomSanitizer) {}\n  transform(url: string): SafeUrl {\n    return this.domSanitizer.bypassSecurityTrustUrl(url);\n  }\n}\n\n@Pipe({ name: \"safeResourceUrl\" })\nexport class SafeResourceUrlPipe implements PipeTransform {\n  constructor(private domSanitizer: DomSanitizer) {}\n  transform(url: string): SafeResourceUrl {\n    return this.domSanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n}","import { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { EmbeddedViewContentComponent } from \"../../embedded-view-content.component\";\nimport { SurveyModel } from \"survey-core\";\n@Component({\n  selector: \"sv-logo-image\",\n  templateUrl: \"./logo-image.component.html\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\nexport class LogoImageComponent extends EmbeddedViewContentComponent {\n  @Input() data!: SurveyModel;\n  get survey(): SurveyModel {\n    return this.data;\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"sv-logo-image\", LogoImageComponent);","<ng-template #template>\n  <img\n  [class]=\"survey.css.logoImage\"\n  [attr.src]=\"survey.locLogo.renderedHtml | safeUrl\"\n  [attr.width]=\"survey.logoWidth ? survey.logoWidth : undefined\"\n  [attr.height]=\"survey.logoHeight ? survey.logoHeight : undefined\"\n  [attr.alt]=\"survey.locTitle.renderedHtml\"\n  [style.objectFit]=\"survey.logoFit\"\n  />\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { CharacterCounter } from \"survey-core\";\nimport { EmbeddedViewContentComponent } from \"../../embedded-view-content.component\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { BaseAngular } from \"../../base-angular\";\n\n@Component({\n  selector: \"sv-ng-character-counter\",\n  templateUrl: \"./character-counter.component.html\",\n  styles: [\":host { display: none; }\"],\n  })\nexport class CharacterCounterComponent extends BaseAngular {\n  @Input() counter!: CharacterCounter;\n  @Input() remainingCharacterCounter!: string;\n\n  getModel() {\n    return this.counter;\n  }\n\n}\n\nAngularComponentFactory.Instance.registerComponent(\"character-counter\", CharacterCounterComponent);","<ng-template #template>\n  <div [class]=\"remainingCharacterCounter\">{{ counter.remainingCharacterCounter }}</div>\n</ng-template>","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { QuestionTextModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-text-question\",\n  templateUrl: \"./text.component.html\",\n  styleUrls: [\"./text.component.scss\"]\n})\nexport class TextQuestionComponent extends QuestionAngular<QuestionTextModel> {\n  get value(): string {\n    return this.model.value ?? \"\";\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"text-question\", TextQuestionComponent);","  <ng-container [ngTemplateOutlet]=\"input\" *ngIf=\"!model.dataListId && !model.isReadOnlyRenderDiv()\"></ng-container>\n  <div *ngIf=\"model.dataListId && !model.isReadOnlyRenderDiv()\">\n    <ng-container [ngTemplateOutlet]=\"input\"></ng-container>\n    <datalist [id]=\"model.dataListId\">\n      <option *ngFor=\"let dataListItem of model.dataList\" [value]=\"dataListItem\"></option>\n    </datalist>\n  </div>\n  <div *ngIf=\"model.isReadOnlyRenderDiv()\" #contentElement>{{ model.value }}</div>\n  <ng-template #input>\n    <input [style]=\"model.inputStyle\" [class]=\"model.getControlClass()\" [attr.list]=\"model.dataListId\"\n    (change)=\"model.onChange($event)\" [value]=\"value\" [disabled]=\"model.isInputReadOnly\" name=\"user\" [type]=\"model.inputType\" [id]=\"model.inputId\" [attr.placeholder]=\"model.renderedPlaceholder || ''\"\n    (keyup)=\"model.onKeyUp($event)\" (keydown)=\"model.onKeyDown($event)\" (blur)=\"model.onBlur($event)\" (focus)=\"model.onFocus($event)\" (compositionupdate)=\"model.onCompositionUpdate($event)\" \n    [attr.size] = \"model.renderedInputSize\" [attr.maxlength]= \"model.getMaxLength()\" [attr.min]=\"model.renderedMin\"\n    [attr.max]=\"model.renderedMax\" [attr.step]=\"model.renderedStep\" [attr.max]=\"model.renderedMax\" [attr.aria-required]=\"model.ariaRequired\"\n    [attr.aria-label]=\"model.ariaLabel\" [attr.aria-invalid]=\"model.ariaInvalid\" [attr.aria-describedby]=\"model.ariaDescribedBy\" [attr.autocomplete]=\"model.autocomplete\" #contentElement/>\n    <sv-ng-character-counter *ngIf=\"model.getMaxLength()\" \n    [counter]=\"model.characterCounter\"\n    [remainingCharacterCounter]=\"model.cssClasses.remainingCharacterCounter\">\n  </sv-ng-character-counter>\n  </ng-template>","import { Pipe, PipeTransform } from \"@angular/core\";\nimport { DomSanitizer, SafeUrl } from \"@angular/platform-browser\";\n\n@Pipe({ name: \"safeHtml\" })\nexport class SafeHtmlPipe implements PipeTransform {\n  constructor(private domSanitizer: DomSanitizer) {}\n  transform(url: string): SafeUrl {\n    return this.domSanitizer.bypassSecurityTrustHtml(url);\n  }\n}","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { QuestionHtmlModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n@Component({\n  selector: \"sv-ng-html-question\",\n  templateUrl: \"./html.component.html\",\n  styleUrls: []\n})\nexport class HtmlQuestionComponent extends QuestionAngular<QuestionHtmlModel> {\n  override onModelChanged(): void {\n    super.onModelChanged();\n    this.model.locHtml.onChanged = () => {\n      this.detectChanges();\n    };\n  }\n  override ngOnDestroy(): void {\n    this.model.locHtml.onChanged = () => {};\n    super.ngOnDestroy();\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"html-question\", HtmlQuestionComponent);","<div [class]=\"model.renderCssRoot\" [innerHTML]=\"model.locHtml.renderedHtml | safeHtml\" #contentElement></div>","import { Component, Input } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { ItemValue, QuestionRadiogroupModel, QuestionSelectBase } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"['sv-ng-selectbase']\",\n  templateUrl: \"./selectbase.component.html\"\n})\nexport class SelectBaseComponent<T extends QuestionSelectBase> extends QuestionAngular<T> {\n  //#todo temp fix (CanClearButton should be placed in selectbase so it could work with imagepicker)\n  @Input() override model!: any;\n\n  public inputType: string = \"checkbox\";\n  public showLegend: boolean = true;\n\n  public getDefaultComponentName(): string {\n    return \"sv-ng-selectbase-item\";\n  }\n  public trackItemBy(_: number, item: ItemValue): any {\n    return item.value;\n  }\n  public trackColumnBy(index: number): any {\n    return index;\n  }\n\n  public getItemValueComponentName(item: ItemValue): string {\n    return this.model.getItemValueWrapperComponentName(item) || this.getDefaultComponentName();\n  }\n  public getItemValueComponentData(item: ItemValue): any {\n    const itemComponentProperty = this.model.getPropertyByName(\"itemComponent\");\n    const isDefaultItemComponent = itemComponentProperty.isDefaultValue(this.model.itemComponent);\n    const itemComponentName = isDefaultItemComponent ? this.getDefaultComponentName() : this.model.itemComponent;\n\n    return {\n      componentName: itemComponentName,\n      componentData: {\n        question: this.model,\n        model: item,\n        inputType: this.inputType,\n        data: this.model.getItemValueWrapperComponentData(item)\n      }\n    };\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"selectbase\", SelectBaseComponent);","<fieldset [class]=\"model.getSelectBaseRootCss()\" role=\"presentation\" #contentElement>\n  <legend *ngIf=\"showLegend\" role=\"presentation\" class=\"sv-hidden\"></legend>\n  <ng-container *ngIf=\"model.hasHeadItems\">\n    <ng-container *ngFor=\"let item of model.headItems; trackBy: trackItemBy\">\n      <ng-template [component]=\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\"></ng-template>\n    </ng-container>\n  </ng-container>\n  <ng-container *ngIf=\"!model.hasColumns && !model.blockedRow\">\n    <ng-container *ngFor=\"let item of model.bodyItems; trackBy: trackItemBy\" >\n      <ng-template [component]=\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\"></ng-template>\n    </ng-container>\n  </ng-container>\n  <div [class]=\"model.cssClasses.rootRow\" *ngIf=\"!model.hasColumns && model.blockedRow\">\n    <ng-container *ngFor=\"let item of model.dataChoices; trackBy: trackItemBy\">\n      <ng-template [component]=\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\"></ng-template>\n    </ng-container>\n  </div>\n  <ng-container *ngIf=\"model.hasColumns\">\n    <div [class]=\"model.cssClasses.rootMultiColumn\">\n      <div [class]=\"model.getColumnClass()\" *ngFor=\"let column of model.columns; trackBy: trackColumnBy\" role=\"presentation\">\n        <ng-container *ngFor=\"let item of column; trackBy: trackItemBy\">\n          <ng-template [component]=\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\"></ng-template>\n        </ng-container>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"model.hasFootItems\">\n    <ng-container *ngFor=\"let item of model.footItems; trackBy: trackItemBy\">\n      <ng-template [component]=\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\"></ng-template>\n    </ng-container>\n  </ng-container>\n  <div *ngIf=\"model.isOtherSelected\" [class]=\"model.getCommentAreaCss(true)\" [question]=\"model\" sv-ng-comment-other></div>\n  <div *ngIf=\"model.showClearButtonInContent\">\n    <input\n      type=\"button\"\n      (click)=\"model.clearValue()\"\n      [value]=\"model.clearButtonCaption\"\n      [class]=\"model.cssClasses.clearButton\"\n    />\n  </div>\n</fieldset>","import { Component } from \"@angular/core\";\nimport { QuestionRadiogroupModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\nimport { SelectBaseComponent } from \"./selectbase.component\";\n\n@Component({\n  selector: \"sv-ng-radiogroup-question\",\n  templateUrl: \"./selectbase.component.html\"\n})\nexport class RadiogroupComponent extends SelectBaseComponent<QuestionRadiogroupModel> {\n  override ngOnInit(): void {\n    this.inputType = \"radio\";\n    this.showLegend = false;\n    super.ngOnInit();\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"radiogroup-question\", RadiogroupComponent);","import { Component, Input } from \"@angular/core\";\n@Component({\n  selector: \"sv-ng-radiogroup-item, '[sv-ng-radiogroup-item]'\",\n  templateUrl: \"./radiogroup-item.component.html\",\n  styleUrls: [\"./radiogroup-item.component.scss\"]\n})\nexport class RadiogroupItemComponent {\n  @Input() question: any;\n  @Input() model: any;\n  constructor() {\n  }\n}\n","<input type=\"radio\" [name]=\"question.questionName\" [id]=\"question.getItemId(model)\" [attr.aria-describedby]=\"question.ariaDescribedBy\" [class]=\"question.cssClasses.itemControl\"\n  [disabled]=\"!question.getItemEnabled(model)\" [(ngModel)]=\"question.renderedValue\" [attr.value]=\"model.value\" [value]=\"model.value\"\n/>\n<ng-content></ng-content>","import { Component } from \"@angular/core\";\nimport { QuestionCheckboxModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\nimport { SelectBaseComponent } from \"./selectbase.component\";\n\n@Component({\n  selector: \"sv-ng-checkbox-question\",\n  templateUrl: \"./selectbase.component.html\"\n})\nexport class CheckboxComponent extends SelectBaseComponent<QuestionCheckboxModel> {}\n\nAngularComponentFactory.Instance.registerComponent(\"checkbox-question\", CheckboxComponent);","import { Component, Input } from \"@angular/core\";\nimport { ItemValue, QuestionCheckboxModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-checkbox-item, '[sv-ng-checkbox-item]'\",\n  templateUrl: \"./checkbox-item.component.html\",\n  styleUrls: [\"./checkbox-item.component.scss\"]\n  })\nexport class CheckboxItemComponent {\n  @Input() question!: QuestionCheckboxModel;\n  @Input() model!: ItemValue;\n  constructor() {\n  }\n  onChange(event: any) {\n    this.question[\"clickItemHandler\"](this.model, event.target.checked);\n  }\n  onSelectAllChange(event: any) {\n    this.question.toggleSelectAll();\n  }\n}\n","<input *ngIf=\"model == question.selectAllItem\" role=\"option\" type=\"checkbox\" [name]=\"question.name\" [id]=\"question.getItemId(model)\" [attr.aria-describedby]=\"question.ariaDescribedBy\" [class]=\"question.cssClasses.itemControl\"\n  [disabled]=\"!question.getItemEnabled(model)\" [checked]=\"question.isAllSelected\" [value]=\"''\" (change)=\"onSelectAllChange($event)\"/>\n<input *ngIf=\"model != question.selectAllItem\" role=\"option\" type=\"checkbox\" [name]=\"question.name\" [id]=\"question.getItemId(model)\" [attr.aria-describedby]=\"question.ariaDescribedBy\" [class]=\"question.cssClasses.itemControl\"\n  [disabled]=\"!question.getItemEnabled(model)\" [checked]=\"question.isItemSelected(model)\" [value]=\"model.value\" (change)=\"onChange($event)\"/>\n<ng-content></ng-content>","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { AngularComponentFactory } from \"../component-factory\";\nimport { QuestionDropdownModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-dropdown-question\",\n  templateUrl: \"./dropdown.component.html\"\n})\nexport class DropdownQuestionComponent extends QuestionAngular<QuestionDropdownModel> {\n}\n\nAngularComponentFactory.Instance.registerComponent(\"dropdown-question\", DropdownQuestionComponent);","<div [class]=\"model.renderCssRoot\" #contentElement>\n  <sv-ng-dropdown [model]=\"model\"></sv-ng-dropdown>\n  <div *ngIf=\"model.isOtherSelected\" [class]=\"model.getCommentAreaCss(true)\" [question]=\"model\" sv-ng-comment-other></div>\n</div>","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { AngularComponentFactory } from \"../component-factory\";\nimport { QuestionTagboxModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-tagbox-question\",\n  templateUrl: \"./tagbox.component.html\"\n})\nexport class TagboxQuestionComponent extends QuestionAngular<QuestionTagboxModel> {\n}\n\nAngularComponentFactory.Instance.registerComponent(\"tagbox-question\", TagboxQuestionComponent);","<div [class]=\"model.renderCssRoot\" #contentElement>\n  <sv-ng-tagbox [model]=\"model\"></sv-ng-tagbox>\n  <div *ngIf=\"model.isOtherSelected\" [class]=\"model.getCommentAreaCss(true)\" [question]=\"model\" sv-ng-comment-other></div>\n</div>","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { QuestionRatingModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-rating-question\",\n  templateUrl: \"./rating.component.html\"\n})\nexport class RatingQuestionComponent extends QuestionAngular<QuestionRatingModel> {\n  trackByFn(index: number): number {\n    return index;\n  }\n  public onClick(event: any) {\n    event.stopPropagation();\n    this.model.setValueFromClick(event.target.value);\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"rating-question\", RatingQuestionComponent);","  <div [class]=\"model.ratingRootCss\" #contentElement>\n      <fieldset role=\"radiogroup\">\n          <legend role=\"presentation\" class=\"sv-hidden\"></legend>\n          <span *ngIf=\"model.hasMinLabel\" [class]=\"model.cssClasses.minText\" [model]=\"model.locMinRateDescription\" sv-ng-string>\n          </span>\n          <ng-template *ngFor=\"let item of model.renderedRateItems; index as index; trackBy: trackByFn\" [component]=\"{ name: model.itemComponentName, data: {model: model, item: item, index: index }}\"></ng-template>\n          <span *ngIf=\"model.hasMaxLabel\" [class]=\"model.cssClasses.maxText\" [model]=\"model.locMaxRateDescription\" sv-ng-string></span>\n      </fieldset>\n  </div>\n","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { QuestionBooleanModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-boolean-question\",\n  templateUrl: \"./boolean.component.html\"\n})\nexport class BooleanQuestionComponent extends QuestionAngular<QuestionBooleanModel> {\n  onChange(event: any) {\n    this.model.booleanValue = event.target.value;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"boolean-question\", BooleanQuestionComponent);","<div [class]=\"model.cssClasses.root\" (keydown)=\"model.onKeyDownCore($event)\" #contentElement>\n    <label [class]=\"model.getItemCss()\">\n      <input\n        type=\"checkbox\"\n        [attr.name]=\"model.name\" [attr.id]=\"model.inputId\" [attr.aria-required]=\"model.ariaRequired\" [attr.aria-label]=\"model.ariaLabel\" [attr.aria-invalid]=\"model.ariaInvalid\" [attr.aria-describedby]=\"model.ariaDescribedBy\"\n        [class]=\"model.cssClasses.control\" [disabled]=\"model.isInputReadOnly\"  [indeterminate]=\"model.isIndeterminate\" [value]=\"model.booleanValue\" [(ngModel)]=\"model.booleanValue\" />\n      <span [class]=\"model.getLabelCss(false)\" (click)=\"model.onLabelClick($event, false)\" [model]=\"model.locLabelFalse\" sv-ng-string></span>\n      <div [class]=\"model.cssClasses.switch\" (click)=\"model.onSwitchClickModel($event)\">\n        <span [class]=\"model.cssClasses.slider\">\n            <span *ngIf=\"model.cssClasses.sliderText && model.isDeterminated\" [class]=\"model.cssClasses.sliderText\" [model]=\"model.getCheckedLabel()\" sv-ng-string></span>\n        </span>\n      </div>\n      <span [class]=\"model.getLabelCss(true)\" (click)=\"model.onLabelClick($event, true)\" [model]=\"model.locLabelTrue\"  sv-ng-string></span>\n    </label>\n</div>","import { AfterViewInit, Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"../base-angular\";\nimport { ImageItemValue, QuestionImagePickerModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n@Component({\n  selector: \"sv-ng-imagepicker-item\",\n  templateUrl: \"./imagepicker-item.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class ImagePickerItemComponent extends BaseAngular<ImageItemValue> implements AfterViewInit {\n  @Input() question!: QuestionImagePickerModel;\n  @Input() model!: ImageItemValue;\n  protected getModel(): ImageItemValue {\n    return this.model;\n  }\n  onChange(event: any) {\n    if (this.question.multiSelect) {\n      if (event.target.checked) {\n        this.question.value = this.question.value.concat(event.target.value);\n      } else {\n        var currValue = this.question.value;\n        currValue.splice(this.question.value.indexOf(event.target.value), 1);\n        this.question.value = currValue;\n      }\n    } else {\n      this.question.value = event.target.value;\n    }\n  }\n  ngAfterViewInit(): void {\n    this.model.locImageLink.onChanged = () => {\n      this.detectChanges();\n    };\n  }\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.model.locImageLink.onChanged = () => {};\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-ng-imagepicker-item\", ImagePickerItemComponent);","<ng-template #template>\n  <div [class]=\"question.getItemClass(model)\">\n    <label [class]=\"question.cssClasses.label\">\n        <input [type]=\"question.inputType\" [attr.name]=\"question.questionName\" [attr.value]=\"model.value\" [id]=\"question.getItemId(model)\" [attr.aria-required]=\"question.ariaRequired\" [attr.aria-label]=\"question.ariaLabel\" [attr.aria-invalid]=\"question.ariaInvalid\" [attr.aria-describedby]=\"question.ariaDescribedBy\"\n        (change)=\"onChange($event)\" [checked]=\"question.isItemSelected(model)\" [disabled]=\"!question.getItemEnabled(model)\" [class]=\"question.cssClasses.itemControl\"\n        />\n        <div [class]=\"question.cssClasses.itemDecorator\">\n            <div [class]=\"question.cssClasses.imageContainer\">\n              <span *ngIf=\"question.cssClasses.checkedItemDecorator\" [class]=\"question.cssClasses.checkedItemDecorator\">\n                <svg *ngIf=\"question.cssClasses.checkedItemSvgIconId\" [class]=\"question.cssClasses.checkedItemSvgIcon\" [iconName]=\"question.cssClasses.checkedItemSvgIconId\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n              </span>\n              <img *ngIf=\"model.locImageLink.renderedHtml && !model.contentNotLoaded && question.contentMode === 'image'\" [class]=\"question.cssClasses.image\" [attr.src]=\"model.locImageLink.renderedHtml\" [attr.width]=\"question.renderedImageWidth\" [attr.height]=\"question.renderedImageHeight\" [attr.alt]=\"model.locText.renderedHtml\"  [style.objectFit]=\"question.imageFit\" (load)=\"question.onContentLoaded(model, $event)\" (error)=\"model.onErrorHandler()\"/>\n              <video *ngIf=\"model.locImageLink.renderedHtml && !model.contentNotLoaded && question.contentMode === 'video'\" controls [class]=\"question.cssClasses.image\" [attr.src]=\"model.locImageLink.renderedHtml\" [attr.width]=\"question.renderedImageWidth\" [attr.height]=\"question.renderedImageHeight\" [style.objectFit]=\"question.imageFit\" (loadedmetadata)=\"question.onContentLoaded(model, $event)\" (error)=\"model.onErrorHandler()\"></video>\n              <div *ngIf=\"!model.locImageLink.renderedHtml || model.contentNotLoaded\" [class]=\"question.cssClasses.itemNoImage\" [style.width]=\"question.renderedImageWidth\" [style.height]=\"question.renderedImageHeight\" [style.objectFit]=\"question.imageFit\">\n                <svg *ngIf=\"question.cssClasses.itemNoImageSvgIconId\" [class]=\"question.cssClasses.itemNoImageSvgIcon\" [iconName]=\"question.cssClasses.itemNoImageSvgIconId\" [size]=\"48\" sv-ng-svg-icon></svg>\n              </div>\n            </div>\n            <span *ngIf=\"question.showLabel\" [class]=\"question.cssClasses.itemText\" [model]=\"model.locText\" sv-ng-string></span>\n        </div>\n    </label>\n  </div>\n</ng-template>","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { ImageItemValue, ItemValue, QuestionImagePickerModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-imagepicker-question\",\n  templateUrl: \"./imagepicker.component.html\"\n})\nexport class ImagePickerQuestionComponent extends QuestionAngular<QuestionImagePickerModel> {\n  public getItemValueComponentName(item: ItemValue): string {\n    return this.model.getItemValueWrapperComponentName(item) || \"sv-ng-imagepicker-item\";\n  }\n  public getItemValueComponentData(item: ItemValue): any {\n    return {\n      componentName: \"sv-ng-imagepicker-item\",\n      componentData: {\n        question: this.model,\n        model: item,\n        data: this.model.getItemValueWrapperComponentData(item)\n      }\n    };\n  }\n\n}\n\nAngularComponentFactory.Instance.registerComponent(\"imagepicker-question\", ImagePickerQuestionComponent);","  <fieldset [class]=\"model.getSelectBaseRootCss()\" #contentElement>\n      <legend [attr.aria-label]=\"model.locTitle.renderedHtml\" role=\"radio\"></legend>\n      <ng-container *ngIf=\"!model.hasColumns\">\n        <ng-container *ngFor=\"let item of model.visibleChoices\">\n          <ng-template [component]=\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\"></ng-template>\n        </ng-container>\n      </ng-container>\n      <ng-container *ngIf=\"model.hasColumns\">\n        <div *ngFor=\"let column of model.columns\" [class]=\"model.getColumnClass()\" role=\"presentation\">\n          <ng-container *ngFor=\"let item of column\">\n            <ng-template [component]=\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\"></ng-template>\n          </ng-container>\n        </div>\n      </ng-container>\n  </fieldset>","import { Component, Input, OnChanges } from \"@angular/core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { ButtonGroupItemModel, ItemValue, QuestionButtonGroupModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-button-group-item\",\n  templateUrl: \"./button-group-item.component.html\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\nexport class ButtonGroupItemComponent extends BaseAngular<ItemValue> implements OnChanges {\n  @Input() item!: ItemValue;\n  @Input() question!: QuestionButtonGroupModel;\n  @Input() index!: number;\n  public model!: ButtonGroupItemModel;\n  public ngOnChanges(): void {\n    this.model = new ButtonGroupItemModel(this.question, this.item, this.index);\n  }\n  protected getModel(): ItemValue {\n    return this.item;\n  }\n}","<ng-template #template>\n  <label role=\"radio\" [class]=\"model.css.label\" [attr.title]=\"model.caption.renderedHtml\">\n    <input type=\"radio\"\n      [attr.name]=\"model.name\" [attr.id]=\"model.id\" [attr.aria-required]=\"model.isRequired\" [attr.aria-label]=\"model.caption.renderedHtml\" role=\"radio\" [attr.aria-invalid]=\"model.hasErrors\" [attr.aria-describedby]=\"model.describedBy\" [disabled]=\"model.readOnly\" [class]=\"model.css.control\" [(ngModel)]=\"question.renderedValue\" [attr.value]=\"model.value\" [value]=\"model.value\"/>\n    <div data-bind=\"css: model.css.decorator\">\n      <svg *ngIf=\"model.iconName\" [iconName]=\"model.iconName\" [size]=\"model.iconSize\" [class]=\"model.css.icon\" sv-ng-svg-icon></svg>\n      <span [class]=\"model.css.caption\" *ngIf=\"model.showCaption\" [attr.title]=\"model.caption.renderedHtml\" sv-ng-string [model]=\"model.caption\">\n      </span>\n    </div>\n  </label>\n</ng-template>","\nimport { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../../question\";\nimport { QuestionButtonGroupModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-buttongroup-question\",\n  templateUrl: \"./button-group.component.html\"\n})\nexport class ButtonGroupQuestionComponent extends QuestionAngular<QuestionButtonGroupModel> {\n}","<div role=\"group\" [class]=\"model.cssClasses.root\">\n  <sv-button-group-item *ngFor=\"let item of model.visibleChoices; index as index\" [question]=\"model\" [item]=\"item\" [index]=\"index\" ></sv-button-group-item>\n</div>\n","import { Component, Input, TemplateRef, ViewContainerRef, OnChanges, OnInit, SimpleChanges, ChangeDetectorRef } from \"@angular/core\";\nimport { SurveyModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"./component-factory\";\nimport { EmbeddedViewContentComponent } from \"./embedded-view-content.component\";\n\n@Component({\n  selector: \"sv-components-container, [sv-components-container], sv-ng-components-container\",\n  templateUrl: \"./components-container.component.html\",\n  styleUrls: [\"./hide-host.scss\"]\n})\nexport class ComponentsContainerComponent extends EmbeddedViewContentComponent {\n  @Input() survey!: SurveyModel;\n  @Input() container!: string;\n  @Input() needRenderWrapper?: boolean;\n  get components(): Array<any> {\n    return this.survey.getContainerContent(this.container as any);\n  }\n  get isNeedRenderWrapper(): boolean {\n    return this.needRenderWrapper === false ? false : true;\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"sv-components-container\", ComponentsContainerComponent);","<ng-template #template>\n  <ng-container *ngIf=\"isNeedRenderWrapper\">\n    <div *ngIf=\"components.length > 0\" class=\"sv-components-column\">\n      <ng-container *ngFor=\"let component of components\">\n        <ng-template [component]=\"{ name: component.component, data: { survey: survey, model: component.data } }\"></ng-template>\n      </ng-container>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"!isNeedRenderWrapper && components.length > 0\">\n    <ng-container *ngFor=\"let component of components\">\n      <ng-template [component]=\"{ name: component.component, data: { survey: survey, model: component.data } }\"></ng-template>\n    </ng-container>\n  </ng-container>\n</ng-template>","import { Directive, ElementRef, Input, SimpleChanges, OnChanges, OnDestroy } from \"@angular/core\";\nimport { doKey2ClickDown, doKey2ClickUp, doKey2ClickBlur, IAttachKey2clickOptions } from \"survey-core\";\n\n@Directive({\n  selector: \"[key2click]\"\n})\nexport class Key2ClickDirective implements OnChanges, OnDestroy {\n  static defaultOptions: IAttachKey2clickOptions = { processEsc: true, disableTabStop: false };\n  private isSubscribed = false;\n\n  options?: IAttachKey2clickOptions = Key2ClickDirective.defaultOptions;\n  @Input() key2click?: IAttachKey2clickOptions;\n\n  private onkeydown (evt: any) {\n    doKey2ClickDown(evt, this.options);\n  }\n  private onkeyup = (evt: any) => {\n    evt.preventDefault();\n    evt.stopPropagation();\n    doKey2ClickUp(evt, this.options);\n    return false;\n  }\n  private blur (evt: any) {\n    doKey2ClickBlur(evt);\n  }\n  constructor(private el: ElementRef) {\n    this.subscribeEventListeners();\n  }\n\n  get element() {\n    return this.el.nativeElement;\n  }\n\n  subscribeEventListeners() {\n    if(this.isSubscribed) return;\n\n    this.element.tabIndex = 0;\n    this.element.addEventListener(\"keyup\", this.onkeyup);\n    this.element.addEventListener(\"keydown\", this.onkeydown);\n    this.element.addEventListener(\"blur\", this.blur);\n\n    this.isSubscribed = true;\n  }\n  unsubscribeEventListeners() {\n    if(!this.isSubscribed) return;\n\n    this.element.tabIndex = -1;\n    this.element.removeEventListener(\"keyup\", this.onkeyup);\n    this.element.removeEventListener(\"keydown\", this.onkeydown);\n    this.element.removeEventListener(\"blur\", this.blur);\n\n    this.isSubscribed = false;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const curValue = changes[\"key2click\"].currentValue;\n    if(curValue.disableTabStop) {\n      this.unsubscribeEventListeners();\n    } else {\n      this.subscribeEventListeners();\n    }\n    this.options = Object.assign({}, Key2ClickDirective.defaultOptions, curValue);\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribeEventListeners();\n  }\n}","import { Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-action-bar-item\",\n  templateUrl: \"./action-bar-item.component.html\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\nexport class ActionBarItemComponent extends BaseAngular {\n  @Input() model: any;\n\n  getModel() {\n    return this.model;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-action-bar-item\", ActionBarItemComponent);","<ng-template #template>\n  <button type=\"button\" (click)=\"model.action()\" [key2click]=\"{ processEsc: false }\" [class]=\"model.getActionBarItemCss()\" [attr.title]=\"model.tooltip || model.title\" [attr.aria-checked]=\"model.ariaChecked\" [attr.aria-expanded]=\"model.ariaExpanded\" [attr.role]=\"model.ariaRole\" [disabled]=\"model.disabled\" \n    data-bind=\"key2click: { processEsc: false }\">\n    <svg *ngIf=\"model.iconName\" [iconName]=\"model.iconName\" [size]=\"model.iconSize\" [title]=\"model.tooltip || model.title\" [class]=\"model.cssClasses.itemIcon\" sv-ng-svg-icon></svg>\n    <span *ngIf=\"model.hasTitle\" [class]=\"model.getActionBarItemTitleCss()\">{{ model.title }}</span>\n  </button>\n<ng-template>","import { Component, Input } from \"@angular/core\";\nimport { ActionDropdownViewModel } from \"survey-core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-action-bar-item-dropdown\",\n  templateUrl: \"./action-bar-item-dropdown.component.html\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\nexport class ActionBarItemDropdownComponent extends BaseAngular {\n  @Input() model: any\n  protected viewModel!: ActionDropdownViewModel;\n\n  protected getModel() {\n    return this.model;\n  }\n  override ngOnInit(): void {\n    super.ngOnInit();\n    this.viewModel = new ActionDropdownViewModel(this.model);\n  }\n  override ngOnDestroy(): void {\n    this.viewModel.dispose();\n    super.ngOnDestroy();\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-action-bar-item-dropdown\", ActionBarItemDropdownComponent);","<ng-template #template>\n    <button type=\"button\" (click)=\"model.action()\" [key2click]=\"{ processEsc: false }\" [class]=\"model.getActionBarItemCss()\" [title]=\"model.tooltip || model.title\" [disabled]=\"model.disabled\" [attr.role]=\"model.ariaRole\">\n        <svg *ngIf=\"model.iconName\" [iconName]=\"model.iconName\" [size]=\"model.iconSize\" [title]=\"model.tooltip || model.title\" [class]=\"model.cssClasses.itemIcon\" sv-ng-svg-icon></svg>\n        <span *ngIf=\"model.hasTitle\" [class]=\"model.getActionBarItemTitleCss()\">{{ model.title }}</span>\n        <sv-ng-popup [popupModel]=\"model.popupModel\"></sv-ng-popup>\n    </button>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"../base-angular\";\nimport { ItemValue } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"['sv-ng-selectbase-item'], sv-ng-selebase-item\",\n  templateUrl: \"./selectbase-item.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class SelectBaseItemComponent extends BaseAngular<ItemValue> {\n  @Input() question!: any;\n  @Input() model!: ItemValue | any;\n  @Input() inputType!: string;\n  @Input() showLabel: boolean = true;\n  protected getModel(): ItemValue {\n    return this.model;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-ng-selectbase-item\", SelectBaseItemComponent);","<ng-template #template>\n  <div role=\"presentation\" [class]=\"question.getItemClass(model)\">\n    <ng-container [ngSwitch]=\"inputType\">\n      <label *ngSwitchCase=\"'checkbox'\" [class]=\"question.getLabelClass(model)\"  [attr.aria-label]=\"question.getAriaItemLabel(model)\" [model]=\"model\" [question]=\"question\" sv-ng-checkbox-item>\n        <ng-container *ngTemplateOutlet=\"itemDecorator\"></ng-container>\n      </label>\n      <label *ngSwitchCase=\"'radio'\" [class]=\"question.getLabelClass(model)\"  [attr.aria-label]=\"question.getAriaItemLabel(model)\" [model]=\"model\" [question]=\"question\" sv-ng-radiogroup-item>\n        <ng-container *ngTemplateOutlet=\"itemDecorator\"></ng-container>\n      </label>\n    </ng-container>\n    <ng-template #itemDecorator>\n      <span *ngIf=\"question.cssClasses.materialDecorator\" [class]=\"question.cssClasses.materialDecorator\">\n        <svg *ngIf=\"question.itemSvgIcon\" [class]=\"question.cssClasses.itemDecorator\">\n          <use [attr.xlink:href]=\"question.itemSvgIcon\"></use>\n        </svg>\n      </span>\n      <span [class]=\"question.getControlLabelClass(model)\" *ngIf=\"!model.hideCaption\">\n        <sv-ng-string [model]=\"model.locText\"></sv-ng-string>\n      </span> \n    </ng-template>\n  </div>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { EmbeddedViewContentComponent } from \"../../embedded-view-content.component\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-skeleton\",\n  templateUrl: \"./skeleton.component.html\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\nexport class SkeletonComponent extends EmbeddedViewContentComponent {\n  @Input() element: any;\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-skeleton\", SkeletonComponent);","<ng-template #template>\n  <div class=\"sv-skeleton-element\" [id]=\"element.id\"></div>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { Base, SurveyTimerModel } from \"survey-core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component(\n  {\n    selector: \"sv-timerpanel\",\n    templateUrl: \"./timer-panel.component.html\",\n  }\n)\n\nexport class TimerPanelComponent extends BaseAngular<SurveyTimerModel> {\n  @Input() model!: SurveyTimerModel;\n  private readonly circleLengthValue = 440;\n\n  protected getStateElement(): Base {\n    return this.model;\n  }\n  protected getModel(): SurveyTimerModel {\n    return this.model;\n  }\n  public get circleLength(): number {\n    return this.circleLengthValue;\n  }\n  public get progress(): number {\n    return -this.model.progress * this.circleLength;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-timerpanel\", TimerPanelComponent);","<div *ngIf=\"model.isRunning && model.showTimerAsClock\" [class]=\"model.rootCss\">\n    <svg *ngIf=\"model.showProgress\" [class]=\"model.getProgressCss()\" [style.stroke-dasharray]=\"circleLength\" [style.stroke-dashoffset]=\"progress\" [size]=\"'auto'\" [iconName]=\"'icon-timercircle'\" sv-ng-svg-icon></svg>\n    <div [class]=\"model.textContainerCss\">\n        <span [class]=\"model.majorTextCss\">{{ model.clockMajorText }}</span>\n        <span *ngIf=\"model.clockMinorText\" [class]=\"model.minorTextCss\">{{ model.clockMinorText }}</span>\n    </div>\n</div>\n<div *ngIf=\"model.isRunning && !model.showTimerAsClock\" [class]='model.survey.getCss().timerRoot'>{{model.text}}</div>","import { AfterViewInit, Component, Input } from \"@angular/core\";\nimport { ListModel, Action, IAction } from \"survey-core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-ng-list-item, '[sv-ng-list-item]'\",\n  templateUrl: \"./list-item.component.html\",\n  styleUrls: [\"../../hide-host.scss\"],\n})\n\nexport class ListItemComponent extends BaseAngular implements AfterViewInit {\n  @Input() element: any;\n  @Input() model!: Action;\n  @Input() listModel!: ListModel;\n\n  get elementId() {\n    return (this.model as IAction)?.elementId;\n  }\n\n  get ariaSelected(): boolean | string {\n    return this.listModel.isItemSelected(this.model) || \"\";\n  }\n  get class(): string {\n    return this.listModel.getItemClass(this.model);\n  }\n  get paddingLeft(): string {\n    return this.listModel.getItemIndent(this.model);\n  }\n  click(event: any): void {\n    this.listModel.onItemClick(this.model);\n    event.stopPropagation();\n  }\n  pointerdown(event: any): void {\n    this.listModel.onPointerDown(event, this.model);\n  }\n\n  getModel() {\n    return this.model;\n  }\n\n  ngAfterViewInit(): void {\n    this.listModel.onLastItemRended(this.model);\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-list-item\", ListItemComponent);","<ng-template #template>\n  <li role=\"option\" [key2click] [visible]=\"listModel.isItemVisible(model)\" [class]=\"class\" [attr.id]=\"elementId\" [attr.aria-selected]=\"ariaSelected ? 'true' : 'false'\" (click)=\"click($event)\" (pointerdown)=\"pointerdown($event)\">\n    <ng-container *ngIf=\"model.needSeparator\">\n    <div [class]=\"listModel.cssClasses.itemSeparator\"></div>\n    </ng-container>\n    <div [class]=\"listModel.cssClasses.itemBody\" [style.paddingInlineStart]=\"paddingLeft\">\n    <ng-container *ngIf=\"!model.component\">\n      <svg *ngIf=\"model.iconName\" [class]=\"listModel.cssClasses.itemIcon\" [iconName]=\"model.iconName\" [size]=\"24\"\n        sv-ng-svg-icon></svg>\n      <sv-ng-string [model]=\"model.locTitle\"></sv-ng-string>\n    </ng-container>\n    <ng-container *ngIf=\"model.component\">\n      <ng-template [component]=\"{ name: model.component, data: { model: model } }\"></ng-template>\n    </ng-container>\n    </div>\n  </li>\n</ng-template>","import { AfterViewInit, Component, ElementRef, Input, ViewChild } from \"@angular/core\";\nimport { Action } from \"survey-core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-ng-list, '[sv-ng-list]'\",\n  templateUrl: \"./list.component.html\",\n  styleUrls: [\"../../hide-host.scss\"]\n})\nexport class ListComponent extends BaseAngular implements AfterViewInit {\n  @Input() model: any;\n  @ViewChild(\"listContainerElement\") listContainerElement!: ElementRef<HTMLDivElement>;\n\n  trackItemBy = (_: any, item: Action) => {\n    return item.id;\n  }\n  getModel() {\n    return this.model;\n  }\n  onGoToItems(event: Event): void {\n    this.model.goToItems(event);\n  }\n  onMouseDown(event: Event): void {\n    event.preventDefault();\n  }\n  onKeyDown(event: Event): void {\n    this.model.onKeyDown(event);\n  }\n  onMouseMove(event: Event): void {\n    this.model.onMouseMove(event);\n  }\n  protected override getPropertiesToUpdateSync(): string[] {\n    return [\"renderElements\"];\n  }\n  ngAfterViewInit(): void {\n    if(!!this.listContainerElement?.nativeElement) {\n      this.model.initListContainerHtmlElement(this.listContainerElement.nativeElement);\n    }\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-list\", ListComponent);","<ng-template #template>\n    <div [class]=\"model.cssClasses.root\" #listContainerElement>\n        <div *ngIf=\"model.showFilter\" [class]=\"model.cssClasses.filter\">\n            <div [class]=\"model.cssClasses.filterIcon\">\n                <svg [iconName]=\"'icon-search'\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n            </div>\n            <input type=\"text\" [class]=\"model.cssClasses.filterInput\" [(ngModel)]=\"model.filterString\"\n                [attr.aria-label]=\"model.filterStringPlaceholder || ''\"\n                [attr.placeholder]=\"model.filterStringPlaceholder || ''\" \n                (keyup)=\"onGoToItems($event)\" />\n                <button *ngIf=\"model.showSearchClearButton && !!model.filterString\" (click)=\"model.onClickSearchClearButton($event)\" [class]=\"model.cssClasses.searchClearButtonIcon\">\n                    <svg [iconName]=\"'icon-searchclear'\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n                </button>\n        </div>\n        <div [class]=\"model.cssClasses.emptyContainer\" [visible]=\"model.isEmpty\">\n            <div [class]=\"model.cssClasses.emptyText\" [attr.aria-label]=\"model.emptyMessage || ''\">{{ model.emptyMessage }}</div>\n        </div>\n        <ul *ngIf=\"model.renderElements\" [class]=\"model.cssClasses.itemsContainer\" role=\"listbox\" [attr.id]=\"model.elementId\" [visible]=\"!model.isEmpty\" (mousedown)=\"onMouseDown($event)\" (keydown)=\"onKeyDown($event)\" (mousemove)=\"onMouseMove($event)\">\n            <sv-ng-list-item *ngFor=\"let item of model.renderedActions; trackBy: trackItemBy\" [listModel]=\"model\" [model]=\"item\"></sv-ng-list-item>\n            <!--ko foreach: model.renderedActions -->\n            <!-- ko component: { name: 'sv-list-item', params: { item: $data, model: $parent.model } } -->\n            <!-- /ko -->\n            <!-- /ko -->\n        </ul>\n    </div>\n</ng-template>","import { AfterViewInit, Component, Input } from \"@angular/core\";\nimport { ListModel, Action, QuestionRatingModel, RenderedRatingItem } from \"survey-core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-ng-rating-item\",\n  templateUrl: \"./rating-item.component.html\",\n  styleUrls: [\"../../hide-host.scss\"],\n})\n\nexport class RatingItemComponent extends BaseAngular {\n  @Input() element: any;\n  @Input() model!: QuestionRatingModel;\n  @Input() item!: RenderedRatingItem;\n  @Input() index!: number;\n\n  onClick(event: any): void {\n    this.model.setValueFromClick(event.target.value);\n    event.stopPropagation();\n  }\n\n  getModel() {\n    return this.item;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-rating-item\", RatingItemComponent);","<ng-template #template>\n  <label [class]=\"model.getItemClassByText(item.itemValue, item.text)\" >\n    <input type=\"radio\"\n      class=\"sv-visuallyhidden\"\n      [attr.name]=\"model.name\" [attr.id]=\"model.getInputId(index)\" [value]=\"item.value\" [attr.aria-required]=\"model.ariaRequired\" [attr.aria-label]=\"model.ariaLabel\" [attr.aria-invalid]=\"model.ariaInvalid\" [attr.aria-describedby]=\"model.ariaDescribedBy\"\n      [disabled]=\"model.isInputReadOnly\" [checked]=\"model.value === item.value\" (click)=\"onClick($event)\"\n      />\n      <span [class]=\"model.cssClasses.itemText\" [model]=\"item.locText\" sv-ng-string></span>\n  </label>\n</ng-template>","import { AfterViewInit, Component, Input } from \"@angular/core\";\nimport { ListModel, Action, QuestionRatingModel, RenderedRatingItem } from \"survey-core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-ng-rating-item-star\",\n  templateUrl: \"./rating-item-star.component.html\",\n  styleUrls: [\"../../hide-host.scss\"],\n})\n\nexport class RatingItemStarComponent extends BaseAngular<RenderedRatingItem> {\n  @Input() element: any;\n  @Input() model!: QuestionRatingModel;\n  @Input() item!: RenderedRatingItem;\n  @Input() index!: number;\n\n  onClick(event: any): void {\n    this.model.setValueFromClick(event.target.value);\n    event.stopPropagation();\n  }\n\n  getModel() {\n    return this.item;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-rating-item-star\", RatingItemStarComponent);","<ng-template #template>\n  <label [class]=\"model.getItemClass(item.itemValue, item.highlight)\" (mouseover)=\"model.onItemMouseIn(item)\" (mouseout)=\"model.onItemMouseOut(item)\">\n    <input type=\"radio\"\n      class=\"sv-visuallyhidden\"\n      [attr.name]=\"model.name\" [attr.id]=\"model.getInputId(index)\" [value]=\"item.value\" [attr.aria-required]=\"model.ariaRequired\" [attr.aria-label]=\"model.ariaLabel\" [attr.aria-invalid]=\"model.ariaInvalid\" [attr.aria-describedby]=\"model.ariaDescribedBy\"\n      [disabled]=\"model.isInputReadOnly\" [checked]=\"model.value === item.value\" (click)=\"onClick($event)\"\n      />\n      <svg [iconName]=\"'icon-rating-star'\" [size]=\"'auto'\" [title]=\"item.text\" [class]=\"'sv-star'\" sv-ng-svg-icon></svg>\n      <svg [iconName]=\"'icon-rating-star-2'\" [size]=\"'auto'\" [title]=\"item.text\" [class]=\"'sv-star-2'\" sv-ng-svg-icon></svg>\n  </label>\n</ng-template>","import { AfterViewInit, Component, Input } from \"@angular/core\";\nimport { ListModel, Action, QuestionRatingModel, RenderedRatingItem } from \"survey-core\";\nimport { BaseAngular } from \"../../base-angular\";\nimport { AngularComponentFactory } from \"../../component-factory\";\n\n@Component({\n  selector: \"sv-ng-rating-item-smiley\",\n  templateUrl: \"./rating-item-smiley.component.html\",\n  styleUrls: [\"../../hide-host.scss\"],\n})\n\nexport class RatingItemSmileyComponent extends BaseAngular<RenderedRatingItem> {\n  @Input() element: any;\n  @Input() model!: QuestionRatingModel;\n  @Input() item!: RenderedRatingItem;\n  @Input() index!: number;\n\n  onClick(event: any): void {\n    this.model.setValueFromClick(event.target.value);\n    event.stopPropagation();\n  }\n\n  getModel() {\n    return this.item;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-rating-item-smiley\", RatingItemSmileyComponent);","<ng-template #template>\n  <label [class]=\"model.getItemClass(item.itemValue, item.highlight)\" (mouseover)=\"model.onItemMouseIn(item)\" (mouseout)=\"model.onItemMouseOut(item)\">\n    <input type=\"radio\"\n      class=\"sv-visuallyhidden\"\n      [attr.name]=\"model.name\" [attr.id]=\"model.getInputId(index)\" [value]=\"item.value\" [attr.aria-required]=\"model.ariaRequired\" [attr.aria-label]=\"model.ariaLabel\" [attr.aria-invalid]=\"model.ariaInvalid\" [attr.aria-describedby]=\"model.ariaDescribedBy\"\n      [disabled]=\"model.isInputReadOnly\" [checked]=\"model.value === item.value\" (click)=\"onClick($event)\"\n      />\n      <svg [iconName]=\"model.getItemSmileyIconName(item.itemValue)\" [size]=\"'auto'\" [title]=\"item.text\" sv-ng-svg-icon></svg>\n  </label>\n</ng-template>","\nimport { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../../component-factory\";\nimport { RendererFactory } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-rating-dropdown-question\",\n  templateUrl: \"./rating-dropdown.component.html\"\n})\nexport class RatingDropdownComponent {\n  @Input() model: any;\n}\n\nAngularComponentFactory.Instance.registerComponent(\"rating-dropdown-question\", RatingDropdownComponent);\nRendererFactory.Instance.registerRenderer(\n  \"rating\",\n  \"dropdown\",\n  \"rating-dropdown-question\"\n);\n","<div [class]=\"model.cssClasses.rootDropdown\">\n    <sv-ng-dropdown [model]=\"model\"></sv-ng-dropdown>\n</div>","\nimport { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../../component-factory\";\nimport { RendererFactory } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-boolean-checkbox-question\",\n  templateUrl: \"./boolean-checkbox.component.html\"\n})\nexport class BooleanCheckboxComponent {\n  @Input() model: any;\n}\n\nAngularComponentFactory.Instance.registerComponent(\"boolean-checkbox-question\", BooleanCheckboxComponent);\nRendererFactory.Instance.registerRenderer(\n  \"boolean\",\n  \"checkbox\",\n  \"boolean-checkbox-question\"\n);\n","<div [class]=\"model.cssClasses.rootCheckbox\">\n  <div [class]=\"model.getCheckboxItemCss()\">\n    <label [class]=\"model.cssClasses.checkboxLabel\">\n      <input\n        type=\"checkbox\"\n        [value]=\"model.booleanValue\" [class]=\"model.cssClasses.controlCheckbox\" \n        [attr.name]=\"model.name\" [id]=\"model.inputId\" [attr.aria-required]=\"model.ariaRequired\" [attr.aria-label]=\"model.ariaLabel\"\n        [attr.aria-invalid]=\"model.ariaInvalid\" [attr.aria-describedby]=\"model.ariaDescribedBy\" [(ngModel)]=\"model.booleanValue\" [value]=\"model.booleanValue\"\n        [disabled]=\"model.isInputReadOnly\" [indeterminate]=\"model.isIndeterminate\"\n      />\n      <span [class]=\"model.cssClasses.checkboxMaterialDecorator\">\n        <svg *ngIf=\"!!model.svgIcon\" [class]=\"model.cssClasses.checkboxItemDecorator\">\n          <use [attr.xlink:href]=\"model.svgIcon\"></use>\n        </svg>\n        <span class=\"check\"></span>\n      </span>\n      <span *ngIf=\"model.isLabelRendered\" [class]=\"model.cssClasses.checkboxControlLabel\" [id]=\"model.labelRenderedAriaID\">\n        <sv-ng-element-title-actions [element]=\"model\"></sv-ng-element-title-actions>\n      </span>\n    </label>\n    <div *ngIf=\"model.canRenderLabelDescription\" [class]=\"model.cssDescription\" [model]=\"model.locDescription\" sv-ng-string></div>\n  </div>\n</div>","import { Component, Input } from \"@angular/core\";\nimport { LocalizableString, QuestionBooleanModel } from \"survey-core\";\n@Component({\n  selector: \"sv-ng-boolean-radio-item\",\n  templateUrl: \"boolean-radio-item.component.html\",\n})\nexport class BooleanRadioItemComponent {\n  @Input() question!: QuestionBooleanModel;\n  @Input() value!: boolean;\n  @Input() locText!: LocalizableString;\n  constructor() {\n\n  }\n}\n","<div role=\"presentation\" [class]=\"question.getRadioItemClass(question.cssClasses, value)\">\n  <label [class]=\"question.cssClasses.radioLabel\">\n    <input\n      type=\"radio\"\n      [attr.name]=\"question.name\" [attr.aria-describedby]=\"question.ariaDescribedBy\" [value]=\"value\" [(ngModel)]=\"question.booleanValue\"\n      [disabled]=\"question.isInputReadOnly\" [class]=\"question.cssClasses.itemRadioControl || ''\"\n    />\n    <span *ngIf=\"question.cssClasses.materialRadioDecorator\" [class]=\"question.cssClasses.materialRadioDecorator\"></span>\n    <span [class]=\"question.cssClasses.radioControlLabel\" [model]=\"locText\" sv-ng-string>\n    </span>\n  </label>\n</div>\n","\nimport { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../../component-factory\";\nimport { QuestionBooleanModel, RendererFactory } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-boolean-radio-question\",\n  templateUrl: \"./boolean-radio.component.html\"\n})\nexport class BooleanRadioComponent {\n  @Input() model!: QuestionBooleanModel;\n}\n\nAngularComponentFactory.Instance.registerComponent(\"boolean-radio-question\", BooleanRadioComponent);\nRendererFactory.Instance.registerRenderer(\n  \"boolean\",\n  \"radio\",\n  \"boolean-radio-question\"\n);\n","<div [class]=\"model.cssClasses.rootRadio\">\n  <fieldset role=\"presentation\" [class]=\"model.cssClasses.radioFieldset\">\n    <sv-ng-boolean-radio-item  [value]=\"false\" [locText]=\"model.locLabelFalse\" [question]=\"model\" ></sv-ng-boolean-radio-item>\n    <sv-ng-boolean-radio-item  [value]=\"true\" [locText]=\"model.locLabelTrue\" [question]=\"model\" ></sv-ng-boolean-radio-item>\n  </fieldset>\n</div>\n","import { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../../component-factory\";\nimport { SurveyProgressModel } from \"survey-core\";\nimport { EmbeddedViewContentComponent } from \"../../../embedded-view-content.component\";\n\n@Component({\n  selector: \"sv-ng-progress-default\",\n  templateUrl: \"./progress.component.html\"\n})\nexport class ProgressDefaultComponent extends EmbeddedViewContentComponent {\n  @Input() model: any;\n  getProgressTextInBarCss(css: any): string {\n    return SurveyProgressModel.getProgressTextInBarCss(css);\n  }\n  getProgressTextUnderBarCss(css: any): string {\n    return SurveyProgressModel.getProgressTextUnderBarCss(css);\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"sv-progress-progress\", ProgressDefaultComponent);\nAngularComponentFactory.Instance.registerComponent(\"sv-progress-pages\", ProgressDefaultComponent);\nAngularComponentFactory.Instance.registerComponent(\"sv-progress-questions\", ProgressDefaultComponent);\nAngularComponentFactory.Instance.registerComponent(\"sv-progress-correctquestions\", ProgressDefaultComponent);\nAngularComponentFactory.Instance.registerComponent(\"sv-progress-requiredquestions\", ProgressDefaultComponent);","<ng-template #template>\n  <div [class]=\"model.getProgressCssClasses()\">\n    <div [class]=\"model.css.progressBar\" [style.width]=\"model.progressValue + '%'\"\n        role=\"progressbar\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n        <span [class]=\"getProgressTextInBarCss(model.css)\">\n          {{ model.progressText }}\n        </span>\n    </div>\n    <span [class]=\"getProgressTextUnderBarCss(model.css)\"> {{  model.progressText }} </span>\n  </div>\n</ng-template>","import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, Input, OnChanges, OnDestroy, OnInit, SimpleChanges, ViewChild } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../../component-factory\";\nimport { SurveyModel, SurveyProgressButtonsModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-progress-buttons\",\n  templateUrl: \"./progress.component.html\"\n})\nexport class ProgressButtonsComponent implements OnDestroy, AfterViewInit, OnChanges, OnInit {\n  @Input() model!: SurveyModel;\n  @ViewChild(\"progressButtonsListContainer\") progressButtonsListContainer!: ElementRef<HTMLDivElement>;\n  private progressButtonsModel!: SurveyProgressButtonsModel;\n  private hasScroller: boolean = false;\n  private updateScroller: any = undefined;\n  constructor(private changeDetectorRef: ChangeDetectorRef) {\n  }\n  private createProgressButtonsModel() {\n    this.progressButtonsModel = new SurveyProgressButtonsModel(this.model);\n  }\n  ngOnInit(): void {\n    this.createProgressButtonsModel();\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    this.createProgressButtonsModel();\n  }\n  public isListElementClickable(index: number): boolean {\n    return this.progressButtonsModel.isListElementClickable(index);\n  }\n  public getListElementCss(index: number): string {\n    return this.progressButtonsModel.getListElementCss(index);\n  }\n  public clickListElement(index: number): void {\n    this.progressButtonsModel.clickListElement(index);\n  }\n  public getScrollButtonCss(isLeftScroll: boolean): string {\n    return this.progressButtonsModel.getScrollButtonCss(this.hasScroller, isLeftScroll);\n  }\n  public clickScrollButton(\n    isLeftScroll: boolean\n  ): void {\n    if(this.progressButtonsListContainer) {\n      this.progressButtonsListContainer.nativeElement.scrollLeft += (isLeftScroll ? -1 : 1) * 70;\n    }\n  }\n  public ngAfterViewInit(): void {\n    this.progressButtonsModel = new SurveyProgressButtonsModel(this.model);\n    this.updateScroller = setInterval(() => {\n      if(!!this.progressButtonsListContainer?.nativeElement) {\n        const listContainerElement = this.progressButtonsListContainer.nativeElement;\n        this.hasScroller = listContainerElement.scrollWidth > listContainerElement.offsetWidth;\n        this.changeDetectorRef.detectChanges();\n      }\n    }, 100);\n  }\n  public ngOnDestroy(): void {\n    if (typeof this.updateScroller !== \"undefined\") {\n      clearInterval(this.updateScroller);\n      this.updateScroller = undefined;\n    }\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"sv-progress-buttons\", ProgressButtonsComponent);\n","<div [class]=\"model.css.progressButtonsContainerCenter\">\n  <div [class]=\"model.css.progressButtonsContainer\">\n    <div\n      [class]=\"getScrollButtonCss(true)\"\n      (click)=\"clickScrollButton(true)\"\n      role=\"button\"\n    ></div>\n    <div\n      [class]=\"model.css.progressButtonsListContainer\" #progressButtonsListContainer>\n      <ul [class]=\"model.css.progressButtonsList\">\n        <li\n          *ngFor=\"let page of model.visiblePages; index as index\"\n          [class]=\"getListElementCss(index)\"\n          (click)=\"isListElementClickable(index) ? clickListElement(index) : null\">\n          <div\n            [class]=\"model.css.progressButtonsPageTitle\"\n            [title]=\"page.locNavigationTitle.renderedHtml || page.name\"\n          >\n            {{ page.locNavigationTitle.renderedHtml || page.name }}\n          </div>\n          <div\n            [class]=\"model.css.progressButtonsPageDescription\"\n            [title]=\"page.locNavigationDescription.renderedHtml\"\n          >\n            {{ page.locNavigationDescription.renderedHtml }}\n          </div>\n        </li>\n      </ul>\n    </div>\n    <div\n      [class]=\"getScrollButtonCss(false)\"\n      (click)=\"clickScrollButton(false)\"\n      role=\"button\"\n    ></div>\n  </div>\n</div>","import { Component, Input, OnChanges, OnInit, SimpleChanges, ChangeDetectorRef } from \"@angular/core\";\nimport { EmbeddedViewContentComponent } from \"../../../embedded-view-content.component\";\nimport { createTOCListModel, getTocRootCss, ListModel, SurveyModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../../../component-factory\";\n\n@Component({\n  selector: \"sv-progress-toc, sv-ng-progress-toc\",\n  templateUrl: \"./progress.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class ProgressTocComponent extends EmbeddedViewContentComponent implements OnChanges, OnInit {\n  public listModel!: ListModel;\n  public containerCss = \"sv_progress-toc\";\n  @Input() model!: SurveyModel;\n  private createProgressTOCModel() {\n    this.containerCss = getTocRootCss(this.model);\n    this.listModel = createTOCListModel(this.model);\n  }\n  override ngOnInit(): void {\n    super.ngOnInit();\n    this.createProgressTOCModel();\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    this.createProgressTOCModel();\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"sv-progress-toc\", ProgressTocComponent);\n","<ng-template #template>\n  <div [class]=\"containerCss\">\n    <sv-ng-list [model]=\"listModel\"></sv-ng-list>\n  </div>\n</ng-template>","import { AfterViewInit, Component, ElementRef, Input, ViewChild } from \"@angular/core\";\nimport { PanelModel } from \"survey-core\";\nimport { BaseAngular } from \"./base-angular\";\nimport { AngularComponentFactory } from \"./component-factory\";\n@Component({\n  selector: \"sv-ng-panel, '[sv-ng-panel]'\",\n  templateUrl: \"./panel.component.html\",\n})\nexport class PanelComponent extends BaseAngular<PanelModel> implements AfterViewInit {\n  @Input() model!: PanelModel;\n  @ViewChild(\"panelContainer\", { static: false, read: ElementRef }) panelContainerRef!: ElementRef<HTMLDivElement>;\n  protected getModel(): PanelModel {\n    return this.model;\n  }\n  ngAfterViewInit(): void {\n    if(!!this.panelContainerRef?.nativeElement) {\n      this.model.survey?.afterRenderPanel(this.model, this.panelContainerRef.nativeElement);\n    }\n  }\n  trackRowBy = (_: any, row: any) => {\n    return row.id;\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"panel\", PanelComponent);","<ng-template #template>\n  <div *ngIf=\"!!model && model.isVisible\" [attr.id]=\"model.id\" [class]=\"model.getContainerCss()\" (focusin)=\"model.focusIn()\" #panelContainer>\n    <div *ngIf=\"model.hasDescription || model.hasTitle\" [element]=\"model\" sv-ng-element-header></div>\n    <!-- ko template: { name: 'survey-question-errors', data: $data } -->\n    <!-- /ko -->\n    <div *ngIf=\"!model.isCollapsed\" [style.paddingLeft]=\"model.innerPaddingLeft\" [class]=\"model.cssClasses.panel.content\" [attr.id]=\"model.contentId\">\n      <ng-container *ngFor=\"let row of model.rows; trackBy: trackRowBy\">\n        <ng-template [component]=\"{ name: $any(model.survey).getRowWrapperComponentName(row), data: { componentData: $any(model.survey).getRowWrapperComponentData(row) } }\">\n          <sv-ng-row [row]=\"row\"></sv-ng-row>\n        </ng-template>\n      </ng-container>\n      <sv-ng-action-bar [model]=\"model.getFooterToolbar()\"></sv-ng-action-bar>\n    </div>\n  </div>\n</ng-template>","import { Action } from \"survey-core\";\nimport { Base } from \"survey-core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { Component, Input } from \"@angular/core\";\n\n@Component({\n  templateUrl: \"./survey-nav-btn.component.html\",\n  selector: \"sv-ng-nav-btn\",\n  styles: [\":host { display: contents; }\"]\n})\nexport class SurveyNavigationButton {\n  @Input() public model!: Action;\n  getModel(): Action {\n    return this.model;\n  }\n  buttonMouseDown(): Base {\n    return this.model.data && this.model.data.mouseDown();\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-nav-btn\", SurveyNavigationButton);\n","<input *ngIf=\"model.visible\" type=\"button\" [value]=\"model.title\" [class]=\"model.innerCss\" (mousedown)=\"buttonMouseDown()\" (click)=\"model.action()\" [disabled]=\"model.disabled\" [attr.title]=\"model.getTooltip()\"/>","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { QuestionMatrixModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-matrix-question\",\n  templateUrl: \"./matrix.component.html\",\n  styleUrls: [\"../hide-host.scss\"]\n})\nexport class MatrixQuestionComponent extends QuestionAngular<QuestionMatrixModel> {\n  override ngOnInit() {\n    this.model.visibleRowsChangedCallback = () => {\n      this.detectChanges();\n    };\n    super.ngOnInit();\n  }\n  public onChange(row: any, column: any): void {\n    if (this.model.isInputReadOnly) return;\n    row.value = column.value;\n    this.detectChanges();\n  }\n  trackRowByFn(i: number, row: any): string {\n    return \"column-\" + row.name + \"-\" + i;\n  }\n  trackColumnByFn(i: number, column: any): string {\n    return \"column-\" + column.value + \"-\" + i;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"matrix-question\", MatrixQuestionComponent);","<ng-template #template>\n  <div [class]=\"model.cssClasses.tableWrapper\" #contentElement>\n    <fieldset>\n      <legend [attr.aria-label]=\"model.locTitle.renderedHtml\"></legend>\n      <table [class]=\"model.getTableCss()\">\n        <thead *ngIf=\"model.showHeader\">\n          <tr>\n            <td *ngIf=\"model.hasRows\"></td>\n            <th\n              *ngFor=\"let column of model.visibleColumns\" [style]=\"{ minWidth: model.columnMinWidth, width: model.columnMinWidth }\" [class]=\"model.cssClasses.headerCell\">\n              <ng-template [component]=\"{ name: model.getColumnHeaderWrapperComponentName(column), data: { componentData: model.getColumnHeaderWrapperComponentData(column) } }\">\n                <sv-ng-string [model]=\"column.locText\"></sv-ng-string>\n              </ng-template>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let row of model.visibleRows; trackBy: trackRowByFn \" [class]=\"row.rowClasses || undefined\">\n           <td [class]=\"model.cssClasses.rowTextCell\" [style]=\"{ minWidth: model.rowTitleWidth, width: model.rowTitleWidth }\" *ngIf=\"model.hasRows\">\n              <ng-template [component]=\"{ name: model.getRowHeaderWrapperComponentName($any(row)), data: { componentData: model.getRowHeaderWrapperComponentData($any(row)) } }\">\n                <sv-ng-string [model]=\"row.locText\"></sv-ng-string>\n              </ng-template>\n            </td>\n            <ng-container *ngIf=\"model.hasCellText\">\n              <td *ngFor=\"let column of model.visibleColumns\"\n                [class]=\"model.getItemClass(row, column)\"\n                (click)=\"onChange(row, column)\" [model]=\"model.getCellDisplayLocText(row.name, column)\" sv-ng-string>\n              </td>\n            </ng-container>\n            <ng-container *ngIf=\"!model.hasCellText\">\n              <td\n              *ngFor=\"let column of model.visibleColumns; index as columnIndex; trackBy: trackColumnByFn\"\n              [attr.data-responsive-title]=\"column.locText.renderedHtml\"\n              [class]=\"model.cssClasses.cell\">\n                <label [class]=\"model.getItemClass(row, column)\">\n                  <input\n                    type=\"radio\"\n                    [class]=\"model.cssClasses.itemValue\"\n                    [name]=\"row.fullName\"\n                    [value]=\"column.value\"\n                    [checked]=\"row.value === column.value\"\n                    [disabled]=\"model.isInputReadOnly\"\n                    [attr.id]=\"model.inputId + '_' + row.name + '_' + columnIndex\"\n                    (change)=\"onChange(row, column)\"\n                    [attr.aria-required]=\"model.ariaRequired\"\n                    [attr.aria-label]=\"column.locText.renderedHtml\"\n                    [attr.aria-invalid]=\"model.ariaInvalid\"\n                    [attr.aria-describedby]=\"model.ariaDescribedBy\"\n                  />\n                  <span [class]=\"model.cssClasses.materialDecorator\">\n                    <svg *ngIf=\"model.itemSvgIcon\" [class]=\"model.cssClasses.itemDecorator\">\n                      <use [attr.xlink:href]=\"model.itemSvgIcon\"></use>\n                    </svg> \n                  </span>\n                  <span [visible]=\"model.isMobile\" [class]=\"model.cssClasses.cellResponsiveTitle\" [model]=\"column.locText\" sv-ng-string></span>\n                </label>\n              </td>\n            </ng-container>\n          </tr>\n        </tbody>\n      </table>\n    </fieldset>\n  </div>\n</ng-template>","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { QuestionFileModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n@Component({\n  selector: \"sv-ng-file-question\",\n  templateUrl: \"./file.component.html\",\n  styleUrls: []\n})\nexport class FileQuestionComponent extends QuestionAngular<QuestionFileModel> {\n  trackFilesFn: (index: number) => string = (index: number): string => {\n    return this.model.inputId + \"_\" + index;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"file-question\", FileQuestionComponent);","<div [class]=\"model.fileRootCss\" #contentElement>\n  <input\n    [class]=\"model.cssClasses.fileInput\"\n    *ngIf=\"!model.isReadOnly\"\n    tabindex=\"-1\"\n    type=\"file\"\n    [attr.id]=\"model.inputId\"\n    (change)=\"model.doChange($event)\"\n    [attr.aria-required]=\"model.ariaRequired\"\n    [attr.aria-label]=\"model.ariaLabel\"\n    [attr.aria-invalid]=\"model.ariaInvalid\"\n    [attr.aria-describedby]=\"model.ariaDescribedBy\"\n    [attr.multiple]=\"model.multipleRendered\"\n    [attr.title]=\"model.inputTitle\"\n    [attr.accept]=\"model.acceptedTypes\"\n  />\n  <input\n    *ngIf=\"model.isReadOnly\"\n    type=\"file\"\n    disabled\n    [class]=\"model.getReadOnlyFileCss()\"\n    [attr.id]=\"model.inputId\"\n    [attr.multiple]=\"model.multipleRendered\"\n    [attr.placeholder]=\"model.title\"\n    style=\"color: transparent\"\n  />\n  <div [class]=\"model.cssClasses.dragArea\"\n    (dragenter)=\"model.onDragEnter($event)\"\n    (drop)=\"model.onDrop($event)\"\n    (dragover)=\"model.onDragOver($event)\"\n    (dragleave)=\"model.onDragLeave($event)\">  \n    <div\n      [class]=\"model.getFileDecoratorCss()\"\n    >\n      <span [class]=\"model.cssClasses.dragAreaPlaceholder\">{{ model.dragAreaPlaceholder }}</span>\n      <div [class]=\"model.cssClasses.wrapper\">\n        <label\n          role=\"button\"\n          tabindex=\"0\"\n          [class]=\"model.getChooseFileCss()\"\n          [attr.for]=\"model.inputId\"\n          [attr.aria-label]=\"model.chooseButtonCaption\"\n          >\n          <span>{{ model.chooseButtonCaption }}</span>\n          <svg *ngIf=\"model.cssClasses.chooseFileIconId\" [title]=\"model.chooseButtonCaption\" [iconName]=\"model.cssClasses.chooseFileIconId\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n        </label>\n        <span\n          [class]=\"model.cssClasses.noFileChosen\"\n          *ngIf=\"model.isEmpty()\"\n          >{{ model.noFileChosenCaption }}</span\n        >\n      </div>\n    </div>\n    <button\n      type=\"button\"\n      *ngIf=\"model.showRemoveButton\"\n      [class]=\"model.cssClasses.removeButton\"\n      (click)=\"model.doClean($event)\"\n    >\n      <span>{{ model.clearButtonCaption }}</span>\n      <svg *ngIf=\"model.cssClasses.removeButtonIconId\" [iconName]=\"model.cssClasses.removeButtonIconId\" [size]=\"'auto'\" [title]=\"model.clearButtonCaption\" sv-ng-svg-icon></svg>\n    </button>\n    <div [class]=\"model.cssClasses.fileList || undefined\" *ngIf=\"!model.isEmpty()\">\n      <span\n        *ngFor=\"let val of model.previewValue; index as index; trackBy: trackFilesFn\"\n        [visible]=\"val && model.isPreviewVisible(index)\"\n        [class]=\"model.cssClasses.preview\"\n      >\n        <div *ngIf=\"val.name && model.cssClasses.fileSign\" [class]=\"model.cssClasses.fileSign\">\n          <a\n            (click)=\"model.doDownloadFile($event, val)\"\n            [attr.href]=\"val.content | safeUrl\"\n            [attr.title]=\"val.name\"\n            [attr.download]=\"val.name\"\n            [style.width]=\"model.imageWidth\"\n            >{{ val.name }}</a\n          >\n        </div>\n        <div [class]=\"model.cssClasses.imageWrapper\">\n          <img\n            *ngIf=\"model.canPreviewImage(val)\"\n            [attr.src]=\"val.content | safeUrl\"\n            [style.height]=\"model.imageHeight\"\n            [style.width]=\"model.imageWidth\"\n            alt=\"File preview\"\n          />\n          <svg *ngIf=\"model.defaultImage(val)\" \n            [iconName]=\"model.cssClasses.defaultImageIconId\" [partCss]=\"model.cssClasses.defaultImage\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n          <div *ngIf=\"val.name && !model.isReadOnly\" [class]=\"model.cssClasses.removeFileButton\" (click)=\"model.doRemoveFile(val)\">\n            <span\n              [class]=\"model.cssClasses.removeFile\"\n              >{{ model.removeFileCaption }}</span\n            >\n            <svg *ngIf=\"model.cssClasses.removeFileSvgIconId\" [title]=\"model.removeFileCaption\" [partCss]=\"model.cssClasses.removeFileSvg\" [iconName]=\"model.cssClasses.removeFileSvgIconId\" [size]=\"'auto'\" sv-ng-svg-icon ></svg>\n          </div>\n        </div>\n        <div *ngIf=\"val.name && model.cssClasses.fileSignBottom\" [class]=\"model.cssClasses.fileSignBottom\">\n          <a\n            (click)=\"model.doDownloadFile($event, val)\"\n            [attr.href]=\"val.content | safeUrl\"\n            [attr.title]=\"val.name\"\n            [attr.download]=\"val.name\"\n            [style.width]=\"model.imageWidth\"\n            >{{ val.name }}</a\n          >\n        </div>\n      </span>\n    </div>\n    <button\n      type=\"button\"\n      *ngIf=\"model.showRemoveButtonBottom\"\n      [class]=\"model.showRemoveButtonBottom\"\n      (click)=\"model.doClean($event)\"\n    >\n      <span>{{ model.clearButtonCaption }}</span>\n      <svg *ngIf=\"model.cssClasses.removeButtonIconId\" [iconName]=\"model.cssClasses.removeButtonIconId\" [size]=\"'auto'\" [title]=\"model.clearButtonCaption\" sv-ng-svg-icon></svg>\n    </button>\n    <sv-action-bar *ngIf=\"model.mobileFileNavigatorVisible\" [model]=\"model.mobileFileNavigator\"></sv-action-bar>\n  </div>\n</div>","import { Component } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../component-factory\";\nimport { QuestionAngular } from \"../question\";\nimport { QuestionCommentModel } from \"survey-core\";\n\n@Component({\n  templateUrl: \"./comment.component.html\",\n  selector: \"sv-ng-question-comment\"\n})\n\nexport class CommentQuestionComponent extends QuestionAngular<QuestionCommentModel> {\n  onChange(event: any) {\n    this.model.value = event.target.value;\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"comment-question\", CommentQuestionComponent);","<textarea\n*ngIf=\"!model.isReadOnlyRenderDiv()\"\n[readonly]=\"model.isInputReadOnly\"\n[attr.disabled]=\"model.renderedInputDisabled\"\n[id]=\"model.inputId\"\n[attr.maxlength]=\"model.getMaxLength()\"\n[attr.cols]=\"model.cols\"\n[attr.rows]=\"model.rows\"\n[attr.placeholder]=\"model.renderedPlaceholder\"\n[class]=\"model.className\"\n[value]=\"model.value || null\"\n(input)=\"model.onInput($event)\"\n(keydown)=\"model.onKeyDown($event)\"\n(change)=\"onChange($event)\"\n[attr.aria-required]=\"model.ariaRequired\"\n[attr.aria-label]=\"model.ariaLabel\"\n[attr.aria-invalid]=\"model.ariaInvalid\"\n[attr.aria-describedby]=\"model.ariaDescribedBy\"\n[style.resize]=\"model.resizeStyle\"\n#contentElement></textarea>\n<sv-ng-character-counter *ngIf=\"!model.isReadOnlyRenderDiv() && model.getMaxLength()\" \n[counter]=\"model.characterCounter\"\n[remainingCharacterCounter]=\"model.cssClasses.remainingCharacterCounter\">\n</sv-ng-character-counter>\n<div *ngIf=\"model.isReadOnlyRenderDiv()\" #contentElement>{{ model.value }}</div>","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { QuestionSignaturePadModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-signature-component\",\n  templateUrl: \"./signature.component.html\"\n  })\nexport class SignaturePadQuestionComponent extends QuestionAngular<QuestionSignaturePadModel> {}\n\nAngularComponentFactory.Instance.registerComponent(\"signaturepad-question\", SignaturePadQuestionComponent);","<div\n[class]=\"model.cssClasses.root\"\n[style.height]=\"model.signatureHeight + 'px'\" [style.width]=\"model.signatureWidth + 'px'\" #contentElement>\n<div [class]=\"model.cssClasses.placeholder\" [visible]=\"model.needShowPlaceholder()\">\n  {{ model.placeHolderText }}\n</div>\n<div>\n  <canvas tabindex=\"0\"></canvas>\n</div>\n<div [class]=\"model.cssClasses.controls\" [visible]=\"model.canShowClearButton\">\n  <button\n    type=\"button\"\n    [class]=\"model.cssClasses.clearButton\"\n    [title]=\"model.clearButtonCaption\"\n    (click)=\"model.clearValue()\"\n  >\n    <span *ngIf=\"!model.cssClasses.clearButtonIconId\">✖</span>\n    <svg\n      *ngIf=\"model.cssClasses.clearButtonIconId\"\n      [iconName]=\"model.cssClasses.clearButtonIconId\"\n      [size]=\"'auto'\" sv-ng-svg-icon></svg>\n  </button>\n</div>\n</div>","import { MultipleTextItemModel, QuestionMultipleTextModel, QuestionTextModel } from \"survey-core\";\nimport { Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"../base-angular\";\n\n@Component({\n  selector: \"'[sv-ng-multipletext-item]'\",\n  templateUrl: \"./mutlipletextitem.component.html\"\n})\nexport class MultipleTextItemComponent extends BaseAngular<QuestionTextModel> {\n  @Input() question!: QuestionMultipleTextModel;\n  @Input() model!: MultipleTextItemModel;\n  protected getModel(): QuestionTextModel {\n    return this.model.editor;\n  }\n}\n","<label [class]=\"question.getItemLabelCss(model)\">\n  <span [class]=\"question.getItemTitleCss()\">\n    <span *ngIf=\" model.editor.isRequireTextBeforeTitle || model.editor.isRequireTextOnStart\"\n      [class]=\"question.cssClasses.requiredText\">{{ model.editor.requiredText }}</span>\n    <sv-ng-string [model]=\"model.locTitle\"></sv-ng-string>\n    <span\n      *ngIf=\"model.editor.isRequireTextAfterTitle\"\n      [class]=\"question.cssClasses.requiredText\"\n      >{{ model.editor.requiredText }}</span\n    >\n  </span>\n  <div [class]=\"question.getItemCss()\">\n    <div *ngIf=\"model.editor.showErrorOnTop && model.editor.hasVisibleErrors\" [element]=\"model.editor\" sv-ng-errors></div>\n    <sv-ng-text-question [model]=\"model.editor\"></sv-ng-text-question>\n    <div *ngIf=\"model.editor.showErrorOnBottom && model.editor.hasVisibleErrors\" [element]=\"model.editor\" sv-ng-errors></div>\n  </div>\n  <div *ngIf=\"model.editor.isErrorsModeTooltip && model.editor.hasVisibleErrors\" [element]=\"model.editor\" [location]=\"'tooltip'\" sv-ng-errors></div>\n</label>","import { QuestionAngular } from \"../question\";\nimport { MultipleTextItemModel, QuestionMultipleTextModel } from \"survey-core\";\nimport { Component } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-multipletext-question\",\n  templateUrl: \"./multipletext.component.html\"\n})\nexport class MultipleTextComponent extends QuestionAngular<QuestionMultipleTextModel> {\n  trackRowBy = (index: number): string => {\n    return this.model.inputId + \"rowkey\" + index;\n  }\n  trackItemBy (_: number, item: MultipleTextItemModel): string {\n    return \"item\" + item.editor.id;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"multipletext-question\", MultipleTextComponent);","<table [class]=\"model.cssClasses.root\" #contentElement>\n  <tbody>\n    <tr\n      *ngFor=\"let row of model.getRows(); index as rowIndex; trackBy: trackRowBy\"\n      [class]=\"model.cssClasses.row\"\n    >\n      <ng-container *ngFor=\"let item of row; trackBy: trackItemBy\" >\n        <td [class]=\"model.cssClasses.cell\" [question]=\"model\" [model]=\"item\" sv-ng-multipletext-item></td>\n      </ng-container>\n    </tr>\n  </tbody>\n</table>\n","import { Component } from \"@angular/core\";\nimport { ItemValue, QuestionRankingModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\nimport { SelectBaseComponent } from \"./selectbase.component\";\n\n@Component({\n  selector: \"sv-ng-ranking-question\",\n  templateUrl: \"./ranking.component.html\",\n})\nexport class RankingQuestionComponent extends SelectBaseComponent<QuestionRankingModel> {\n  public override inputType: string = \"\";\n  override trackItemBy = (index: number, item: ItemValue): string => {\n    return item.value + \"-\" + index + \"-item\";\n  }\n  public override getDefaultComponentName(): string {\n    return \"sv-ng-ranking-item\";\n  }\n  public override getItemValueComponentData(item: ItemValue, index?: number): any {\n    const res = super.getItemValueComponentData(item);\n    res.componentData.index = index;\n    return res;\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"ranking-question\", RankingQuestionComponent);","<div [class]=\"model.rootClass\" #contentElement>\n  <ng-container *ngFor=\"let item of model.rankingChoices; index as index; trackBy: trackItemBy\">\n    <ng-template [component]=\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item, index) }\"></ng-template>\n  </ng-container>\n</div>","import { Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"../base-angular\";\nimport { ItemValue, QuestionRankingModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-ranking-item\",\n  templateUrl: \"./ranking-item.component.html\"\n})\nexport class RankingItemComponent extends BaseAngular<ItemValue> {\n  @Input() question!: QuestionRankingModel;\n  @Input() model!: ItemValue;\n  @Input() index!: number;\n  protected getModel(): ItemValue {\n    return this.model;\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"sv-ng-ranking-item\", RankingItemComponent);","\n\n\n<div [attr.tabindex]=\"question.getItemTabIndex(model)\" [attr.data-sv-drop-target-ranking-item]=\"index\" \n    [class]=\"question.getItemClass(model)\"\n    (keydown)=\"question.handleKeydown($event, model)\"\n    (pointerdown)=\"question.handlePointerDown($event, model, $any($event.currentTarget))\">\n  <div tabindex=\"-1\" style=\"outline: none;\">\n    <div [class]=\"question.cssClasses.itemGhostNode\"></div>\n    <div [class]=\"question.cssClasses.itemContent\">\n      <div [class]=\"question.cssClasses.itemIconContainer\">\n        <svg\n          width=\"10\"\n          height=\"16\"\n          viewBox=\"0 0 10 16\"\n          [class]=\"question.getIconHoverCss()\"\n          xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M6 2C6 0.9 6.9 0 8 0C9.1 0 10 0.9 10 2C10 3.1 9.1 4 8 4C6.9 4 6 3.1 6 2ZM2 0C0.9 0 0 0.9 0 2C0 3.1 0.9 4 2 4C3.1 4 4 3.1 4 2C4 0.9 3.1 0 2 0ZM8 6C6.9 6 6 6.9 6 8C6 9.1 6.9 10 8 10C9.1 10 10 9.1 10 8C10 6.9 9.1 6 8 6ZM2 6C0.9 6 0 6.9 0 8C0 9.1 0.9 10 2 10C3.1 10 4 9.1 4 8C4 6.9 3.1 6 2 6ZM8 12C6.9 12 6 12.9 6 14C6 15.1 6.9 16 8 16C9.1 16 10 15.1 10 14C10 12.9 9.1 12 8 12ZM2 12C0.9 12 0 12.9 0 14C0 15.1 0.9 16 2 16C3.1 16 4 15.1 4 14C4 12.9 3.1 12 2 12Z\" />\n        </svg>\n        <svg\n          width=\"10\"\n          height=\"24\"\n          viewBox=\"0 0 10 24\"\n          [class]=\"question.getIconFocusCss()\"\n          xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M10 5L5 0L0 5H4V9H6V5H10Z\" />\n          <path d=\"M6 19V15H4V19H0L5 24L10 19H6Z\" />\n        </svg>\n      </div>\n\n      <div [class]=\"question.getItemIndexClasses()\">{{ question.getNumberByIndex(index) }}</div>\n      <div [class]=\"question.cssClasses.controlLabel\">\n        <sv-ng-string [model]=\"model.locText\"></sv-ng-string>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, Input } from \"@angular/core\";\nimport { LocalizableString } from \"survey-core\";\nimport { AngularComponentFactory } from \"./component-factory\";\n\n@Component({\n  selector: \"sv-ng-string-editor\",\n  templateUrl: \"./string-editor.component.html\"\n})\nexport class StringEditorComponent {\n  @Input() model!: LocalizableString;\n\n  onInput = (event: any) => {\n    this.model.text = event.target.innerText;\n  };\n  onClick = (event: any) => {\n    event.preventDefault();\n    event.stopPropagation();\n  };\n}\nAngularComponentFactory.Instance.registerComponent(LocalizableString.editableRenderer, StringEditorComponent);","<span\n  class=\"sv-string-editor\"\n  contenteditable=\"true\"\n  *ngIf=\"model.hasHtml\"\n  [innerHtml]=\"model.renderedHtml\"\n  (blur)=\"onInput($event)\"\n  (click)=\"onClick($event)\"\n></span>\n<span\n  class=\"sv-string-editor\"\n  contenteditable=\"true\"\n  *ngIf=\"!model.hasHtml\"\n  (blur)=\"onInput($event)\"\n  (click)=\"onClick($event)\"\n  >{{ model.renderedHtml }}</span\n>\n","import { Action, QuestionPanelDynamicModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"\",\n  template: \"\"\n})\nexport class PaneldynamicAction {\n  @Input() data: any;\n  @Input() model!: Action;\n  public get question(): QuestionPanelDynamicModel {\n    return (this.model && this.model.data.question) || this.data.question;\n  }\n}\n\n@Component({\n  selector: \"sv-ng-paneldynamic-add-btn\",\n  templateUrl: \"./paneldynamic-add-btn.component.html\"\n})\nexport class PanelDynamicAddBtn extends PaneldynamicAction {\n  addPanelClick() {\n    this.question.addPanelUI();\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"sv-paneldynamic-add-btn\", PanelDynamicAddBtn);","<button type=\"button\" *ngIf=\"question.canAddPanel\" [class]=\"question.getAddButtonCss()\" (click)=\"addPanelClick()\">\n<span [class]=\"question.cssClasses.buttonAddText\">{{question.panelAddText}}</span>\n</button>","import { Component } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { PaneldynamicAction } from \"./paneldynamic-add-btn.component\";\n\n@Component({\n  selector: \"sv-ng-paneldynamic-next-btn\",\n  templateUrl: \"./paneldynamic-next-btn.component.html\"\n})\nexport class PanelDynamicNextBtn extends PaneldynamicAction {\n  nextPanelClick() {\n    this.question.goToNextPanel();\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-paneldynamic-next-btn\", PanelDynamicNextBtn);\n","<div [attr.title]=\"question.panelNextText\" (click)=\"nextPanelClick()\" [class]=\"question.getNextButtonCss()\">\n  <svg [iconName]=\"question.cssClasses.progressBtnIcon\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n</div>","import { Component } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { PaneldynamicAction } from \"./paneldynamic-add-btn.component\";\n\n@Component({\n  selector: \"sv-ng-paneldynamic-prev-btn\",\n  templateUrl: \"./paneldynamic-prev-btn.component.html\"\n})\nexport class PanelDynamicPrevBtn extends PaneldynamicAction {\n  prevPanelClick() {\n    this.question.goToPrevPanel();\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"sv-paneldynamic-prev-btn\", PanelDynamicPrevBtn);","<div [attr.title]=\"question.panelPrevText\" (click)=\"prevPanelClick()\" [class]=\"question.getPrevButtonCss()\">\n  <svg [iconName]=\"question.cssClasses.progressBtnIcon\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n</div>\n","import { Component } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { PaneldynamicAction } from \"./paneldynamic-add-btn.component\";\n\n@Component({\n  selector: \"sv-ng-paneldynamic-remove-btn\",\n  templateUrl: \"./paneldynamic-remove-btn.component.html\"\n})\nexport class PaneldynamicRemoveButtonComponent extends PaneldynamicAction {\n  get panel() {\n    return (this.data ? this.data : this.model.data).panel;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-paneldynamic-remove-btn\", PaneldynamicRemoveButtonComponent);\n","<button type=\"button\" (click)=\"question.removePanelUI(panel)\" [class]=\"question.getPanelRemoveButtonCss()\"> \n  <span [class]=\"question.cssClasses.buttonRemoveText\">{{question.panelRemoveText}}</span>\n  <span [class]=\"question.cssClasses.iconRemove\"></span>\n</button>\n","import { Component } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../component-factory\";\nimport { PaneldynamicAction } from \"./paneldynamic-add-btn.component\";\n\n@Component({\n  selector: \"sv-ng-paneldynamic-progress-text\",\n  templateUrl: \"./paneldynamic-progress-text.component.html\"\n})\nexport class PanelDynamicProgressText extends PaneldynamicAction {\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-paneldynamic-progress-text\", PanelDynamicProgressText);","<div [class]=\"question.cssClasses.progressText\">{{ question.progressText }}</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { PanelModel, QuestionPanelDynamicModel, SurveyModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-paneldynamic-question\",\n  templateUrl: \"./paneldynamic.component.html\"\n})\nexport class PanelDynamicQuestionComponent extends QuestionAngular<QuestionPanelDynamicModel | any> implements OnInit {\n  get renderedPanels(): PanelModel[] {\n    if (this.model.isRenderModeList) return this.model.panels;\n    const panels = [];\n    if (this.model.currentPanel) {\n      panels.push(this.model.currentPanel);\n    }\n    return panels;\n  }\n  protected override onModelChanged(): void {\n    super.onModelChanged();\n    this.model.panelCountChangedCallback = () => {\n      this.detectChanges();\n    };\n    this.model.currentIndexChangedCallback = () => {\n      this.detectChanges();\n    };\n    this.model.renderModeChangedCallback = () => {\n      this.detectChanges();\n    };\n  }\n  get progressCssClass() {\n    return this.model.isProgressTopShowing\n      ? this.model.cssClasses.progressTop\n      : this.model.cssClasses.progressBottom;\n  }\n  override ngOnDestroy(): void {\n    this.model.panelCountChangedCallback = () => {};\n    this.model.currentIndexChangedCallback = () => {};\n    this.model.renderModeChangedCallback = () => {};\n    super.ngOnDestroy();\n  }\n  public getPanelComponentName(panel: PanelModel): string {\n    const survey = this.surveyModel as SurveyModel;\n    if(!!survey) {\n      const name = survey.getElementWrapperComponentName(panel);\n      if(!!name) {\n        return name;\n      }\n    }\n    return \"panel\";\n  }\n  public getPanelComponentData(panel: PanelModel): any {\n    const survey = this.surveyModel as SurveyModel;\n    let data: any;\n    if(!!survey) {\n      data = survey.getElementWrapperComponentData(panel);\n    }\n    return {\n      componentName: \"panel\",\n      componentData: {\n        model: panel,\n        data: data\n      }\n    };\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"paneldynamic-question\", PanelDynamicQuestionComponent);","<div [class]=\"model.cssClasses.root\" #contentElement>\n  <div *ngIf=\"model.getShowNoEntriesPlaceholder()\" [class]=\"model.cssClasses.noEntriesPlaceholder\">\n    <span [model]=\"model.locNoEntriesText\" sv-ng-string></span>\n    <sv-ng-paneldynamic-add-btn [data]=\"{ question: model }\"></sv-ng-paneldynamic-add-btn>\n  </div>\n  <div [class]=\"model.cssClasses.progress\" *ngIf=\"!model.showLegacyNavigation && model.isProgressTopShowing && model.isRangeShowing\">\n    <div\n      [class]=\"model.cssClasses.progressBar\"\n      [style]=\"{ width: model.progress }\"\n      role=\"progressbar\"\n    ></div>\n  </div>\n  <ng-container [ngTemplateOutlet]=\"progress\" *ngIf=\"model.showLegacyNavigation && model.isProgressTopShowing\"></ng-container>\n  <!-- add track by [key]=\"panel.id\" -->\n  <ng-container *ngFor=\"let panel of renderedPanels; index as index\"> \n    <div [class]=\"model.getPanelWrapperCss()\">\n      <ng-template [component]=\"{ name: getPanelComponentName(panel), data: getPanelComponentData(panel) }\"></ng-template>\n      <ng-container *ngIf=\"model.panelRemoveButtonLocation ==='right'\">\n        <sv-ng-paneldynamic-remove-btn *ngIf=\"model.canRemovePanel && panel.state != 'collapsed' && model.panelRemoveButtonLocation == 'right'\" [data]=\"{ panel: panel, question: model }\"></sv-ng-paneldynamic-remove-btn>\n      </ng-container>\n    </div>\n    <!-- add track by [key]=\"'separator' + panel.id\" -->\n    <hr [class]=\"model.cssClasses.separator\" *ngIf=\"model.isRenderModeList && index < model.panelCount - 1\"/>\n  </ng-container>\n  <ng-container [ngTemplateOutlet]=\"progress\" *ngIf=\"model.showLegacyNavigation && model.isProgressBottomShowing\"></ng-container>\n  <sv-ng-paneldynamic-add-btn *ngIf=\"model.showLegacyNavigation && model.isRenderModeList\" [data]=\"{ question: model }\"></sv-ng-paneldynamic-add-btn>\n  <ng-container [ngTemplateOutlet]=\"progressV2\" *ngIf=\"model.panelCount !== 0 && !model.showLegacyNavigation\"></ng-container>\n</div>\n\n<ng-template #progressV2>\n  <div [class]=\"model.cssClasses.footer\" *ngIf=\"!!model.cssClasses.footer\">\n    <hr [class]=\"model.cssClasses.separator\"/>\n    <div [class]=\"model.cssClasses.progress\" *ngIf=\"model.isRangeShowing && model.isProgressBottomShowing\">\n      <div\n        [class]=\"model.cssClasses.progressBar\"\n        [style]=\"{ width: model.progress }\"\n        role=\"progressbar\"\n      ></div>\n    </div>\n    <div *ngIf=\"model.footerToolbar.visibleActions.length\" [class]=\"model.cssClasses.footerButtonsContainer\">\n      <sv-ng-action-bar [model]=\"model.footerToolbar\"></sv-ng-action-bar>\n    </div>\n  </div>\n</ng-template>\n<ng-template #progress>\n  <div [class]=\"this.progressCssClass\">\n    <div style=\"clear: both\" [class]=\"this.progressCssClass\">\n      <div [class]=\"model.cssClasses.progressContainer\">\n        <sv-ng-paneldynamic-prev-btn [data]=\"{ question: model }\"></sv-ng-paneldynamic-prev-btn>\n        <div [class]=\"model.cssClasses.progress\" *ngIf=\"model.isRangeShowing\">\n          <div\n            [class]=\"model.cssClasses.progressBar\"\n            [style]=\"{ width: model.progress }\"\n            role=\"progressbar\"\n          ></div>\n        </div>\n          <sv-ng-paneldynamic-next-btn [data]=\"{ question: model }\"></sv-ng-paneldynamic-next-btn>\n      </div>\n      <sv-ng-paneldynamic-add-btn [data]=\"{ question: model }\"></sv-ng-paneldynamic-add-btn>\n      <sv-ng-paneldynamic-progress-text [data]=\"{ question: model }\"></sv-ng-paneldynamic-progress-text>\n    </div>\n  </div>\n</ng-template>","import { ChangeDetectorRef, Component, Input, TemplateRef, ViewContainerRef } from \"@angular/core\";\nimport { ButtonGroupItemModel, PanelModel, Question, SurveyModel } from \"survey-core\";\nimport { BaseAngular } from \"./base-angular\";\nimport { AngularComponentFactory } from \"./component-factory\";\nimport { EmbeddedViewContentComponent } from \"./embedded-view-content.component\";\n\n@Component({\n  selector: \"sv-template-renderer\",\n  templateUrl: \"./template-renderer.component.html\",\n  styleUrls: [\"./hide-host.scss\"]\n})\nexport class TemplateRendererComponent extends EmbeddedViewContentComponent {\n  @Input() componentName!: string;\n  @Input() componentData!: any;\n  @Input() contentTempl?: TemplateRef<unknown>;\n}\nAngularComponentFactory.Instance.registerComponent(SurveyModel.TemplateRendererComponentName, TemplateRendererComponent);","<ng-template #template>\n  <ng-container *ngIf=\"!!componentName\">\n    <ng-template [component]=\"{ name: componentName, data: componentData }\"></ng-template>\n  </ng-container>\n  <ng-container *ngIf=\"!componentName && contentTempl\">\n    <ng-container *ngTemplateOutlet=\"contentTempl\"></ng-container>\n  </ng-container>\n</ng-template>","import { AfterViewInit, Component, ElementRef, Input, OnChanges, OnDestroy, SimpleChanges, ViewChild } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../component-factory\";\nimport { Question } from \"survey-core\";\n\n@Component(\n  {\n    templateUrl: \"./customwidget.component.html\",\n    selector: \"sv-ng-custom-widget\"\n  }\n)\nexport class CustomWidgetComponent implements AfterViewInit, OnDestroy, OnChanges {\n  @Input() css: any;\n  @Input() model!: Question;\n\n  @ViewChild(\"content\") container!: ElementRef<HTMLDivElement>;\n\n  get hasDefaultRender(): boolean {\n    return this.model.customWidget.isDefaultRender || this.hasAngularComponent;\n  }\n  get hasHtml(): boolean {\n    return this.model.customWidget.htmlTemplate ? true : false;\n  }\n  get customHtml(): string {\n    return this.model.customWidget.htmlTemplate;\n  }\n  get hasAngularComponent(): boolean {\n    return AngularComponentFactory.Instance.isComponentRegistered(this.model.customWidget.name);\n  }\n  get componentName(): string {\n    if (this.hasAngularComponent) return this.model.customWidget.name;\n    return this.model.getTemplate() + \"-question\";\n  }\n  ngAfterViewInit(): void {\n    this.model.customWidget.afterRender(this.model, this.container.nativeElement);\n  }\n  ngOnChanges(simpleChanges: SimpleChanges) {\n    if(simpleChanges[\"model\"].previousValue !== undefined && simpleChanges[\"model\"].currentValue !== undefined) {\n      this.model.customWidget.afterRender(this.model, this.container.nativeElement);\n    }\n  }\n  ngOnDestroy(): void {\n    this.model.customWidget.willUnmount(this.model, this.container.nativeElement);\n  }\n\n}\n\nAngularComponentFactory.Instance.registerComponent(\"survey-customwidget\", CustomWidgetComponent);\n","<div #content>\n  <div *ngIf=\"hasHtml\" [innerHTML]=\"customHtml | safeHtml\"></div>\n  <ng-container *ngIf=\"hasDefaultRender\">\n    <ng-template [component]=\"{ name: componentName, data: { model: model, css: css } }\"></ng-template>  \n  </ng-container>\n</div>","import { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../../component-factory\";\nimport { IAction } from \"survey-core\";\nimport { EmbeddedViewContentComponent } from \"../../../embedded-view-content.component\";\n\n@Component({\n  templateUrl: \"drag-drop-icon.component.html\",\n  selector: \"sv-ng-matrix-drag-drop-icon\",\n  styleUrls: [\"../../../hide-host.scss\"]\n})\nexport class MatrixDynamicDragDropIconComponent extends EmbeddedViewContentComponent {\n  @Input() public model!: IAction;\n\n  get question() {\n    return this.model.data.question;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\n  \"sv-matrix-drag-drop-icon\",\n  MatrixDynamicDragDropIconComponent\n);\n","<ng-template #template>\n  <svg *ngIf=\"question.iconDragElement\" [class]=\"question.cssClasses.dragElementDecorator\">\n    <use [attr.xlink:href]=\"question.iconDragElement\"></use>\n  </svg>\n  <span *ngIf=\"!question.iconDragElement\" data-bind=\"css: question.cssClasses.iconDrag\"></span>\n</ng-template>","import { Component, ElementRef, Input, ViewChild } from \"@angular/core\";\nimport { BaseAngular } from \"../base-angular\";\nimport {\n  Question,\n  QuestionMatrixDropdownModelBase,\n  QuestionMatrixDropdownRenderedCell,\n  MatrixDropdownRowModelBase,\n  SurveyModel\n} from \"survey-core\";\nimport { getComponentName } from \"../question\";\n\n@Component({\n  selector: \"sv-ng-matrix-cell\",\n  templateUrl: \"./matrixcell.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class MatrixCellComponent extends BaseAngular<Question> {\n  @Input() question!: QuestionMatrixDropdownModelBase;\n  @Input() cell!: QuestionMatrixDropdownRenderedCell;\n\n  @ViewChild(\"cellContainer\") cellContainer!: ElementRef<HTMLElement>;\n\n  isVisible: boolean = false;\n\n  getModel() {\n    return this.cell.question;\n  }\n  public get row(): MatrixDropdownRowModelBase {\n    return this.cell.row;\n  }\n  public get panelComponentName(): string {\n    const panel = this.cell.panel;\n    const survey = <SurveyModel>panel.survey;\n    if(!!survey) {\n      const name = survey.getElementWrapperComponentName(panel);\n      if(!!name) {\n        return name;\n      }\n    }\n    return \"panel\";\n  }\n  public get panelComponentData(): any {\n    const panel = this.cell.panel;\n    const survey = <SurveyModel>panel.survey;\n    let data: any;\n    if(!!survey) {\n      data = survey.getElementWrapperComponentData(panel);\n    }\n    return {\n      componentName: \"panel\",\n      componentData: {\n        model: panel,\n        data: data\n      }\n    };\n  }\n\n  getComponentName(element: Question) { return getComponentName(element); }\n  getHeaders(): string {\n    return this.cell.headers;\n  }\n  getCellStyle() {\n    if (!!this.cell.width || !!this.cell.minWidth)\n      return { width: this.cell.width, minWidth: this.cell.minWidth };\n    return null;\n  }\n  ngAfterViewInit() {\n    if (!this.cell.hasQuestion || !this.question || !this.question.survey) return;\n    var options = {\n      cell: this.cell.cell,\n      cellQuestion: this.cell.question,\n      htmlElement: this.cellContainer.nativeElement,\n      row: this.cell.row,\n      column: this.cell.cell.column,\n    };\n    this.question.survey.matrixAfterCellRender(this.question, options);\n  }\n}","<ng-template #template>\n  <td [class]=\"cell.className\" [attr.data-responsive-title]=\"getHeaders()\" [title]=\"cell.getTitle()\" [style]=\"getCellStyle()\" [attr.colspan]=\"cell.colSpans\" #cellContainer>\n    <sv-ng-matrix-drag-drop-icon *ngIf=\"cell.isDragHandlerCell\" [model]=\"$any({ data: { row: row, question: question } })\"></sv-ng-matrix-drag-drop-icon>\n    <sv-action-bar *ngIf=\"cell.isActionsCell\" [model]=\"cell.item.getData()\" [handleClick]=\"false\"></sv-action-bar>\n    <ng-container *ngIf=\"cell.hasPanel\">\n      <ng-template [component]=\"{ name: panelComponentName, data: panelComponentData }\"></ng-template>\n    </ng-container>\n    <div *ngIf=\"cell.hasQuestion\" [class]=\"question.cssClasses.cellQuestionWrapper\" [visible]=\"cell.question.isVisible\">\n      <div *ngIf=\"cell.showErrorOnTop && cell.question.hasVisibleErrors\" [element]=\"cell.question\" [location]=\"'top'\" sv-ng-errors></div>\n      <ng-container *ngIf=\"!cell.isChoice && cell.question.isDefaultRendering()\">\n          <ng-template [component]=\"{ name: question.getCellWrapperComponentName(cell.cell), data: { componentData: question.getCellWrapperComponentData(cell.cell)} }\">\n            <ng-template  [component]=\"{ name: getComponentName(cell.question), data: { model: cell.question } }\"></ng-template>\n          </ng-template>\n      </ng-container>\n      <ng-template *ngIf=\"!cell.isChoice && !cell.question.isDefaultRendering()\" [component]=\"{ name: cell.question.getComponentName(), data: { model: cell.question } }\">\n      </ng-template>\n      <sv-ng-selebase-item\n        *ngIf=\"cell.isItemChoice\"\n        [showLabel]=\"false\"\n        [inputType]=\"cell.isCheckbox ? 'checkbox': 'radio'\"\n        [question]=\"cell.question\"\n        [model]=\"cell.item\"\n      ></sv-ng-selebase-item>\n      <div *ngIf=\"cell.isOtherChoice\" [class]=\"cell.question.getCommentAreaCss(true)\" [question]=\"cell.question\" sv-ng-comment-other></div>\n      <div *ngIf=\"cell.showErrorOnBottom && cell.question.hasVisibleErrors\" [element]=\"cell.question\" [location]=\"'top'\" sv-ng-errors></div>\n      <div *ngIf=\"cell.question.isErrorsModeTooltip && cell.question.hasVisibleErrors\" [element]=\"cell.question\" [location]=\"'tooltip'\" sv-ng-errors></div>\n    </div>\n    <ng-container *ngIf=\"cell.hasTitle\">\n      <ng-template [component]=\"{ name: question.getCellWrapperComponentName($any(cell)), data: { componentData: question.getCellWrapperComponentData($any(cell))} }\">\n        <sv-ng-string [model]=\"cell.locTitle\"></sv-ng-string>\n        <span *ngIf=\"!!cell.requiredText\" [class]=\"question.cssClasses.cellRequiredText\">{{ cell.requiredText }}</span>  \n      </ng-template>\n    </ng-container>\n</td>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"../base-angular\";\nimport {\n  MatrixDropdownColumn,\n  QuestionMatrixDropdownModelBase,\n} from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-matrixheaderrequired\",\n  styles: [\":host { display: none; }\"],\n  template: \"<ng-template #template><span *ngIf='column.isRenderedRequired' [class]='question.cssClasses.cellRequiredText'>{{ column.requiredText }}</span></ng-template>\"\n})\nexport class MatrixRequiredHeader extends BaseAngular<MatrixDropdownColumn> {\n  @Input() column!: MatrixDropdownColumn;\n  @Input() question!: QuestionMatrixDropdownModelBase;\n  getModel() {\n    return this.column;\n  }\n}","import { Component, ElementRef, Input, ViewChild } from \"@angular/core\";\nimport { BaseAngular } from \"../base-angular\";\nimport {\n  MatrixDropdownRowModelBase,\n  Question,\n  QuestionMatrixDropdownModelBase,\n  QuestionMatrixDropdownRenderedCell,\n  QuestionMatrixDropdownRenderedRow\n} from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-matrix-row\",\n  templateUrl: \"./matrix-row.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class MatrixRowComponent extends BaseAngular<QuestionMatrixDropdownRenderedRow> {\n  @Input() model!: QuestionMatrixDropdownRenderedRow;\n  @Input() question!: QuestionMatrixDropdownModelBase;\n  protected getModel(): QuestionMatrixDropdownRenderedRow {\n    return this.model;\n  }\n  public get row(): MatrixDropdownRowModelBase {\n    return this.model.row;\n  }\n  public trackCellBy(_: number, cell: any): string {\n    return cell.id;\n  }\n}","<ng-template #template>\n  <tr [class]=\"model.className\" (pointerdown)=\"question.onPointerDown($event, row)\" [attr.data-sv-drop-target-matrix-row]=\"row && row.id\">\n    <sv-ng-matrix-cell\n      [cell]=\"cell\"\n      [question]=\"question\"\n      *ngFor=\"let cell of model.cells; trackBy: trackCellBy\"\n    ></sv-ng-matrix-cell>\n  </tr>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"../base-angular\";\nimport { QuestionMatrixDropdownModelBase, QuestionMatrixDropdownRenderedTable } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-matrix-table\",\n  templateUrl: \"./matrixtable.component.html\"\n})\nexport class MatrixTableComponent extends BaseAngular<QuestionMatrixDropdownRenderedTable> {\n  @Input() question!: QuestionMatrixDropdownModelBase;\n  @Input() table!: QuestionMatrixDropdownRenderedTable;\n  protected getModel(): QuestionMatrixDropdownRenderedTable {\n    return this.table;\n  }\n  public trackCellBy(_: number, cell: any): string {\n    return cell.id;\n  }\n  public trackRowBy(index: number, row: any): string {\n    return row.id;\n  }\n}\n","<div [style]=\"{ overflowX: question.showHorizontalScroll ? 'scroll' : '' }\" #contentElement [class]=\"question.cssClasses.tableWrapper\">\n  <table [class]=\"question.getTableCss()\">\n    <thead *ngIf=\"table.showHeader\">\n      <tr>\n        <ng-container\n          *ngFor=\"let cell of table.headerRow.cells; trackBy: trackCellBy\"\n        >\n              <th *ngIf=\"cell.hasTitle\" [class]=\"cell.className\" [style]=\"{ minWidth: cell.minWidth, width: cell.width }\">\n                <ng-template [component]=\"{ name: question.getColumnHeaderWrapperComponentName($any(cell)), data: { componentData: question.getColumnHeaderWrapperComponentData($any(cell)) } }\">\n                  <sv-ng-string [model]=\"cell.locTitle\"></sv-ng-string>\n                  <sv-ng-matrixheaderrequired *ngIf=\"!!cell.column\" [column]=\"cell.column\" [question]=\"question\">\n                  </sv-ng-matrixheaderrequired>\n                </ng-template>\n              </th>\n              \n              <td *ngIf=\"!cell.hasTitle\" [class]=\"cell.className\" [style]=\"{ minWidth: cell.minWidth, width: cell.width }\"></td>\n        </ng-container>\n      </tr>\n    </thead>\n    <tbody>\n      <ng-container *ngFor=\"let row of table.rows; trackBy: trackRowBy\">\n        <sv-ng-matrix-row [model]=\"row\" [question]=\"question\"></sv-ng-matrix-row>\n      </ng-container>\n    </tbody>\n    <tfoot *ngIf=\"table.showFooter\">\n      <tr>\n        <sv-ng-matrix-cell [cell]=\"cell\" [question]=\"question\" *ngFor=\"let cell of table.footerRow.cells; trackBy: trackCellBy\">\n        </sv-ng-matrix-cell>\n      </tr>\n    </tfoot>\n  </table>\n</div>","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { QuestionMatrixDropdownModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-matrixdropdown-question\",\n  templateUrl: \"./matrixdropdown.component.html\"\n})\nexport class MatrixDropdownComponent extends QuestionAngular<QuestionMatrixDropdownModel> {}\n\nAngularComponentFactory.Instance.registerComponent(\"matrixdropdown-question\", MatrixDropdownComponent);","<ng-template #template>\n    <sv-ng-matrix-table *ngIf=\"model.renderedTable?.showTable\" [question]=\"model\" [table]=\"model.renderedTable\"></sv-ng-matrix-table>\n</ng-template>","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { QuestionMatrixDynamicModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-matrixdynamic-question\",\n  templateUrl: \"./matrixdynamic.component.html\"\n})\nexport class MatrixDynamicComponent extends QuestionAngular<QuestionMatrixDynamicModel> {}\n\nAngularComponentFactory.Instance.registerComponent(\"matrixdynamic-question\", MatrixDynamicComponent);","<ng-template #template>\n  <div #contentElement>\n    <div *ngIf=\"model.renderedTable.showAddRowOnTop\" [class]=\"model.cssClasses.footer\">\n      <ng-container *ngTemplateOutlet=\"addRowButton\"></ng-container>\n    </div>\n    <sv-ng-matrix-table *ngIf=\"model.renderedTable?.showTable\" [question]=\"model\" [table]=\"model.renderedTable\"></sv-ng-matrix-table>\n    <div *ngIf=\"!model.renderedTable.showTable\" [class]=\"model.cssClasses.emptyRowsSection\">\n      <div [class]=\"model.cssClasses.emptyRowsText\" [model]=\"model.locEmptyRowsText\" sv-ng-string></div>\n      <ng-container *ngTemplateOutlet=\"addRowButton\"></ng-container>\n    </div>\n    <div *ngIf=\"model.renderedTable.showAddRowOnBottom\" [class]=\"model.cssClasses.footer\">\n      <ng-container *ngTemplateOutlet=\"addRowButton\"></ng-container>\n    </div>\n  </div>\n  <ng-template #addRowButton>\n    <button type=\"button\" [class]=\"model.getAddRowButtonCss(true)\" (click)=\"model.addRowUI()\">\n        <sv-ng-string [model]=\"model.locAddRowText\" ></sv-ng-string>\n        <span [class]=\"model.cssClasses.iconAdd\"></span>\n    </button>\n  </ng-template>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../../component-factory\";\nimport { Action, Base } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-matrix-remove-btn\",\n  templateUrl: \"./remove-button.component.html\"\n})\nexport class MatrixDynamicRemoveButtonComponent {\n  @Input() model!: Action;\n\n  get question() {\n    return this.model.data.question;\n  }\n\n  get row() {\n    return this.model.data.row;\n  }\n\n  getModel(): Base {\n    return this.model;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\n  \"sv-matrix-remove-button\",\n  MatrixDynamicRemoveButtonComponent\n);\n","<button type=\"button\" [class]=\"question.getRemoveRowButtonCss()\" [disabled]=\"question.isInputReadOnly\" (click)=\"question.removeRowUI(row)\">\n  <sv-ng-string [model]=\"question.locRemoveRowText\" ></sv-ng-string>\n  <span [class]=\"question.cssClasses.iconRemove\"></span>\n</button>","import { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../../../component-factory\";\nimport { Action } from \"survey-core\";\nimport { Base } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-matrix-detail-btn\",\n  templateUrl: \"./detail-button.component.html\"\n})\nexport class MatrixDetailButtonComponent {\n  @Input() public model!: Action;\n\n  get question() {\n    return this.model.data.question;\n  }\n\n  get row() {\n    return this.model.data.row;\n  }\n\n  getModel(): Base {\n    return this.model;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"sv-matrix-detail-button\", MatrixDetailButtonComponent);\n","<button type=\"button\" [class]=\"question.getDetailPanelButtonCss(row)\" (click)=\"row.showHideDetailPanelClick()\"\n  [attr.aria-expanded]=\"question.getIsDetailPanelShowing(row) ? 'true' : 'false'\"\n  [attr.aria-controls]=\"question.getIsDetailPanelShowing(row) ? row.detailPanelId : null\">\n  <svg [class]=\"this.question.getDetailPanelIconCss(this.row)\" \n    [iconName]=\"this.question.getDetailPanelIconId(this.row)\" [size]=\"'auto'\" sv-ng-svg-icon>\n  </svg>\n</button>","import { Component } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../component-factory\";\nimport { QuestionAngular } from \"../question\";\nimport { QuestionExpressionModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-expression\",\n  template: \"<div [class]='model.cssClasses.root' #contentElement>{{ model.formatedValue }}</div>\"\n})\nexport class ExpressionComponent extends QuestionAngular<QuestionExpressionModel> {\n}\n\nAngularComponentFactory.Instance.registerComponent(\"expression-question\", ExpressionComponent);","import { Component } from \"@angular/core\";\nimport { QuestionAngular } from \"../question\";\nimport { QuestionImageModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-image-question\",\n  templateUrl: \"./image.component.html\"\n})\nexport class ImageQuestionComponent extends QuestionAngular<QuestionImageModel> {\n  override ngAfterViewInit(): void {\n    this.model.locImageLink.onChanged = () => {\n      this.detectChanges();\n    };\n    super.ngAfterViewInit();\n  }\n  override ngOnDestroy(): void {\n    this.model.locImageLink.onChanged = () => {};\n    super.ngOnDestroy();\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"image-question\", ImageQuestionComponent);","<div [class]=\"model.cssClasses.root\" #contentElement>\n  <img\n    *ngIf=\"model.renderedMode === 'image'\"\n    [class]=\"model.getImageCss()\"\n    [attr.src]=\"model.locImageLink.renderedHtml\"\n    [attr.alt]=\"model.altText || model.title\"\n    [attr.width]=\"model.renderedWidth\"\n    [attr.height]=\"model.renderedHeight\"\n    [style]=\"{ objectFit: model.imageFit }\"\n    (loadedmetadata)=\"model.onLoadHandler()\"\n    (error)=\"model.onErrorHandler()\"\n  /><video\n    controls\n    *ngIf=\"model.renderedMode === 'video'\"\n    [class]=\"model.getImageCss()\"\n    [attr.src]=\"model.locImageLink.renderedHtml\"\n    [attr.width]=\"model.renderedWidth\"\n    [attr.height]=\"model.renderedHeight\"\n    [style]=\"{ objectFit: model.imageFit }\"\n    (loadedmetadata)=\"model.onLoadHandler()\"\n    (error)=\"model.onErrorHandler()\"\n  ></video>\n  <iframe\n    *ngIf=\"model.renderedMode === 'youtube'\"\n    [class]=\"model.getImageCss()\"\n    [attr.src]=\"model.locImageLink.renderedHtml | safeResourceUrl\"\n    [attr.width]=\"model.renderedWidth\"\n    [attr.height]=\"model.renderedHeight\"\n    [style]=\"{ objectFit: model.imageFit }\"\n    ></iframe>\n    <div *ngIf=\"!model.imageLink || model.contentNotLoaded\" [class]=\"model.cssClasses.noImage\">\n      <svg [iconName]=\"model.cssClasses.noImageSvgIconId\" [size]=\"48\" sv-ng-svg-icon></svg>\n    </div>\n</div>","import { Question } from \"survey-core\";\nimport { QuestionCustomModel } from \"survey-core\";\nimport { Component } from \"@angular/core\";\nimport { QuestionAngular, getComponentName } from \"../question\";\nimport { AngularComponentFactory } from \"../component-factory\";\n\n@Component({\n  selector: \"sv-ng-custom-question\",\n  template: \"<ng-template [component]='{ name: getComponentName(contentQuestion), data: { model: contentQuestion } }'></ng-template>\"\n})\nexport class CustomQuestionComponent extends QuestionAngular<QuestionCustomModel> {\n  get contentQuestion(): Question {\n    return this.model.contentQuestion;\n  }\n  getComponentName(element: Question): string { return getComponentName(element); }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"custom-question\", CustomQuestionComponent);\n","\nimport { Component } from \"@angular/core\";\nimport { AngularComponentFactory } from \"../component-factory\";\nimport { QuestionAngular } from \"../question\";\nimport { PanelModel, QuestionCompositeModel } from \"survey-core\";\n\n@Component({\n  selector: \"sv-ng-composite-question\",\n  template: \"<sv-ng-panel [model]='contentPanel'></sv-ng-panel>\"\n})\nexport class CompositeQuestionComponent extends QuestionAngular<QuestionCompositeModel> {\n  get contentPanel(): PanelModel {\n    return this.model.contentPanel;\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"composite-question\", CompositeQuestionComponent);\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { SurveyComponent } from \"./survey.component\";\nimport { PopupSurveyComponent } from \"./popup.survey.component\";\nimport { PageComponent } from \"./page.component\";\nimport { QuestionComponent } from \"./question.component\";\nimport { StringViewerComponent } from \"./string-viewer.component\";\nimport { PopupPointerComponent } from \"./components/popup/popup-pointer.component\";\nimport { PopupComponent } from \"./components/popup/popup.component\";\nimport { PopupBaseContainerComponent } from \"./components/popup/popup-container.component\";\nimport { QuestionSkeletonComponent } from \"./components/skeleton.component\";\nimport { CharacterCounterComponent } from \"./components/character-counter/character-counter.component\";\nimport { DropdownComponent } from \"./components/dropdown/dropdown.component\";\nimport { TagboxFilterComponent } from \"./components/tagbox/tagbox-filter.component\";\nimport { TagboxItemComponent } from \"./components/tagbox/tagbox-item.component\";\nimport { TagboxComponent } from \"./components/tagbox/tagbox.component\";\nimport { DropdownOptionItemComponent } from \"./components/renderAs/dropdown-select/dropdown-option-item.component\";\nimport { DropdownSelectComponent } from \"./components/renderAs/dropdown-select/dropdown-select.component\";\nimport { TextQuestionComponent } from \"./questions/text.component\";\nimport { HtmlQuestionComponent } from \"./questions/html.component\";\nimport { RadiogroupComponent } from \"./questions/radiogroup.component\";\nimport { RadiogroupItemComponent } from \"./questions/radiogroup-item.component\";\nimport { CheckboxComponent } from \"./questions/checkbox.component\";\nimport { CheckboxItemComponent } from \"./questions/checkbox-item.component\";\nimport { DropdownQuestionComponent } from \"./questions/dropdown.component\";\nimport { TagboxQuestionComponent } from \"./questions/tagbox.component\";\nimport { RatingQuestionComponent } from \"./questions/rating.component\";\nimport { BooleanQuestionComponent } from \"./questions/boolean.component\";\nimport { ImagePickerItemComponent } from \"./questions/imagepicker-item.component\";\nimport { ImagePickerQuestionComponent } from \"./questions/imagepicker.component\";\n\nimport { ActionBarComponent } from \"./components/action-bar/action-bar.component\";\nimport { ActionComponent } from \"./components/action-bar/action.component\";\nimport { ActionBarItemComponent } from \"./components/action-bar/action-bar-item.component\";\nimport { ActionBarItemDropdownComponent } from \"./components/action-bar/action-bar-item-dropdown.component\";\nimport { SelectBaseItemComponent } from \"./questions/selectbase-item\";\nimport { SelectBaseComponent } from \"./questions/selectbase.component\";\nimport { SurveyCommentComponent } from \"./comment.component\";\nimport { SurveyCommentOtherComponent } from \"./comment-other.component\";\nimport { ElementHeaderComponent } from \"./components/element-header/element-header.component\";\nimport { ElementTitleActionsComponent } from \"./components/element-title/title-actions.component\";\nimport { ElementTitleComponent } from \"./components/element-title/element-title.component\";\nimport { SurveyHeaderComponent } from \"./components/survey-header/survey-header.component\";\n\nimport { DynamicHeadComponent } from \"./components/element-title/dynamic-head.component\";\nimport { ListComponent } from \"./components/list/list.component\";\nimport { ListItemComponent } from \"./components/list/list-item.component\";\nimport { RatingItemComponent } from \"./components/rating/rating-item.component\";\nimport { RatingItemStarComponent } from \"./components/rating/rating-item-star.component\";\nimport { RatingItemSmileyComponent } from \"./components/rating/rating-item-smiley.component\";\nimport { RowComponent } from \"./row.component\";\nimport { RatingDropdownComponent } from \"./components/renderAs/rating-dropdown/rating-dropdown.component\";\nimport { BooleanCheckboxComponent } from \"./components/renderAs/boolean-checkbox/boolean-checkbox.component\";\nimport { BooleanRadioComponent } from \"./components/renderAs/boolean-radio/boolean-radio.component\";\nimport { BooleanRadioItemComponent } from \"./components/renderAs/boolean-radio/boolean-radio-item.component\";\nimport { ProgressDefaultComponent } from \"./components/progress/default/progress.component\";\nimport { ProgressButtonsComponent } from \"./components/progress/buttons/progress.component\";\nimport { ProgressTocComponent } from \"./components/progress/toc/progress.component\";\nimport { PanelComponent } from \"./panel.component\";\nimport { PopupService } from \"./components/popup/popup.service\";\nimport { SurveyNavigationButton } from \"./components/survey-actions/survey-nav-btn.component\";\nimport { MatrixQuestionComponent } from \"./questions/matrix.component\";\nimport { SvgIconComponent } from \"./components/svg-icon/svg-icon.component\";\nimport { FileQuestionComponent, } from \"./questions/file.component\";\nimport { VisibleDirective } from \"./utils/ng-show.directive\";\nimport { Key2ClickDirective } from \"./utils/ng-key2click.directive\";\nimport { SafeUrlPipe, SafeResourceUrlPipe } from \"./utils/safe-url.pipe\";\nimport { SafeHtmlPipe } from \"./utils/safe-html.pipe\";\nimport { CommentQuestionComponent } from \"./questions/comment.component\";\nimport { SignaturePadQuestionComponent } from \"./questions/signature.component\";\nimport { MultipleTextComponent } from \"./questions/multipletext.component\";\nimport { ErrorsComponent } from \"./errors.component\";\nimport { MultipleTextItemComponent } from \"./questions/multipletextitem.component\";\nimport { DynamicComponentDirective } from \"./utils/dynamic.directive\";\nimport { RankingQuestionComponent } from \"./questions/ranking.component\";\nimport { RankingItemComponent } from \"./questions/ranking-item.component\";\nimport { SurveyStringComponent } from \"./survey-string.component\";\nimport { StringEditorComponent } from \"./string-editor.component\";\nimport { PanelDynamicAddBtn } from \"./components/paneldynamic-actions/paneldynamic-add-btn.component\";\nimport { PanelDynamicNextBtn }from \"./components/paneldynamic-actions/paneldynamic-next-btn.component\";\nimport { PanelDynamicPrevBtn } from \"./components/paneldynamic-actions/paneldynamic-prev-btn.component\";\nimport { PanelDynamicProgressText } from \"./components/paneldynamic-actions/paneldynamic-progress-text.component\";\nimport { PanelDynamicQuestionComponent } from \"./questions/paneldynamic.component\";\nimport { EmbeddedViewContentComponent } from \"./embedded-view-content.component\";\nimport { ElementComponent } from \"./element.component\";\nimport { CustomWidgetComponent } from \"./questions/customwidget.component\";\nimport { MatrixCellComponent } from \"./questions/matrixcell.component\";\nimport { MatrixTableComponent } from \"./questions/matrixtable.component\";\nimport { MatrixDropdownComponent } from \"./questions/matrixdropdown.component\";\nimport { MatrixDynamicComponent } from \"./questions/matrixdynamic.component\";\nimport { MatrixDynamicRemoveButtonComponent } from \"./components/matrix-actions/remove-button/remove-button.component\";\nimport { MatrixDynamicDragDropIconComponent } from \"./components/matrix-actions/drag-drop-icon/drag-drop-icon\";\nimport { MatrixDetailButtonComponent } from \"./components/matrix-actions/detail-button/detail-button.component\";\nimport { MatrixRequiredHeader } from \"./questions/matrixrequiredheader.component\";\nimport { ExpressionComponent } from \"./questions/expression.component\";\nimport { ImageQuestionComponent } from \"./questions/image.component\";\nimport { BrandInfoComponent } from \"./components/brand-info/brand-info.component\";\nimport { CustomQuestionComponent } from \"./questions/custom.component\";\nimport { CompositeQuestionComponent } from \"./questions/composite.component\";\nimport { SurveyContentComponent } from \"./survey-content.component\";\nimport { TemplateRendererComponent } from \"./template-renderer.component\";\nimport { ModalComponent } from \"./components/popup/modal-container.component\";\nimport { ButtonGroupQuestionComponent } from \"./questions/button-group/button-group.component\";\nimport { ButtonGroupItemComponent } from \"./questions/button-group/button-group-item.component\";\nimport { MatrixRowComponent } from \"./questions/matrix-row.component\";\nimport { LogoImageComponent } from \"./components/survey-header/logo-image.component\";\nimport { SkeletonComponent } from \"./components/skeleton/skeleton.component\";\nimport { PaneldynamicRemoveButtonComponent } from \"./components/paneldynamic-actions/paneldynamic-remove-btn.component\";\nimport { TimerPanelComponent } from \"./components/timer-panel/timer-panel.component\";\nimport { NotifierComponent } from \"./components/notifier/notifier.component\";\nimport { ComponentsContainerComponent } from \"./components-container.component\";\n@NgModule({\n  declarations: [\n    VisibleDirective, Key2ClickDirective, PanelDynamicAddBtn, PanelDynamicNextBtn, PanelDynamicPrevBtn, PanelDynamicProgressText, ElementComponent, TemplateRendererComponent,\n    SurveyComponent, SurveyContentComponent, PopupSurveyComponent, PageComponent, PanelComponent, QuestionComponent, StringViewerComponent, SurveyStringComponent, StringEditorComponent,\n    QuestionSkeletonComponent, TextQuestionComponent, RadiogroupComponent, RadiogroupItemComponent, CheckboxComponent, CheckboxItemComponent,\n    DropdownComponent, DropdownQuestionComponent, DropdownSelectComponent, DropdownOptionItemComponent,\n    PopupComponent, PopupBaseContainerComponent, PopupPointerComponent,\n    CharacterCounterComponent, ListComponent, ListItemComponent, RatingItemComponent, RatingItemStarComponent, RatingItemSmileyComponent,\n    TagboxFilterComponent, TagboxComponent, TagboxQuestionComponent, TagboxItemComponent,\n    ActionBarComponent, ActionComponent, ActionBarItemComponent, ActionBarItemDropdownComponent, HtmlQuestionComponent,\n    SelectBaseItemComponent, SelectBaseComponent, SurveyCommentComponent, SurveyCommentOtherComponent, ElementHeaderComponent, ElementTitleActionsComponent, ElementTitleComponent, DynamicHeadComponent, RowComponent,\n    RatingQuestionComponent, RatingDropdownComponent, BooleanQuestionComponent, BooleanCheckboxComponent, BooleanRadioComponent, BooleanRadioItemComponent, ImagePickerItemComponent, ImagePickerQuestionComponent, ImageQuestionComponent,\n    SurveyHeaderComponent, ProgressDefaultComponent, ProgressButtonsComponent, ProgressTocComponent, SurveyNavigationButton, MatrixQuestionComponent, SvgIconComponent, FileQuestionComponent, SafeUrlPipe, SafeHtmlPipe, CommentQuestionComponent, SignaturePadQuestionComponent, ErrorsComponent,\n    MultipleTextComponent, MultipleTextItemComponent, DynamicComponentDirective, RankingQuestionComponent, RankingItemComponent, PanelDynamicQuestionComponent, EmbeddedViewContentComponent, CustomWidgetComponent, MatrixCellComponent, MatrixTableComponent, MatrixDropdownComponent,\n    MatrixDynamicComponent, MatrixDetailButtonComponent, MatrixDynamicRemoveButtonComponent, MatrixDynamicDragDropIconComponent, MatrixRequiredHeader, ExpressionComponent, SafeResourceUrlPipe, BrandInfoComponent,\n    CustomQuestionComponent, CompositeQuestionComponent, ButtonGroupItemComponent, ButtonGroupQuestionComponent, MatrixRowComponent, ModalComponent, LogoImageComponent, SkeletonComponent, TimerPanelComponent, PaneldynamicRemoveButtonComponent,\n    NotifierComponent, ComponentsContainerComponent\n  ],\n  imports: [\n    CommonModule, FormsModule\n  ],\n  exports: [\n    VisibleDirective, Key2ClickDirective, PanelDynamicAddBtn, PanelDynamicNextBtn, PanelDynamicPrevBtn, PanelDynamicProgressText, ElementComponent, TemplateRendererComponent,\n    SurveyComponent, SurveyContentComponent, PopupSurveyComponent, PageComponent, PanelComponent, QuestionComponent, StringViewerComponent, SurveyStringComponent, StringEditorComponent,\n    QuestionSkeletonComponent, TextQuestionComponent, RadiogroupComponent, RadiogroupItemComponent, CheckboxComponent, CheckboxItemComponent,\n    CharacterCounterComponent,\n    DropdownComponent, DropdownQuestionComponent, DropdownSelectComponent, DropdownOptionItemComponent,\n    PopupComponent, PopupBaseContainerComponent, PopupPointerComponent,\n    CharacterCounterComponent, ListComponent, ListItemComponent, RatingItemComponent, RatingItemStarComponent, RatingItemSmileyComponent,\n    TagboxFilterComponent, TagboxComponent, TagboxQuestionComponent, TagboxItemComponent,\n    ActionBarComponent, ActionComponent, ActionBarItemComponent, ActionBarItemDropdownComponent, HtmlQuestionComponent,\n    SelectBaseItemComponent, SelectBaseComponent, SurveyCommentComponent, SurveyCommentOtherComponent, ElementHeaderComponent, ElementTitleComponent, DynamicHeadComponent, RowComponent,\n    RatingQuestionComponent, RatingDropdownComponent, BooleanQuestionComponent, BooleanCheckboxComponent, BooleanRadioComponent, BooleanRadioItemComponent, ImagePickerItemComponent, ImagePickerQuestionComponent, ImageQuestionComponent,\n    SurveyHeaderComponent, ProgressDefaultComponent, ProgressButtonsComponent, SurveyNavigationButton, MatrixQuestionComponent, SvgIconComponent, FileQuestionComponent, SafeUrlPipe, SafeHtmlPipe, CommentQuestionComponent, SignaturePadQuestionComponent, ErrorsComponent,\n    MultipleTextComponent, MultipleTextItemComponent, DynamicComponentDirective, RankingQuestionComponent, RankingItemComponent, PanelDynamicQuestionComponent, EmbeddedViewContentComponent, CustomWidgetComponent, MatrixCellComponent, MatrixTableComponent, MatrixDropdownComponent,\n    MatrixDynamicComponent, MatrixDetailButtonComponent, MatrixDynamicRemoveButtonComponent, MatrixDynamicDragDropIconComponent, MatrixRequiredHeader, ExpressionComponent, SafeResourceUrlPipe,\n    CustomQuestionComponent, CompositeQuestionComponent, ButtonGroupQuestionComponent, ModalComponent, LogoImageComponent, SkeletonComponent, TimerPanelComponent, PaneldynamicRemoveButtonComponent,\n    NotifierComponent, ComponentsContainerComponent\n  ],\n  providers: [PopupService],\n})\nexport class SurveyModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './angular-ui';\n"],"names":["i0","TemplateRef","Component","ViewChild","Directive","Input","ViewContainerRef","i1","i2.DynamicComponentDirective","i1.ActionComponent","i2","i1.ActionBarComponent","i2.VisibleDirective","i3","i4.DynamicComponentDirective","DomPortalOutlet","portal","ComponentPortal","Injectable","createPopupModalViewModel","settings","createDialogOptions","i1.PopupService","i1.DynamicComponentDirective","i2.SurveyStringComponent","i1.DynamicHeadComponent","i2.ElementTitleActionsComponent","i1.ElementTitleComponent","ElementRef","i1.ElementComponent","i3.DynamicComponentDirective","i3.RowComponent","i4","i5.DynamicComponentDirective","SvgRegistry","i1.SurveyHeaderComponent","i2.PageComponent","i3.BrandInfoComponent","i4.NotifierComponent","i5","i6","i7.DynamicComponentDirective","i1.ModalComponent","i2.SurveyContentComponent","PopupSurveyModel","i1.SurveyComponent","TooltipManager","i1.SurveyStringComponent","HostBinding","i3.ActionBarComponent","HostListener","i1.ErrorsComponent","i2.ElementHeaderComponent","i3.SurveyStringComponent","i4.SurveyCommentComponent","i6.VisibleDirective","LocalizableString","createPopupViewModel","Survey","DropdownListModel","Helpers","i2.SvgIconComponent","i3.PopupComponent","i7.VisibleDirective","DropdownMultiSelectListModel","i1.TagboxItemComponent","i1.SurveyCommentOtherComponent","RendererFactory","Pipe","i1.SafeUrlPipe","i1.CharacterCounterComponent","i1.SafeHtmlPipe","i1.DropdownComponent","i2.SurveyCommentOtherComponent","i1.TagboxComponent","i1.SvgIconComponent","ButtonGroupItemModel","i1.ButtonGroupItemComponent","doKey2ClickUp","doKey2ClickDown","doKey2ClickBlur","i2.Key2ClickDirective","ActionDropdownViewModel","i2.PopupComponent","i3.Key2ClickDirective","i1.CheckboxItemComponent","i2.RadiogroupItemComponent","i4.VisibleDirective","i6.DynamicComponentDirective","i2.ListItemComponent","i5.VisibleDirective","i1.ElementTitleActionsComponent","i1.BooleanRadioItemComponent","SurveyProgressModel","SurveyProgressButtonsModel","getTocRootCss","createTOCListModel","i1.ListComponent","i1.ElementHeaderComponent","i2.RowComponent","i2.ActionBarComponent","i5.SafeUrlPipe","i2.ErrorsComponent","i3.TextQuestionComponent","i1.MultipleTextItemComponent","i2.PanelDynamicAddBtn","i3.PaneldynamicRemoveButtonComponent","i4.ActionBarComponent","i5.PanelDynamicPrevBtn","i6.PanelDynamicNextBtn","i7.PanelDynamicProgressText","i8","i9.DynamicComponentDirective","SurveyModel","i3.SafeHtmlPipe","i1.MatrixDynamicDragDropIconComponent","i3.ErrorsComponent","i4.SelectBaseItemComponent","i5.SurveyCommentOtherComponent","i6.SurveyStringComponent","i7","i8.DynamicComponentDirective","i9.VisibleDirective","i1.MatrixCellComponent","i2.MatrixRequiredHeader","i3.MatrixRowComponent","i4.MatrixCellComponent","i1.MatrixTableComponent","i3.SafeResourceUrlPipe","i1.PanelComponent","CommonModule","FormsModule","NgModule"],"mappings":"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"}